{
  "self_employment_income_before_lsr": {
    "file_path": "../policyengine-us/policyengine_us/variables/input/self_employment_income_before_lsr.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "self-employment income before labor supply responses"
  },
  "employment_income_before_lsr": {
    "file_path": "../policyengine-us/policyengine_us/variables/input/employment_income_before_lsr.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "employment income before labor supply responses"
  },
  "self_employment_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/input/self_employment_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "self_employment_income_before_lsr",
      "self_employment_income_behavioral_response"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "self-employment income",
    "description": "Self-employment non-farm income."
  },
  "farm_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/input/farm_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "farm income",
    "description": "Income averaging for farmers and fishermen. Schedule J. Seperate from QBI and self-employment income."
  },
  "employment_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/input/employment_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income_before_lsr",
      "employment_income_behavioral_response"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "employment income",
    "description": "Wages and salaries, including tips and commissions."
  },
  "marginal_tax_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/marginal_tax_rate.py",
    "parameters": {
      "delta": "simulation.marginal_tax_rate_delta",
      "adult_count": "simulation.marginal_tax_rate_adults"
    },
    "variables": [
      "adult_earnings_index",
      "emp_self_emp_ratio",
      "self_employment_income",
      "household_net_income",
      "employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "marginal tax rate",
    "description": "Fraction of marginal income gains that do not increase household net income.",
    "unit": "/1"
  },
  "household_net_income_including_health_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/household_net_income_including_health_benefits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "household_net_income",
      "healthcare_benefit_value"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Net income including health benefits"
  },
  "marginal_tax_rate_including_health_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/marginal_tax_rate_including_health_benefits.py",
    "parameters": {
      "delta": "simulation.marginal_tax_rate_delta",
      "adult_count": "simulation.marginal_tax_rate_adults"
    },
    "variables": [
      "adult_earnings_index",
      "household_net_income_including_health_benefits",
      "emp_self_emp_ratio",
      "self_employment_income",
      "employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Marginal tax rate including health benefits",
    "description": "Fraction of marginal income gains that do not increase household net income.",
    "unit": "/1"
  },
  "healthcare_benefit_value": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/healthcare_benefit_value.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "medicaid_cost",
      "per_capita_chip",
      "aca_ptc"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Cash equivalent of health coverage"
  },
  "emp_self_emp_ratio": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/emp_self_emp_ratio.py",
    "parameters": {},
    "variables": [
      "employment_income",
      "self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Share of earnings from wages and salaries",
    "unit": "/1"
  },
  "child_index": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/child_index.py",
    "parameters": {},
    "variables": [
      "is_child",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Index of child in household"
  },
  "takes_up_aca_if_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/takes_up_aca_if_eligible.py",
    "parameters": {
      "takeup_rate": "gov.aca.takeup_rate"
    },
    "variables": [
      "aca_take_up_seed"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether a random eligible SPM unit does not claim ACA Premium Tax Credit"
  },
  "aca_take_up_seed": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/aca_take_up_seed.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Randomly assigned seed for ACA take-up"
  },
  "is_usda_disabled": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/is_usda_disabled.py",
    "parameters": {
      "programs": "gov.usda.disabled_programs"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Disabled according to USDA criteria",
    "label": "USDA disabled status"
  },
  "has_all_usda_elderly_disabled": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/has_all_usda_elderly_disabled.py",
    "parameters": {},
    "variables": [
      "is_usda_elderly",
      "is_usda_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Whether the SPM unit's members all meet USDA definitions of elderly or disabled",
    "label": "Has all USDA elderly or disabled people"
  },
  "is_usda_elderly": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/is_usda_elderly.py",
    "parameters": {
      "elderly_age_threshold": "gov.usda.elderly_age_threshold"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Is elderly per USDA guidelines",
    "label": "USDA elderly"
  },
  "has_usda_elderly_disabled": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/has_usda_elderly_disabled.py",
    "parameters": {},
    "variables": [
      "is_usda_elderly",
      "is_usda_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Whether the SPM unit has a person who meets USDA definitions of elderly or disabled",
    "label": "Has USDA elderly or disabled people"
  },
  "fcc_fpg_ratio": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/fcc/fcc_fpg_ratio.py",
    "parameters": {},
    "variables": [
      "irs_gross_income",
      "spm_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal poverty ratio per FCC",
    "description": "SPM unit's ratio of IRS gross income to their federal poverty guideline",
    "unit": "/1"
  },
  "workers_compensation": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/workers_compensation.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "worker's compensation"
  },
  "unemployment_compensation": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/unemployment_compensation.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "unemployment compensation",
    "description": "Income from unemployment compensation programs."
  },
  "state_filing_status_if_married_filing_separately_on_same_return": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/state_filing_status_if_married_filing_separately_on_same_return.py",
    "parameters": {},
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "StateFilingStatusIfMarriedFilingSeparatelyOnSameReturn",
    "enum_options": [
      {
        "key": "SINGLE",
        "value": "Single"
      },
      {
        "key": "SEPARATE",
        "value": "Separate"
      },
      {
        "key": "HEAD_OF_HOUSEHOLD",
        "value": "Head of household"
      },
      {
        "key": "SURVIVING_SPOUSE",
        "value": "Surviving spouse"
      }
    ],
    "label": "State filing status for the tax unit if married couple file separately on same return"
  },
  "general_assistance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/general_assistance.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "general assistance"
  },
  "tax_unit_is_filer": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax_unit_is_filer.py",
    "parameters": {
      "exemption_amount": "gov.irs.income.exemption.amount"
    },
    "variables": [
      "additional_standard_deduction",
      "irs_gross_income",
      "filing_status",
      "standard_deduction",
      "earned_income",
      "income_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "files taxes",
    "description": "Whether this tax unit has a non-zero income tax liability."
  },
  "spm_unit_fpg": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/spm_unit_fpg.py",
    "parameters": {
      "p_fpg": "gov.hhs.fpg",
      "first_person": "gov.hhs.fpg.first_person",
      "additional_person": "gov.hhs.fpg.additional_person"
    },
    "variables": [
      "state_group_str",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit's federal poverty guideline"
  },
  "tax_unit_fpg": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/tax_unit_fpg.py",
    "parameters": {},
    "variables": [
      "state_group_str",
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit's federal poverty guideline"
  },
  "hhs_smi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/hhs_smi.py",
    "parameters": {
      "amount": "gov.hhs.smi.amount",
      "adjustment_mapping": "gov.hhs.smi.household_size_adjustment",
      "first_person": "gov.hhs.smi.household_size_adjustment.first_person",
      "second_to_sixth_person": "gov.hhs.smi.household_size_adjustment.second_to_sixth_person",
      "additional_person": "gov.hhs.smi.household_size_adjustment.additional_person"
    },
    "variables": [
      "state_code_str",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State Median Income (HHS)",
    "description": "SPM unit's median income as defined by the Department of Health and Human Services, based on their state and size"
  },
  "is_eligible_for_housing_assistance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/is_eligible_for_housing_assistance.py",
    "parameters": {},
    "variables": [
      "hud_income_level",
      "receives_housing_assistance"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is eligible for HUD voucher",
    "description": "HUD housing assistance payment"
  },
  "household_income_ami_ratio": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/household_income_ami_ratio.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ratio of household income to area median income"
  },
  "hud_hap": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/hud_hap.py",
    "parameters": {},
    "variables": [
      "hud_gross_rent",
      "hud_ttp",
      "hud_max_subsidy"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD housing assistance payment",
    "description": "HUD housing assistance payment"
  },
  "housing_designated_welfare": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/housing_designated_welfare.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Housing designated welfare",
    "description": "Housing designated welfare"
  },
  "hud_utility_allowance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/hud_utility_allowance.py",
    "parameters": {},
    "variables": [
      "in_la",
      "bedrooms",
      "is_sro"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "tenant_pays_utilities",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD utility allowance",
    "description": "Utility allowance for HUD programs"
  },
  "ami": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/ami.py",
    "parameters": {},
    "variables": [
      "in_denver",
      "in_la"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Area median income",
    "description": "Area median income for a four-person household"
  },
  "tax_unit_income_ami_ratio": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/tax_unit_income_ami_ratio.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ratio of tax unit income to area median income"
  },
  "housing_assistance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/housing_assistance.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "hud_hap"
    ],
    "subtracts": [],
    "defined_for": "is_eligible_for_housing_assistance",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Housing assistance",
    "description": "Housing assistance"
  },
  "hud_minimum_rent": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/hud_minimum_rent.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD minimum rent",
    "description": "Minimum Rent for HUD programs"
  },
  "hud_max_subsidy": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/hud_max_subsidy.py",
    "parameters": {},
    "variables": [
      "hud_ttp",
      "pha_payment_standard"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD max subsidy",
    "description": "Max subsidy for HUD programs"
  },
  "hud_adjusted_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/hud_adjusted_income.py",
    "parameters": {
      "ded": "gov.hud.adjusted_income.deductions",
      "threshold": "gov.hud.adjusted_income.deductions.moop.threshold",
      "amount": "gov.hud.adjusted_income.deductions.elderly_disabled.amount",
      "moop": "gov.hud.adjusted_income.deductions.moop",
      "dependent": "gov.hud.adjusted_income.deductions.dependent",
      "elderly_disabled": "gov.hud.adjusted_income.deductions.elderly_disabled"
    },
    "variables": [
      "is_hud_elderly_disabled_family",
      "hud_annual_income",
      "is_child",
      "childcare_expenses",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD adjusted income",
    "description": "Adjusted income for HUD programs"
  },
  "hud_income_level": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/hud_income_level.py",
    "parameters": {},
    "variables": [
      "hud_moderate_income_factor",
      "hud_especially_low_income_factor",
      "spm_unit_size",
      "ami",
      "hud_annual_income",
      "hud_very_low_income_factor",
      "hud_low_income_factor"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "HUDIncomeLevel",
    "enum_options": [
      {
        "key": "ABOVE_MODERATE",
        "value": "Above moderate"
      },
      {
        "key": "MODERATE",
        "value": "Moderate"
      },
      {
        "key": "LOW",
        "value": "Low"
      },
      {
        "key": "VERY_LOW",
        "value": "Very low"
      },
      {
        "key": "ESPECIALLY_LOW",
        "value": "Especially low"
      }
    ],
    "label": "HUD income level",
    "description": "Income level for HUD programs"
  },
  "is_hud_elderly_disabled_family": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/is_hud_elderly_disabled_family.py",
    "parameters": {
      "hud": "gov.hud",
      "elderly_age_threshold": "gov.hud.elderly_age_threshold"
    },
    "variables": [
      "is_child",
      "age",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD elderly or disabled family",
    "description": "Whether an SPM unit is deemed elderly or disabled for HUD purposes"
  },
  "receives_housing_assistance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/receives_housing_assistance.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Currently receives housing assistance",
    "description": "Currently receives housing assistance"
  },
  "hud_annual_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/hud_annual_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "market_income",
      "social_security",
      "ssi",
      "tanf"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD annual income",
    "description": "Annual income for HUD programs"
  },
  "hud_gross_rent": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/hud_gross_rent.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "pre_subsidy_rent",
      "hud_utility_allowance"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD gross rent",
    "description": "Gross rent for HUD programs"
  },
  "pha_payment_standard": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/pha_payment_standard.py",
    "parameters": {},
    "variables": [
      "in_la",
      "bedrooms",
      "is_sro"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD payment standard",
    "description": "Payment standard for HUD programs"
  },
  "hud_ttp_adjusted_income_share": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/ttp/hud_ttp_adjusted_income_share.py",
    "parameters": {
      "share": "gov.hud.total_tenant_payment.adjusted_income_share"
    },
    "variables": [
      "hud_adjusted_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD adjusted income share for total tenant payment",
    "description": "HUD adjusted income share for Total Tenant Payment"
  },
  "hud_ttp": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/ttp/hud_ttp.py",
    "parameters": {},
    "variables": [
      "hud_ttp_income_share",
      "housing_designated_welfare",
      "hud_minimum_rent",
      "hud_ttp_adjusted_income_share"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD total tenant payment",
    "description": "Total Tenant Payment"
  },
  "hud_ttp_income_share": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/ttp/hud_ttp_income_share.py",
    "parameters": {
      "share": "gov.hud.total_tenant_payment.income_share"
    },
    "variables": [
      "hud_annual_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD income share for total tenant payment",
    "description": "HUD income share for Total Tenant Payment"
  },
  "hud_especially_low_income_factor": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/income_level_factor/hud_especially_low_income_factor.py",
    "parameters": {
      "p": "gov.hud.ami_limit",
      "family_size_excess": "gov.hud.ami_limit.family_size_excess",
      "per_person_exceeding_4": "gov.hud.ami_limit.per_person_exceeding_4",
      "family_size": "gov.hud.ami_limit.family_size",
      "ESPECIALLY_LOW": "gov.hud.ami_limit.family_size_excess.ESPECIALLY_LOW"
    },
    "variables": [
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD Especially Low income factor",
    "description": "Especially Low income factor for HUD programs"
  },
  "hud_very_low_income_factor": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/income_level_factor/hud_very_low_income_factor.py",
    "parameters": {
      "p": "gov.hud.ami_limit",
      "family_size_excess": "gov.hud.ami_limit.family_size_excess",
      "per_person_exceeding_4": "gov.hud.ami_limit.per_person_exceeding_4",
      "family_size": "gov.hud.ami_limit.family_size",
      "VERY_LOW": "gov.hud.ami_limit.family_size_excess.VERY_LOW"
    },
    "variables": [
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD Very Low income factor",
    "description": "Very Low income factor for HUD programs"
  },
  "hud_moderate_income_factor": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/income_level_factor/hud_moderate_income_factor.py",
    "parameters": {
      "p": "gov.hud.ami_limit",
      "family_size_excess": "gov.hud.ami_limit.family_size_excess",
      "per_person_exceeding_4": "gov.hud.ami_limit.per_person_exceeding_4",
      "family_size": "gov.hud.ami_limit.family_size",
      "MODERATE": "gov.hud.ami_limit.family_size_excess.MODERATE"
    },
    "variables": [
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD Moderate income factor",
    "description": "Moderate income factor for HUD programs"
  },
  "hud_low_income_factor": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hud/income_level_factor/hud_low_income_factor.py",
    "parameters": {
      "p": "gov.hud.ami_limit",
      "family_size_excess": "gov.hud.ami_limit.family_size_excess",
      "per_person_exceeding_4": "gov.hud.ami_limit.per_person_exceeding_4",
      "family_size": "gov.hud.ami_limit.family_size",
      "LOW": "gov.hud.ami_limit.family_size_excess.LOW"
    },
    "variables": [
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "HUD Low income factor",
    "description": "Low income factor for HUD programs"
  },
  "head_start": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/head_start/head_start.py",
    "parameters": {
      "p": "gov.hhs.head_start",
      "spending": "gov.hhs.head_start.spending",
      "enrollment": "gov.hhs.head_start.enrollment"
    },
    "variables": [
      "state_code_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_head_start_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Amount of Head Start benefit"
  },
  "is_head_start_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/head_start/is_head_start_income_eligible.py",
    "parameters": {},
    "variables": [
      "adjusted_gross_income",
      "tax_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Early Head Start or Head Start income eligible"
  },
  "is_head_start_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/head_start/is_head_start_eligible.py",
    "parameters": {
      "p": "gov.hhs.head_start",
      "calc": "gov.hhs.head_start.age_range.calc",
      "age_range": "gov.hhs.head_start.age_range"
    },
    "variables": [
      "is_head_start_categorically_eligible",
      "age",
      "is_head_start_income_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Head Start program"
  },
  "early_head_start": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/head_start/early_head_start.py",
    "parameters": {
      "p": "gov.hhs.head_start.early_head_start",
      "spending": "gov.hhs.head_start.early_head_start.spending",
      "enrollment": "gov.hhs.head_start.early_head_start.enrollment"
    },
    "variables": [
      "state_code_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_early_head_start_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Amount of Early Head Start benefit"
  },
  "is_early_head_start_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/head_start/is_early_head_start_eligible.py",
    "parameters": {
      "p": "gov.hhs.head_start",
      "age_limit": "gov.hhs.head_start.early_head_start.age_limit",
      "early_head_start": "gov.hhs.head_start.early_head_start"
    },
    "variables": [
      "is_head_start_categorically_eligible",
      "is_pregnant",
      "age",
      "is_head_start_income_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Early Head Start program"
  },
  "is_head_start_categorically_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/head_start/is_head_start_categorically_eligible.py",
    "parameters": {
      "p": "gov.hhs.head_start",
      "categorical_eligibility": "gov.hhs.head_start.categorical_eligibility"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Early Head Start or Head Start program eligible"
  },
  "medicaid": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/medicaid.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "medicaid_cost"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid"
  },
  "medicaid_take_up_seed": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/medicaid_take_up_seed.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Randomly assigned seed for Medicaid take-up"
  },
  "medicaid_enrolled": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/medicaid_enrolled.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "takes_up_medicaid_if_eligible"
    ],
    "subtracts": [],
    "defined_for": "is_medicaid_eligible",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid enrolled"
  },
  "takes_up_medicaid_if_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/takes_up_medicaid_if_eligible.py",
    "parameters": {
      "takeup_rate": "gov.hhs.medicaid.takeup_rate"
    },
    "variables": [
      "medicaid_take_up_seed"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether a random eligible person unit does not enroll in Medicaid"
  },
  "medicaid_cost": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/medicaid_cost.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "medicaid_cost_if_enrolled"
    ],
    "subtracts": [],
    "defined_for": "medicaid_enrolled",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid_cost"
  },
  "is_chip_fcep_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/chip/is_chip_fcep_eligible_person.py",
    "parameters": {
      "p": "gov.hhs.chip.fcep",
      "income_limit": "gov.hhs.chip.fcep.income_limit"
    },
    "variables": [
      "is_medicaid_eligible",
      "medicaid_income_level",
      "is_pregnant",
      "immigration_status",
      "state_code"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Pregnant person eligible for CHIP through FCEP",
    "description": "Determines if a pregnant person is eligible for the Children's Health Insurance Program through the Family Coverage Extension Program"
  },
  "chip_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/chip/chip_category.py",
    "parameters": {},
    "variables": [
      "is_chip_eligible_standard_pregnant_person",
      "is_chip_eligible_child",
      "is_chip_fcep_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "CHIPCategory",
    "enum_options": [
      {
        "key": "CHILD",
        "value": "Child"
      },
      {
        "key": "PREGNANT_STANDARD",
        "value": "Pregnant - Standard"
      },
      {
        "key": "PREGNANT_FCEP",
        "value": "Pregnant - FCEP"
      },
      {
        "key": "NONE",
        "value": "None"
      }
    ],
    "label": "CHIP category",
    "description": "Category under which a person is eligible for the Children's Health Insurance Program"
  },
  "chip": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/chip/chip.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "per_capita_chip"
    ],
    "subtracts": [],
    "defined_for": "is_chip_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CHIP"
  },
  "per_capita_chip": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/chip/per_capita_chip.py",
    "parameters": {
      "p": "calibration.gov.hhs.cms.chip",
      "total": "calibration.gov.hhs.cms.chip.spending.total",
      "enrollment": "calibration.gov.hhs.cms.chip.enrollment",
      "spending": "calibration.gov.hhs.cms.chip.spending"
    },
    "variables": [
      "state_code"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_chip_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Average CHIP payment",
    "description": "Per-capita CHIP payment for this person's State."
  },
  "is_chip_eligible_standard_pregnant_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/chip/is_chip_eligible_standard_pregnant_person.py",
    "parameters": {
      "p": "gov.hhs.chip.pregnant",
      "income_limit": "gov.hhs.chip.pregnant.income_limit"
    },
    "variables": [
      "is_medicaid_eligible",
      "medicaid_income_level",
      "is_pregnant",
      "immigration_status",
      "state_code"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Pregnant person eligible for standard CHIP",
    "description": "Determines if a pregnant person is eligible for the standard Children's Health Insurance Program"
  },
  "is_chip_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/chip/is_chip_eligible.py",
    "parameters": {},
    "variables": [
      "chip_category"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "CHIP eligible"
  },
  "is_chip_eligible_pregnant": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/chip/is_chip_eligible_pregnant.py",
    "parameters": {},
    "variables": [
      "is_chip_eligible_standard_pregnant_person",
      "is_chip_fcep_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Pregnant person eligible for CHIP",
    "description": "Determines if a pregnant person is eligible for the Children's Health Insurance Program through either the standard pregnant pathway or FCEP"
  },
  "is_chip_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/chip/is_chip_eligible_child.py",
    "parameters": {
      "p": "gov.hhs.chip.child",
      "income_limit": "gov.hhs.chip.child.income_limit",
      "max_age": "gov.hhs.chip.child.max_age"
    },
    "variables": [
      "is_medicaid_eligible",
      "age",
      "medicaid_income_level",
      "immigration_status",
      "state_code"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Child eligible for CHIP",
    "description": "Determines if a child is eligible for the Children's Health Insurance Program"
  },
  "ccdf_market_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/ccdf_market_rate.py",
    "parameters": {
      "market_rate_mapping": "gov.hhs.ccdf.amount"
    },
    "variables": [
      "ccdf_duration_of_care",
      "ccdf_age_group",
      "childcare_days_per_week",
      "childcare_provider_type_group",
      "childcare_hours_per_day",
      "ccdf_county_cluster"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CCDF market rate"
  },
  "is_ccdf_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/is_ccdf_income_eligible.py",
    "parameters": {
      "p_ratio_limit": "gov.hhs.ccdf.income_limit_smi"
    },
    "variables": [
      "ccdf_income_to_smi_ratio"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Income eligibility for CCDF"
  },
  "is_ccdf_reason_for_care_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/is_ccdf_reason_for_care_eligible.py",
    "parameters": {},
    "variables": [
      "receives_or_needs_protective_services",
      "meets_ccdf_activity_test"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Indicates whether child qualifies for CCDF based on parents meeting activity test or that he/she receives or needs protective services",
    "label": "Reason-for-care eligibility for CCDF"
  },
  "is_enrolled_in_ccdf": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/is_enrolled_in_ccdf.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "CCDF enrollment status"
  },
  "is_ccdf_initial_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/is_ccdf_initial_income_eligible.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Initial income eligibility for CCDF"
  },
  "is_ccdf_continuous_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/is_ccdf_continuous_income_eligible.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Continuous income eligibility for CCDF"
  },
  "ccdf_duration_of_care": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/ccdf_duration_of_care.py",
    "parameters": {},
    "variables": [
      "childcare_hours_per_day",
      "childcare_days_per_week"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "CCDFDurationOfCare",
    "enum_options": [
      {
        "key": "WEEKLY",
        "value": "Weekly"
      },
      {
        "key": "DAILY",
        "value": "Daily"
      },
      {
        "key": "PART_DAY",
        "value": "Part-Day"
      },
      {
        "key": "HOURLY",
        "value": "Hourly"
      }
    ],
    "label": "Child care duration of care"
  },
  "is_ccdf_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/is_ccdf_eligible.py",
    "parameters": {},
    "variables": [
      "is_ccdf_age_eligible",
      "is_ccdf_asset_eligible",
      "is_ccdf_reason_for_care_eligible",
      "is_ccdf_income_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligibility for CCDF"
  },
  "is_ccdf_home_based": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/is_ccdf_home_based.py",
    "parameters": {},
    "variables": [
      "childcare_provider_type_group"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether CCDF care is home-based versus center-based"
  },
  "is_ccdf_asset_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/is_ccdf_asset_eligible.py",
    "parameters": {
      "p_asset_limit": "gov.hhs.ccdf.asset_limit"
    },
    "variables": [
      "spm_unit_assets"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Asset eligibility for CCDF"
  },
  "ccdf_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/ccdf_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "market_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Income"
  },
  "ccdf_county_cluster": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/ccdf_county_cluster.py",
    "parameters": {
      "cluster_mapping": "gov.hhs.ccdf.county_cluster",
      "_children": "gov.hhs.ccdf.county_cluster._children"
    },
    "variables": [
      "county"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "County cluster for CCDF"
  },
  "meets_ccdf_activity_test": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/meets_ccdf_activity_test.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Indicates whether parent or parents meet activity test (working/in job training/in educational program)",
    "label": "Activity test for CCDF"
  },
  "is_ccdf_age_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/is_ccdf_age_eligible.py",
    "parameters": {
      "age_limit": "gov.hhs.ccdf.age_limit"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Age eligibility for CCDF"
  },
  "ccdf_age_group": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/ccdf_age_group.py",
    "parameters": {},
    "variables": [
      "age",
      "is_ccdf_home_based"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "CCDFAgeGroup",
    "enum_options": [
      {
        "key": "INFANT",
        "value": "Infant"
      },
      {
        "key": "TODDLER",
        "value": "Toddler"
      },
      {
        "key": "PRESCHOOLER",
        "value": "Preschooler"
      },
      {
        "key": "SCHOOL_AGE",
        "value": "School age"
      }
    ],
    "label": "CCDF age group"
  },
  "ccdf_income_to_smi_ratio": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/ccdf_income_to_smi_ratio.py",
    "parameters": {},
    "variables": [
      "hhs_smi",
      "ccdf_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Income to SMI ratio"
  },
  "spm_unit_ccdf_subsidy": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/spm_unit_ccdf_subsidy.py",
    "parameters": {},
    "variables": [
      "is_ccdf_eligible",
      "spm_unit_total_ccdf_copay",
      "ccdf_market_rate"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit CCDF subsidy"
  },
  "spm_unit_total_ccdf_copay": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/ccdf/spm_unit_total_ccdf_copay.py",
    "parameters": {
      "copays": "gov.hhs.ccdf.copay_percent",
      "_children": "gov.hhs.ccdf.copay_percent._children"
    },
    "variables": [
      "county_str",
      "spm_unit_fpg",
      "ccdf_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit total CCDF copay"
  },
  "tanf_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/tanf/cash/tanf_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Reported TANF",
    "description": "Amount of Temporary Assistance for Needy Families benefit reported."
  },
  "tanf": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/tanf/cash/tanf.py",
    "parameters": {
      "p": "gov.hhs.tanf",
      "abolish_tanf": "gov.hhs.tanf.abolish_tanf"
    },
    "variables": [
      "tanf_reported"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "TANF",
    "description": "Value of Temporary Assistance for Needy Families benefit received, summing all state-specific TANF programs."
  },
  "tanf_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/tanf/cash/tanf_person.py",
    "parameters": {},
    "variables": [
      "tanf"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Per-capita TANF",
    "description": "Per-capita value of Temporary Assistance for Needy Families benefit."
  },
  "is_tanf_non_cash_hheod": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/tanf/non_cash/is_tanf_non_cash_hheod.py",
    "parameters": {
      "bbce": "gov.hhs.tanf.non_cash",
      "requires_all_for_hheod": "gov.hhs.tanf.non_cash.requires_all_for_hheod"
    },
    "variables": [
      "state_code_str",
      "has_all_usda_elderly_disabled",
      "has_usda_elderly_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Elderly or disabled for TANF non-cash benefit",
    "description": "Whether the household is considered elderly or disabled for TANF non-cash benefit for SNAP BBCE"
  },
  "is_tanf_non_cash_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/tanf/non_cash/is_tanf_non_cash_eligible.py",
    "parameters": {},
    "variables": [
      "meets_tanf_non_cash_net_income_test",
      "meets_tanf_non_cash_asset_test",
      "meets_tanf_non_cash_gross_income_test"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligibility for TANF non-cash benefit",
    "description": "Eligibility for TANF non-cash benefit for SNAP BBCE"
  },
  "meets_tanf_non_cash_net_income_test": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/tanf/non_cash/meets_tanf_non_cash_net_income_test.py",
    "parameters": {
      "applies": "gov.hhs.tanf.non_cash.income_limit.net_applies",
      "net_limit": "gov.usda.snap.income.limit.net",
      "hheod": "gov.hhs.tanf.non_cash.income_limit.net_applies.hheod",
      "non_hheod": "gov.hhs.tanf.non_cash.income_limit.net_applies.non_hheod"
    },
    "variables": [
      "snap_net_income_fpg_ratio",
      "state_code_str",
      "is_tanf_non_cash_hheod"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets net income test for TANF non-cash benefit",
    "description": "Income eligibility (net income as a percent of the poverty line) for TANF non-cash benefit for SNAP BBCE"
  },
  "meets_tanf_non_cash_asset_test": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/tanf/non_cash/meets_tanf_non_cash_asset_test.py",
    "parameters": {
      "limits": "gov.hhs.tanf.non_cash",
      "asset_limit": "gov.hhs.tanf.non_cash.asset_limit"
    },
    "variables": [
      "state_code_str",
      "snap_assets"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets asset test for TANF non-cash benefit",
    "description": "Asset eligibility for TANF non-cash benefit for SNAP BBCE"
  },
  "meets_tanf_non_cash_gross_income_test": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/tanf/non_cash/meets_tanf_non_cash_gross_income_test.py",
    "parameters": {
      "limits": "gov.hhs.tanf.non_cash.income_limit",
      "gross": "gov.hhs.tanf.non_cash.income_limit.gross"
    },
    "variables": [
      "snap_gross_income_fpg_ratio",
      "state_code_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets gross income test for TANF non-cash benefit",
    "description": "Income eligibility (gross income as a percent of the poverty line) for TANF non-cash benefit for SNAP BBCE"
  },
  "is_tanf_enrolled": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/tanf/cash/eligibility/is_tanf_enrolled.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Enrolled in TANF",
    "description": "Whether the familiy is currently enrolled in the Temporary Assistance for Needy Families program."
  },
  "is_demographic_tanf_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/tanf/cash/eligibility/is_demographic_tanf_eligible.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "is_person_demographic_tanf_eligible"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Demographic eligibility for TANF",
    "description": "Whether any person in a family applying for the Temporary Assistance for Needy Families program meets demographic requirements."
  },
  "is_person_demographic_tanf_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/tanf/cash/eligibility/is_person_demographic_tanf_eligible.py",
    "parameters": {
      "p": "gov.hhs.tanf.cash.eligibility.age_limit",
      "student": "gov.hhs.tanf.cash.eligibility.age_limit.student",
      "non_student": "gov.hhs.tanf.cash.eligibility.age_limit.non_student"
    },
    "variables": [
      "is_pregnant",
      "age",
      "is_in_secondary_school"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person demographic eligibility for TANF",
    "description": "Whether this person meets the demographic requirements for TANF eligibility"
  },
  "is_medicare_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicare/eligibility/is_medicare_eligible.py",
    "parameters": {
      "p": "gov.hhs.medicare.eligibility",
      "min_age": "gov.hhs.medicare.eligibility.min_age",
      "min_months_receiving_social_security_disability": "gov.hhs.medicare.eligibility.min_months_receiving_social_security_disability"
    },
    "variables": [
      "social_security_disability",
      "age",
      "months_receiving_social_security_disability"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is eligible for Medicare",
    "description": "CMS, Original Medicare (Part A and B) Eligibility and Enrollmenthttps://www.cms.gov/medicare/enrollment-renewal/health-plans/original-part-a-bAbove link includes the following text:  Part A coverage begins the month the individual turns age 65"
  },
  "months_receiving_social_security_disability": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicare/eligibility/months_receiving_social_security_disability.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of months person has received social security disability"
  },
  "medicaid_group": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/costs/medicaid_group.py",
    "parameters": {},
    "variables": [
      "is_medicaid_eligible",
      "is_ssi_recipient_for_medicaid",
      "is_optional_senior_or_disabled_for_medicaid",
      "medicaid_category"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "MedicaidGroup",
    "enum_options": [
      {
        "key": "CHILD",
        "value": "Child"
      },
      {
        "key": "NON_EXPANSION_ADULT",
        "value": "Non-Expansion Adult"
      },
      {
        "key": "EXPANSION_ADULT",
        "value": "Expansion Adult"
      },
      {
        "key": "AGED_DISABLED",
        "value": "Aged/Disabled"
      },
      {
        "key": "NONE",
        "value": "None"
      }
    ],
    "label": "Medicaid spending group"
  },
  "medicaid_cost_if_enrolled": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/costs/medicaid_cost_if_enrolled.py",
    "parameters": {
      "p": "calibration.gov.hhs.medicaid",
      "enrollment": "calibration.gov.hhs.medicaid.enrollment",
      "per_capita": "calibration.gov.hhs.medicaid.totals.per_capita",
      "by_eligibility_group": "calibration.gov.hhs.medicaid.spending.by_eligibility_group",
      "totals": "calibration.gov.hhs.medicaid.totals",
      "spending": "calibration.gov.hhs.medicaid.spending"
    },
    "variables": [
      "state_code",
      "medicaid_group"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_medicaid_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Per capita Medicaid cost by eligibility group & state"
  },
  "medicaid_magi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/income/medicaid_magi.py",
    "parameters": {
      "agi_additions": "gov.hhs.medicaid.income.modification"
    },
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid/CHIP/ACA-related Modified AGI",
    "description": "Medicaid/CHIP/ACA-related modified AGI for this tax unit."
  },
  "medicaid_income_level": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/income/medicaid_income_level.py",
    "parameters": {},
    "variables": [
      "tax_unit_medicaid_income_level"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid/CHIP-related income level",
    "unit": "/1",
    "description": "Modified AGI as a fraction of current-year federal poverty line."
  },
  "tax_unit_medicaid_income_level": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/income/tax_unit_medicaid_income_level.py",
    "parameters": {},
    "variables": [
      "medicaid_magi",
      "current_pregnancies",
      "state_group_str",
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid/CHIP-related modified adjusted gross income (MAGI) level",
    "unit": "/1",
    "description": "Medicaid/CHIP-related MAGI as fraction of federal poverty line.Documentation: 'Federal poverty level (FPL)' at the following URL:URL: https://www.healthcare.gov/glossary/federal-poverty-level-fpl/**Pregnant Women:**  * Pregnant women are counted as themselves plus the number of children they are expecting to deliver    when determining household size for Medicaid eligibility.  * Sources:      URL: https://www.sos.state.co.us/CCR/GenerateRulePdf.do?ruleVersionId=11618&fileName=10%20CCR%25202505-10%208.100      URL: https://www.cms.gov/marketplace/technical-assistance-resources/special-populations-pregnant-women.pdf"
  },
  "is_medicaid_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/is_medicaid_eligible.py",
    "parameters": {
      "p": "gov.hhs.medicaid.eligibility",
      "applies": "gov.hhs.medicaid.eligibility.work_requirements.applies",
      "work_requirements": "gov.hhs.medicaid.eligibility.work_requirements"
    },
    "variables": [
      "is_medicaid_immigration_status_eligible",
      "medicaid_category",
      "ca_ffyp_eligible",
      "medicaid_work_requirement_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Medicaid"
  },
  "is_medicaid_immigration_status_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/is_medicaid_immigration_status_eligible.py",
    "parameters": {
      "p": "gov.hhs.medicaid.eligibility",
      "eligible_immigration_statuses": "gov.hhs.medicaid.eligibility.eligible_immigration_statuses",
      "undocumented_immigrant": "gov.hhs.medicaid.eligibility.undocumented_immigrant"
    },
    "variables": [
      "state_code_str",
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is eligible for Medicaid due to immigration status"
  },
  "medicaid_work_requirement_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/medicaid_work_requirement_eligible.py",
    "parameters": {
      "p": "gov.hhs.medicaid.eligibility.work_requirements",
      "monthly_hours_threshold": "gov.hhs.medicaid.eligibility.work_requirements.monthly_hours_threshold",
      "dependent_age_limit": "gov.hhs.medicaid.eligibility.work_requirements.dependent_age_limit",
      "age_range": "gov.hhs.medicaid.eligibility.work_requirements.age_range",
      "calc": "gov.hhs.medicaid.eligibility.work_requirements.age_range.calc"
    },
    "variables": [
      "is_blind",
      "monthly_hours_worked",
      "age",
      "is_full_time_student",
      "is_tax_unit_dependent",
      "is_veteran",
      "is_pregnant",
      "is_disabled",
      "is_permanently_and_totally_disabled",
      "is_incapable_of_self_care"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for Medicaid via work requirement"
  },
  "medicaid_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/medicaid_category.py",
    "parameters": {
      "categories": "gov.hhs.medicaid.eligibility.categories.covered"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "MedicaidCategory",
    "enum_options": [
      {
        "key": "INFANT",
        "value": "Infant"
      },
      {
        "key": "YOUNG_CHILD",
        "value": "Young child"
      },
      {
        "key": "OLDER_CHILD",
        "value": "Older child"
      },
      {
        "key": "YOUNG_ADULT",
        "value": "Young adult"
      },
      {
        "key": "ADULT",
        "value": "Adult"
      },
      {
        "key": "PARENT",
        "value": "Parent"
      },
      {
        "key": "PREGNANT",
        "value": "Pregnant"
      },
      {
        "key": "SSI_RECIPIENT",
        "value": "SSI recipient"
      },
      {
        "key": "SENIOR_OR_DISABLED",
        "value": " Senior or disabled"
      },
      {
        "key": "NONE",
        "value": "None"
      }
    ],
    "label": "Medicaid category"
  },
  "is_optional_senior_or_disabled_for_medicaid": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/is_optional_senior_or_disabled_for_medicaid.py",
    "parameters": {},
    "variables": [
      "is_optional_senior_or_disabled_asset_eligible",
      "is_ssi_aged_blind_disabled",
      "is_optional_senior_or_disabled_income_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Seniors or disabled people not meeting SSI rules",
    "description": "Whether this person qualifies for Medicaid through the State's optional aged, blind, or disabled pathway (not otherwise SSI-eligible)"
  },
  "is_ssi_recipient_for_medicaid": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/is_ssi_recipient_for_medicaid.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories",
      "is_covered": "gov.hhs.medicaid.eligibility.categories.ssi_recipient.is_covered",
      "ssi_recipient": "gov.hhs.medicaid.eligibility.categories.ssi_recipient"
    },
    "variables": [
      "state_code_str",
      "ssi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI recipients",
    "description": "Qualifies for Medicaid due to receiving SSI, or if in a 209(b) state, due to meeting that state's eligibility requirements."
  },
  "is_optional_senior_or_disabled_asset_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/is_optional_senior_or_disabled_asset_eligible.py",
    "parameters": {
      "p": "gov.hhs.medicaid.eligibility.categories.senior_or_disabled",
      "couple": "gov.hhs.medicaid.eligibility.categories.senior_or_disabled.assets.limit.couple",
      "individual": "gov.hhs.medicaid.eligibility.categories.senior_or_disabled.assets.limit.individual",
      "limit": "gov.hhs.medicaid.eligibility.categories.senior_or_disabled.assets.limit",
      "assets": "gov.hhs.medicaid.eligibility.categories.senior_or_disabled.assets"
    },
    "variables": [
      "state_code_str",
      "tax_unit_is_joint",
      "ssi_countable_resources"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Asset-eligibility for State\u2019s optional Medicaid pathway for seniors or people with disabilities"
  },
  "is_optional_senior_or_disabled_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/is_optional_senior_or_disabled_income_eligible.py",
    "parameters": {
      "p": "gov.hhs.medicaid.eligibility.categories.senior_or_disabled",
      "couple": "gov.hhs.medicaid.eligibility.categories.senior_or_disabled.income.limit.couple",
      "individual": "gov.hhs.medicaid.eligibility.categories.senior_or_disabled.income.limit.individual",
      "disregard": "gov.hhs.medicaid.eligibility.categories.senior_or_disabled.income.disregard",
      "limit": "gov.hhs.medicaid.eligibility.categories.senior_or_disabled.income.limit",
      "income": "gov.hhs.medicaid.eligibility.categories.senior_or_disabled.income"
    },
    "variables": [
      "state_code_str",
      "ssi_countable_income",
      "tax_unit_is_joint",
      "tax_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Income-eligibility for State\u2019s optional Medicaid pathway for seniors or people with disabilities",
    "description": "True if the tax unit\u2019s countable income\u2014after the state-specific income disregard\u2014is below the income limit that the state sets for its optional pathway for aged, blind, or disabled individuals who are not otherwise SSI-eligible."
  },
  "is_in_medicaid_medically_needy_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/medically_needy/is_in_medicaid_medically_needy_category.py",
    "parameters": {
      "mn_categories": "gov.hhs.medicaid.eligibility.categories.medically_needy.categories",
      "aged_threshold": "gov.ssa.ssi.eligibility.aged_threshold",
      "child_categories": "gov.hhs.medicaid.eligibility.categories.medically_needy.categories.child.child_categories",
      "child": "gov.hhs.medicaid.eligibility.categories.medically_needy.categories.child"
    },
    "variables": [
      "age",
      "is_parent_for_medicaid_nfc",
      "is_ssi_disabled",
      "state_code_str",
      "is_pregnant_for_medicaid_nfc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "In Medicaid medically needy category",
    "description": "Whether this person is in a Medicaid category for which there is a medically needy pathway."
  },
  "is_medically_needy_for_medicaid": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/medically_needy/is_medically_needy_for_medicaid.py",
    "parameters": {
      "ma": "gov.hhs.medicaid",
      "medically_needy": "gov.hhs.medicaid.eligibility.categories.medically_needy",
      "covered": "gov.hhs.medicaid.eligibility.categories.covered",
      "categories": "gov.hhs.medicaid.eligibility.categories",
      "eligibility": "gov.hhs.medicaid.eligibility"
    },
    "variables": [
      "ssi_countable_income",
      "tax_unit_is_joint",
      "ssi_countable_resources",
      "state_code_str",
      "is_in_medicaid_medically_needy_category",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medically needy"
  },
  "is_young_child_for_medicaid_fc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/young_child/is_young_child_for_medicaid_fc.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories.young_child",
      "income_limit": "gov.hhs.medicaid.eligibility.categories.young_child.income_limit"
    },
    "variables": [
      "state_code_str",
      "medicaid_income_level"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid young child financial criteria"
  },
  "is_young_child_for_medicaid_nfc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/young_child/is_young_child_for_medicaid_nfc.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories.young_child",
      "calc": "gov.hhs.medicaid.eligibility.categories.young_child.age_range.calc",
      "age_range": "gov.hhs.medicaid.eligibility.categories.young_child.age_range"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid young child non-financial criteria"
  },
  "is_young_child_for_medicaid": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/young_child/is_young_child_for_medicaid.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Young children"
  },
  "is_young_adult_for_medicaid_fc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/young_adult/is_young_adult_for_medicaid_fc.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories.young_adult",
      "income_limit": "gov.hhs.medicaid.eligibility.categories.young_adult.income_limit"
    },
    "variables": [
      "state_code_str",
      "medicaid_income_level"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid young adult financial criteria"
  },
  "is_young_adult_for_medicaid_nfc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/young_adult/is_young_adult_for_medicaid_nfc.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories.young_adult",
      "calc": "gov.hhs.medicaid.eligibility.categories.young_adult.age_range.calc",
      "age_range": "gov.hhs.medicaid.eligibility.categories.young_adult.age_range"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid young adult non-financial criteria"
  },
  "is_young_adult_for_medicaid": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/young_adult/is_young_adult_for_medicaid.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Young adults"
  },
  "is_older_child_for_medicaid": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/older_child/is_older_child_for_medicaid.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories.older_child",
      "income_limit": "gov.hhs.medicaid.eligibility.categories.older_child.income_limit",
      "age_range": "gov.hhs.medicaid.eligibility.categories.older_child.age_range",
      "calc": "gov.hhs.medicaid.eligibility.categories.older_child.age_range.calc"
    },
    "variables": [
      "state_code_str",
      "age",
      "medicaid_income_level"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Older children"
  },
  "is_older_child_for_medicaid_nfc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/older_child/is_older_child_for_medicaid_nfc.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories.older_child",
      "calc": "gov.hhs.medicaid.eligibility.categories.older_child.age_range.calc",
      "age_range": "gov.hhs.medicaid.eligibility.categories.older_child.age_range"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid older child non-financial criteria"
  },
  "is_older_child_for_medicaid_fc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/older_child/is_older_child_for_medicaid_fc.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories.older_child",
      "income_limit": "gov.hhs.medicaid.eligibility.categories.older_child.income_limit"
    },
    "variables": [
      "state_code_str",
      "medicaid_income_level"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid older child financial criteria"
  },
  "is_parent_for_medicaid_nfc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/parent/is_parent_for_medicaid_nfc.py",
    "parameters": {},
    "variables": [
      "tax_unit_count_dependents",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid parent non-financial criteria"
  },
  "is_parent_for_medicaid": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/parent/is_parent_for_medicaid.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Parents"
  },
  "is_parent_for_medicaid_fc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/parent/is_parent_for_medicaid_fc.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories.parent",
      "income_limit": "gov.hhs.medicaid.eligibility.categories.parent.income_limit"
    },
    "variables": [
      "state_code_str",
      "medicaid_income_level"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid parent financial criteria"
  },
  "is_pregnant_for_medicaid": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/pregnant/is_pregnant_for_medicaid.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Pregnant people"
  },
  "is_pregnant_for_medicaid_fc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/pregnant/is_pregnant_for_medicaid_fc.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories.pregnant",
      "income_limit": "gov.hhs.medicaid.eligibility.categories.pregnant.income_limit"
    },
    "variables": [
      "state_code_str",
      "medicaid_income_level"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid pregnant financial criteria"
  },
  "is_pregnant_for_medicaid_nfc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/pregnant/is_pregnant_for_medicaid_nfc.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories.pregnant",
      "postpartum_coverage": "gov.hhs.medicaid.eligibility.categories.pregnant.postpartum_coverage"
    },
    "variables": [
      "state_code_str",
      "is_pregnant",
      "count_days_postpartum"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid pregnant non-financial criteria"
  },
  "is_infant_for_medicaid_fc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/infant/is_infant_for_medicaid_fc.py",
    "parameters": {
      "p": "gov.hhs.medicaid.eligibility.categories.infant",
      "income_limit": "gov.hhs.medicaid.eligibility.categories.infant.income_limit"
    },
    "variables": [
      "state_code_str",
      "medicaid_income_level"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid infant financial criteria"
  },
  "is_infant_for_medicaid": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/infant/is_infant_for_medicaid.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Infants"
  },
  "is_infant_for_medicaid_nfc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/infant/is_infant_for_medicaid_nfc.py",
    "parameters": {
      "p": "gov.hhs.medicaid.eligibility.categories.infant.age_range",
      "in_ca": "gov.hhs.medicaid.eligibility.categories.infant.age_range.in_ca",
      "in_mn": "gov.hhs.medicaid.eligibility.categories.infant.age_range.in_mn",
      "other": "gov.hhs.medicaid.eligibility.categories.infant.age_range.other"
    },
    "variables": [
      "state_code_str",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid infant non-financial criteria"
  },
  "is_adult_for_medicaid": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/adult/is_adult_for_medicaid.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Working-age and childless adults"
  },
  "is_adult_for_medicaid_fc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/adult/is_adult_for_medicaid_fc.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories.adult",
      "income_limit": "gov.hhs.medicaid.eligibility.categories.adult.income_limit"
    },
    "variables": [
      "state_code_str",
      "medicaid_income_level"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid adult financial criteria"
  },
  "is_adult_for_medicaid_nfc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/hhs/medicaid/eligibility/categories/adult/is_adult_for_medicaid_nfc.py",
    "parameters": {
      "ma": "gov.hhs.medicaid.eligibility.categories.adult",
      "calc": "gov.hhs.medicaid.eligibility.categories.adult.age_range.calc",
      "age_range": "gov.hhs.medicaid.eligibility.categories.adult.age_range"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicaid adult non-financial criteria"
  },
  "head_spouse_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax_unit/head_spouse_count.py",
    "parameters": {},
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Head and spouse count"
  },
  "tax_unit_size": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax_unit/tax_unit_size.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit size",
    "description": "Number of people in the tax unit"
  },
  "tax_unit_is_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax_unit/tax_unit_is_joint.py",
    "parameters": {},
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is joint-filing tax unit",
    "description": "Whether this tax unit is a joint filer."
  },
  "tax_unit_count_dependents": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax_unit/tax_unit_count_dependents.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "is_tax_unit_dependent"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of dependents"
  },
  "vita_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/vita/vita_eligible.py",
    "parameters": {
      "p": "gov.irs.vita.eligibility",
      "income_limit": "gov.irs.vita.eligibility.income_limit"
    },
    "variables": [
      "irs_gross_income",
      "is_disabled",
      "is_english_proficient"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the VITA program"
  },
  "filer_adjusted_earnings": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/filer_adjusted_earnings.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Filer earned income adjusted for self-employment tax"
  },
  "adjusted_earnings": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/adjusted_earnings.py",
    "parameters": {
      "p": "gov.irs.ald.misc",
      "employer_share": "gov.irs.ald.misc.employer_share",
      "self_emp_tax_adj": "gov.irs.ald.misc.self_emp_tax_adj"
    },
    "variables": [
      "earned_income",
      "self_employment_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Personal earned income adjusted for self-employment tax"
  },
  "is_tce_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tce/is_tce_eligible.py",
    "parameters": {
      "p": "gov.irs.tce",
      "age_threshold": "gov.irs.tce.age_threshold"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Tax Counseling for the Elderly program"
  },
  "income_tax_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/income_tax_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "foreign_tax_credit",
      "cdcc",
      "non_refundable_american_opportunity_credit",
      "lifetime_learning_credit",
      "savers_credit",
      "residential_clean_energy_credit",
      "energy_efficient_home_improvement_credit",
      "elderly_disabled_credit",
      "new_clean_vehicle_credit",
      "used_clean_vehicle_credit",
      "non_refundable_ctc"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "federal non-refundable income tax credits",
    "adds_from_parameter": "gov.irs.credits.non_refundable"
  },
  "other_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/other_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "other credits"
  },
  "recapture_of_investment_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/recapture_of_investment_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Recapture of Investment Credit"
  },
  "refundable_payroll_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/refundable_payroll_tax_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Refundable Payroll Tax Credit"
  },
  "income_tax_capped_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/income_tax_capped_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "income_tax_non_refundable_credits"
    ],
    "subtracts": [
      "income_tax_unavailable_non_refundable_credits"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "non-refundable tax credits",
    "description": "Capped value of non-refundable tax credits"
  },
  "amt_foreign_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/amt_foreign_tax_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "AMT foreign tax credit from Form 6251"
  },
  "income_tax_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/income_tax_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "eitc",
      "refundable_american_opportunity_credit",
      "refundable_ctc",
      "recovery_rebate_credit",
      "refundable_payroll_tax_credit"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "federal refundable income tax credits",
    "adds_from_parameter": "gov.irs.credits.refundable"
  },
  "recovery_rebate_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/recovery_rebate_credit/recovery_rebate_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "rrc_cares",
      "rrc_caa",
      "rrc_arpa"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Recovery Rebate Credit"
  },
  "rrc_caa": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/recovery_rebate_credit/rrc_caa.py",
    "parameters": {
      "rrc": "gov.irs.credits.recovery_rebate_credit",
      "rate": "gov.irs.credits.recovery_rebate_credit.caa.phase_out.rate",
      "threshold": "gov.irs.credits.recovery_rebate_credit.caa.phase_out.threshold",
      "adult": "gov.irs.credits.recovery_rebate_credit.caa.max.adult",
      "child": "gov.irs.credits.recovery_rebate_credit.caa.max.child",
      "phase_out": "gov.irs.credits.recovery_rebate_credit.caa.phase_out",
      "max": "gov.irs.credits.recovery_rebate_credit.caa.max",
      "caa": "gov.irs.credits.recovery_rebate_credit.caa"
    },
    "variables": [
      "tax_unit_is_joint",
      "filing_status",
      "ctc_qualifying_children",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Recovery Rebate Credit (CAA)"
  },
  "rrc_arpa": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/recovery_rebate_credit/rrc_arpa.py",
    "parameters": {
      "rrc": "gov.irs.credits.recovery_rebate_credit",
      "length": "gov.irs.credits.recovery_rebate_credit.arpa.phase_out.length",
      "threshold": "gov.irs.credits.recovery_rebate_credit.arpa.phase_out.threshold",
      "adult": "gov.irs.credits.recovery_rebate_credit.arpa.max.adult",
      "dependent": "gov.irs.credits.recovery_rebate_credit.arpa.max.dependent",
      "phase_out": "gov.irs.credits.recovery_rebate_credit.arpa.phase_out",
      "max": "gov.irs.credits.recovery_rebate_credit.arpa.max",
      "arpa": "gov.irs.credits.recovery_rebate_credit.arpa"
    },
    "variables": [
      "tax_unit_count_dependents",
      "filing_status",
      "tax_unit_is_joint",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Recovery Rebate Credit (ARPA)"
  },
  "rrc_cares": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/recovery_rebate_credit/rrc_cares.py",
    "parameters": {
      "rrc": "gov.irs.credits.recovery_rebate_credit",
      "rate": "gov.irs.credits.recovery_rebate_credit.cares.phase_out.rate",
      "threshold": "gov.irs.credits.recovery_rebate_credit.cares.phase_out.threshold",
      "adult": "gov.irs.credits.recovery_rebate_credit.cares.max.adult",
      "child": "gov.irs.credits.recovery_rebate_credit.cares.max.child",
      "phase_out": "gov.irs.credits.recovery_rebate_credit.cares.phase_out",
      "max": "gov.irs.credits.recovery_rebate_credit.cares.max",
      "cares": "gov.irs.credits.recovery_rebate_credit.cares"
    },
    "variables": [
      "tax_unit_is_joint",
      "filing_status",
      "ctc_qualifying_children",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Recovery Rebate Credit (CARES)"
  },
  "estate_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/estate/estate_tax_credit.py",
    "parameters": {
      "p": "gov.irs.credits.estate",
      "base": "gov.irs.credits.estate.base"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_deceased",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Estate tax credit"
  },
  "savers_credit_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/retirement_savings/savers_credit_person.py",
    "parameters": {
      "p": "gov.irs.credits.retirement_saving",
      "threshold_adjustment": "gov.irs.credits.retirement_saving.rate.threshold_adjustment",
      "joint": "gov.irs.credits.retirement_saving.rate.joint",
      "contributions_cap": "gov.irs.credits.retirement_saving.contributions_cap",
      "rate": "gov.irs.credits.retirement_saving.rate",
      "calc": "gov.irs.credits.retirement_saving.rate.joint.calc"
    },
    "variables": [
      "filing_status",
      "savers_credit_qualified_contributions",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "savers_credit_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Retirement Savings Credit for eahc individual person"
  },
  "savers_credit_potential": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/retirement_savings/savers_credit_potential.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "savers_credit_person"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Potential value of the Retirement Savings Credit"
  },
  "savers_credit_credit_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/retirement_savings/savers_credit_credit_limit.py",
    "parameters": {
      "p": "gov.irs.credits.retirement_saving",
      "preceding_credits": "gov.irs.credits.retirement_saving.preceding_credits"
    },
    "variables": [
      "income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Retirement Savings Credit"
  },
  "savers_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/retirement_savings/savers_credit.py",
    "parameters": {},
    "variables": [
      "savers_credit_potential",
      "savers_credit_credit_limit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Retirement Savings Credit"
  },
  "savers_credit_qualified_contributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/retirement_savings/savers_credit_qualified_contributions.py",
    "parameters": {
      "p": "gov.irs.credits.retirement_saving",
      "qualified_retirement_savings_contributions": "gov.irs.credits.retirement_saving.qualified_retirement_savings_contributions"
    },
    "variables": [
      "retirement_distributions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Retirement Savings Credit qualified contributions"
  },
  "savers_credit_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/retirement_savings/savers_credit_eligible_person.py",
    "parameters": {
      "p": "gov.irs.credits.retirement_saving",
      "age_threshold": "gov.irs.credits.retirement_saving.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "claimed_as_dependent_on_another_return",
      "is_full_time_student",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the retirement saving contributions credit"
  },
  "prior_year_minimum_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/prior_year_minimum_tax/prior_year_minimum_tax_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Prior year minimum tax credit",
    "description": "Prior year minimum tax credit from Form 8801"
  },
  "total_disability_payments": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/elderly_and_disabled/total_disability_payments.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Disability (total) payments",
    "description": "Wages (or payments in lieu thereof) paid to an individual for permanent and total disability"
  },
  "elderly_disabled_credit_credit_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/elderly_and_disabled/elderly_disabled_credit_credit_limit.py",
    "parameters": {
      "p": "gov.irs.credits.elderly_or_disabled",
      "preceding_credits": "gov.irs.credits.elderly_or_disabled.preceding_credits"
    },
    "variables": [
      "income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Elderly or disabled credit credit limit",
    "description": "Schedule R credit for the elderly and the disabled"
  },
  "section_22_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/elderly_and_disabled/section_22_income.py",
    "parameters": {
      "elderly_disabled": "gov.irs.credits.elderly_or_disabled",
      "age": "gov.irs.credits.elderly_or_disabled.age",
      "phase_out": "gov.irs.credits.elderly_or_disabled.phase_out",
      "amount": "gov.irs.credits.elderly_or_disabled.amount",
      "rate": "gov.irs.credits.elderly_or_disabled.phase_out.rate",
      "threshold": "gov.irs.credits.elderly_or_disabled.phase_out.threshold",
      "one_qualified": "gov.irs.credits.elderly_or_disabled.amount.one_qualified",
      "two_qualified": "gov.irs.credits.elderly_or_disabled.amount.two_qualified",
      "separate": "gov.irs.credits.elderly_or_disabled.amount.separate"
    },
    "variables": [
      "tax_unit_taxable_social_security",
      "filing_status",
      "qualifies_for_elderly_or_disabled_credit",
      "age",
      "tax_unit_social_security",
      "is_tax_unit_dependent",
      "taxable_pension_income",
      "adjusted_gross_income",
      "pension_income",
      "total_disability_payments"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Section 22 income",
    "description": "Income upon which the elderly or disabled credit is applied"
  },
  "elderly_disabled_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/elderly_and_disabled/elderly_disabled_credit.py",
    "parameters": {},
    "variables": [
      "elderly_disabled_credit_credit_limit",
      "elderly_disabled_credit_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Elderly or disabled credit",
    "description": "Schedule R credit for the elderly and the disabled"
  },
  "elderly_disabled_credit_potential": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/elderly_and_disabled/elderly_disabled_credit_potential.py",
    "parameters": {
      "p": "gov.irs.credits.elderly_or_disabled",
      "rate": "gov.irs.credits.elderly_or_disabled.rate"
    },
    "variables": [
      "section_22_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Potential value of the Elderly or disabled credit",
    "description": "Schedule R credit for the elderly and the disabled"
  },
  "foreign_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/foreign_tax/foreign_tax_credit.py",
    "parameters": {},
    "variables": [
      "foreign_tax_credit_credit_limit",
      "foreign_tax_credit_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Foreign tax credit",
    "description": "Foreign tax credit from Form 1116"
  },
  "foreign_tax_credit_potential": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/foreign_tax/foreign_tax_credit_potential.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Potential value of the Foreign tax credit",
    "description": "Foreign tax credit from Form 1116"
  },
  "foreign_tax_credit_credit_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/foreign_tax/foreign_tax_credit_credit_limit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "income_tax_before_credits"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Foreign tax credit credit limit",
    "description": "Foreign tax credit from Form 1116"
  },
  "education_tax_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/education/education_tax_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "non_refundable_american_opportunity_credit",
      "lifetime_learning_credit"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Education tax credits",
    "description": "Education tax credits non-refundable amount from Form 8863"
  },
  "lifetime_learning_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/education/lifetime_learning_credit.py",
    "parameters": {},
    "variables": [
      "lifetime_learning_credit_potential",
      "lifetime_learning_credit_credit_limit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Lifetime Learning Credit",
    "description": "Value of the non-refundable Lifetime Learning Credit"
  },
  "education_credit_phase_out": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/education/education_credit_phase_out.py",
    "parameters": {
      "education": "gov.irs.credits.education",
      "joint": "gov.irs.credits.education.phase_out.length.joint",
      "single": "gov.irs.credits.education.phase_out.length.single",
      "start": "gov.irs.credits.education.phase_out.start",
      "length": "gov.irs.credits.education.phase_out.length",
      "phase_out": "gov.irs.credits.education.phase_out"
    },
    "variables": [
      "tax_unit_is_joint",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Education credit phase-out",
    "unit": "/1",
    "description": "Percentage of the American Opportunity and Lifetime Learning credits which are phased out"
  },
  "lifetime_learning_credit_credit_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/education/lifetime_learning_credit_credit_limit.py",
    "parameters": {
      "p": "gov.irs.credits.education.lifetime_learning_credit",
      "preceding_credits": "gov.irs.credits.education.lifetime_learning_credit.preceding_credits"
    },
    "variables": [
      "income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Lifetime Learning Credit credit limit",
    "description": "Value of the non-refundable Lifetime Learning Credit"
  },
  "lifetime_learning_credit_potential": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/education/lifetime_learning_credit_potential.py",
    "parameters": {
      "education": "gov.irs.credits.education",
      "lifetime_learning_credit": "gov.irs.credits.education.lifetime_learning_credit"
    },
    "variables": [
      "education_credit_phase_out",
      "is_eligible_for_american_opportunity_credit",
      "qualified_tuition_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Potential value of the Lifetime Learning Credit",
    "description": "Value of the non-refundable Lifetime Learning Credit"
  },
  "capped_home_energy_audit_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/capped_home_energy_audit_credit.py",
    "parameters": {
      "p": "gov.irs.credits.energy_efficient_home_improvement",
      "home_energy_audit": "gov.irs.credits.energy_efficient_home_improvement.cap.annual.home_energy_audit",
      "rates": "gov.irs.credits.energy_efficient_home_improvement.rates",
      "cap": "gov.irs.credits.energy_efficient_home_improvement.cap",
      "annual": "gov.irs.credits.energy_efficient_home_improvement.cap.annual"
    },
    "variables": [
      "home_energy_audit_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped home energy audit credit",
    "description": "Capped home energy audit credit"
  },
  "energy_efficient_home_improvement_credit_credit_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/energy_efficient_home_improvement_credit_credit_limit.py",
    "parameters": {
      "p": "gov.irs.credits.energy_efficient_home_improvement",
      "preceding_credits": "gov.irs.credits.energy_efficient_home_improvement.preceding_credits"
    },
    "variables": [
      "income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Energy efficient home improvement credit credit limit",
    "description": "Residential clean energy credit"
  },
  "energy_efficient_home_improvement_credit_potential": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/energy_efficient_home_improvement_credit_potential.py",
    "parameters": {
      "p": "gov.irs.credits.energy_efficient_home_improvement",
      "in_effect": "gov.irs.credits.energy_efficient_home_improvement.in_effect",
      "qualified_expenditures": "gov.irs.credits.energy_efficient_home_improvement.qualified_expenditures",
      "cap": "gov.irs.credits.energy_efficient_home_improvement.cap",
      "credits": "gov.irs.credits.energy_efficient_home_improvement.qualified_expenditures.credits",
      "total": "gov.irs.credits.energy_efficient_home_improvement.cap.lifetime.total",
      "annual": "gov.irs.credits.energy_efficient_home_improvement.cap.annual",
      "lifetime": "gov.irs.credits.energy_efficient_home_improvement.cap.lifetime"
    },
    "variables": [
      "prior_energy_efficient_home_improvement_credits",
      "capped_heat_pump_heat_pump_water_heater_biomass_stove_boiler_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Potential value of the Energy efficient home improvement credit",
    "description": "Residential clean energy credit"
  },
  "energy_efficient_home_improvement_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/energy_efficient_home_improvement_credit.py",
    "parameters": {},
    "variables": [
      "energy_efficient_home_improvement_credit_credit_limit",
      "energy_efficient_home_improvement_credit_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Energy efficient home improvement credit",
    "description": "Residential clean energy credit"
  },
  "prior_energy_efficient_home_improvement_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/prior_energy_efficient_home_improvement_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Prior year energy efficient home improvement credit",
    "description": "Energy efficient home improvement credits claimed in prior years"
  },
  "eitc_relevant_investment_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eitc_relevant_investment_income.py",
    "parameters": {},
    "variables": [
      "net_capital_gains",
      "net_investment_income",
      "tax_exempt_interest_income",
      "loss_limited_net_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "EITC-relevant investment income"
  },
  "meets_eitc_identification_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/meets_eitc_identification_requirements.py",
    "parameters": {},
    "variables": [
      "ssn_card_type"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person meets EITC identification requirements"
  },
  "eitc_phased_in": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eitc_phased_in.py",
    "parameters": {},
    "variables": [
      "eitc_maximum",
      "filer_adjusted_earnings",
      "eitc_phase_in_rate"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "EITC phase-in amount",
    "description": "EITC maximum amount, taking into account earnings."
  },
  "eitc_phase_out_start": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eitc_phase_out_start.py",
    "parameters": {
      "eitc": "gov.irs.credits.eitc",
      "calc": "gov.irs.credits.eitc.phase_out.start.calc",
      "joint_bonus": "gov.irs.credits.eitc.phase_out.joint_bonus",
      "start": "gov.irs.credits.eitc.phase_out.start",
      "phase_out": "gov.irs.credits.eitc.phase_out"
    },
    "variables": [
      "tax_unit_is_joint",
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "EITC phase-out start",
    "description": "Earnings above this level reduce EITC entitlement."
  },
  "eitc_agi_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eitc_agi_limit.py",
    "parameters": {},
    "variables": [
      "eitc_phase_out_rate",
      "eitc_phase_out_start",
      "eitc_maximum"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maximum AGI to qualify for EITC",
    "description": "Used for state-level policies, not EITC computations"
  },
  "eitc_phase_in_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eitc_phase_in_rate.py",
    "parameters": {
      "eitc": "gov.irs.credits.eitc",
      "calc": "gov.irs.credits.eitc.phase_in_rate.calc",
      "phase_in_rate": "gov.irs.credits.eitc.phase_in_rate"
    },
    "variables": [
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "EITC phase-in rate",
    "unit": "/1",
    "description": "Rate at which the EITC phases in with income."
  },
  "eitc_maximum": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eitc_maximum.py",
    "parameters": {
      "eitc": "gov.irs.credits.eitc",
      "calc": "gov.irs.credits.eitc.max.calc",
      "max": "gov.irs.credits.eitc.max"
    },
    "variables": [
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maximum EITC"
  },
  "eitc_child_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eitc_child_count.py",
    "parameters": {},
    "variables": [
      "meets_eitc_identification_requirements",
      "is_child_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "EITC-qualifying children",
    "description": "Number of children qualifying as children for the EITC."
  },
  "filer_meets_eitc_identification_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/filer_meets_eitc_identification_requirements.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "meets_eitc_identification_requirements"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Filer meets EITC identification requirements"
  },
  "takes_up_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/takes_up_eitc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "takes up the EITC"
  },
  "eitc_phase_out_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eitc_phase_out_rate.py",
    "parameters": {
      "eitc": "gov.irs.credits.eitc",
      "calc": "gov.irs.credits.eitc.phase_out.rate.calc",
      "rate": "gov.irs.credits.eitc.phase_out.rate",
      "phase_out": "gov.irs.credits.eitc.phase_out"
    },
    "variables": [
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "EITC phase-out rate",
    "description": "Percentage of earnings above the phase-out threshold that reduce the EITC."
  },
  "eitc_reduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eitc_reduction.py",
    "parameters": {},
    "variables": [
      "eitc_phase_out_rate",
      "eitc_phase_out_start",
      "filer_adjusted_earnings",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "EITC reduction"
  },
  "eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eitc.py",
    "parameters": {},
    "variables": [
      "eitc_maximum",
      "eitc_phased_in",
      "takes_up_eitc",
      "eitc_reduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "eitc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal earned income credit"
  },
  "residential_clean_energy_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/residential_clean_energy/residential_clean_energy_credit.py",
    "parameters": {},
    "variables": [
      "residential_clean_energy_credit_potential",
      "residential_clean_energy_credit_credit_limit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Residential clean energy credit",
    "description": "Residential clean energy tax credit"
  },
  "residential_clean_energy_credit_potential": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/residential_clean_energy/residential_clean_energy_credit_potential.py",
    "parameters": {
      "p": "gov.irs.credits.residential_clean_energy",
      "fuel_cell_cap_per_kw": "gov.irs.credits.residential_clean_energy.fuel_cell_cap_per_kw",
      "applicable_percentage": "gov.irs.credits.residential_clean_energy.applicable_percentage",
      "elements": "gov.irs.credits.residential_clean_energy.elements"
    },
    "variables": [
      "fuel_cell_property_capacity",
      "fuel_cell_property_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Potential value of the Residential clean energy credit",
    "description": "Residential clean energy tax credit"
  },
  "residential_clean_energy_credit_credit_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/residential_clean_energy/residential_clean_energy_credit_credit_limit.py",
    "parameters": {
      "p": "gov.irs.credits.residential_clean_energy",
      "preceding_credits": "gov.irs.credits.residential_clean_energy.preceding_credits"
    },
    "variables": [
      "income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Residential clean energy credit credit limit",
    "description": "Residential clean energy tax credit"
  },
  "ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/ctc.py",
    "parameters": {},
    "variables": [
      "ctc_phase_out",
      "ctc_maximum_with_arpa_addition"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "filer_meets_ctc_identification_requirements",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Child Tax Credit",
    "description": "Total value of the non-refundable and refundable portions of the Child Tax Credit."
  },
  "ctc_value": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/ctc_value.py",
    "parameters": {
      "p": "gov.irs.credits.ctc.refundable",
      "fully_refundable": "gov.irs.credits.ctc.refundable.fully_refundable"
    },
    "variables": [
      "ctc_phase_in",
      "ctc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC value",
    "description": "Actual value of the Child Tax Credit"
  },
  "non_refundable_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/non_refundable_ctc.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ctc"
    ],
    "subtracts": [
      "refundable_ctc"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "non-refundable CTC",
    "description": "The portion of the Child Tax Credit that is not refundable."
  },
  "general_business_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/general_business/general_business_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "General business credit",
    "description": "General business credit from Form 3800"
  },
  "capped_count_cdcc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/cdcc/capped_count_cdcc_eligible.py",
    "parameters": {
      "cdcc": "gov.irs.credits.cdcc",
      "max": "gov.irs.credits.cdcc.eligibility.max",
      "eligibility": "gov.irs.credits.cdcc.eligibility"
    },
    "variables": [
      "count_cdcc_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped child/dependent care eligiable count"
  },
  "cdcc_credit_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/cdcc/cdcc_credit_limit.py",
    "parameters": {
      "p": "gov.irs.credits.cdcc",
      "preceding_credits": "gov.irs.credits.cdcc.preceding_credits"
    },
    "variables": [
      "income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Child/dependent care credit credit limit"
  },
  "cdcc_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/cdcc/cdcc_rate.py",
    "parameters": {
      "p": "gov.irs.credits.cdcc",
      "applies": "gov.irs.credits.cdcc.phase_out.amended_structure.applies",
      "second_start": "gov.irs.credits.cdcc.phase_out.amended_structure.second_start",
      "second_increment": "gov.irs.credits.cdcc.phase_out.amended_structure.second_increment",
      "second_min": "gov.irs.credits.cdcc.phase_out.amended_structure.second_min",
      "phase_out": "gov.irs.credits.cdcc.phase_out"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CDCC credit rate"
  },
  "spouse_earned": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/cdcc/spouse_earned.py",
    "parameters": {},
    "variables": [
      "adjusted_earnings",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Spouse's adjusted earnings"
  },
  "cdcc_relevant_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/cdcc/cdcc_relevant_expenses.py",
    "parameters": {},
    "variables": [
      "min_head_spouse_earned",
      "cdcc_limit",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CDCC-relevant care expenses"
  },
  "head_earned": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/cdcc/head_earned.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "adjusted_earnings"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Head's adjusted earnings"
  },
  "capped_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/cdcc/capped_cdcc.py",
    "parameters": {
      "p": "gov.irs.credits",
      "refundable": "gov.irs.credits.refundable"
    },
    "variables": [
      "income_tax_before_credits",
      "foreign_tax_credit",
      "cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped child/dependent care credit"
  },
  "count_cdcc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/cdcc/count_cdcc_eligible.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "is_cdcc_eligible"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "CDCC-eligible children"
  },
  "cdcc_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/cdcc/cdcc_limit.py",
    "parameters": {
      "p": "gov.irs.credits.cdcc",
      "max": "gov.irs.credits.cdcc.max"
    },
    "variables": [
      "capped_count_cdcc_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CDCC-relevant care expense limit"
  },
  "cdcc_potential": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/cdcc/cdcc_potential.py",
    "parameters": {},
    "variables": [
      "cdcc_relevant_expenses",
      "cdcc_rate"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Potential value of the Child/dependent care credit"
  },
  "min_head_spouse_earned": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/cdcc/min_head_spouse_earned.py",
    "parameters": {},
    "variables": [
      "head_earned",
      "tax_unit_is_joint",
      "spouse_earned"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Less of head and spouse's earnings"
  },
  "cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/cdcc/cdcc.py",
    "parameters": {
      "p": "gov.irs.credits",
      "refundable": "gov.irs.credits.refundable"
    },
    "variables": [
      "cdcc_credit_limit",
      "cdcc_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Child/dependent care credit"
  },
  "ctc_limiting_tax_liability": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/refundable/ctc_limiting_tax_liability.py",
    "parameters": {
      "non_refundable_credits": "gov.irs.credits.non_refundable"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC-limiting tax liability",
    "description": "The tax liability used to determine the maximum amount of the non-refundable CTC. Excludes SALT from all calculations (this is an inaccuracy required to avoid circular dependencies)."
  },
  "ctc_phase_in": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/refundable/ctc_phase_in.py",
    "parameters": {
      "ctc": "gov.irs.credits.ctc",
      "min_children_for_ss_taxes_minus_eitc": "gov.irs.credits.ctc.refundable.phase_in.min_children_for_ss_taxes_minus_eitc",
      "phase_in": "gov.irs.credits.ctc.refundable.phase_in",
      "refundable": "gov.irs.credits.ctc.refundable"
    },
    "variables": [
      "ctc_phase_in_relevant_earnings",
      "ctc_qualifying_children",
      "eitc",
      "ctc_social_security_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC phase-in"
  },
  "ctc_phase_in_relevant_earnings": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/refundable/ctc_phase_in_relevant_earnings.py",
    "parameters": {
      "ctc": "gov.irs.credits.ctc",
      "rate": "gov.irs.credits.ctc.refundable.phase_in.rate",
      "threshold": "gov.irs.credits.ctc.refundable.phase_in.threshold",
      "phase_in": "gov.irs.credits.ctc.refundable.phase_in",
      "refundable": "gov.irs.credits.ctc.refundable"
    },
    "variables": [
      "tax_unit_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Relevant earnings for the CTC phase-in"
  },
  "ctc_refundable_maximum": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/refundable/ctc_refundable_maximum.py",
    "parameters": {
      "ctc": "gov.irs.credits.ctc",
      "fully_refundable": "gov.irs.credits.ctc.refundable.fully_refundable",
      "individual_max": "gov.irs.credits.ctc.refundable.individual_max",
      "refundable": "gov.irs.credits.ctc.refundable"
    },
    "variables": [
      "ctc_child_individual_maximum_arpa",
      "ctc_child_individual_maximum"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maximum refundable CTC",
    "description": "The maximum refundable CTC for this person."
  },
  "ctc_social_security_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/refundable/ctc_social_security_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employee_social_security_tax",
      "employee_medicare_tax",
      "unreported_payroll_tax",
      "self_employment_tax_ald",
      "additional_medicare_tax"
    ],
    "subtracts": [
      "excess_payroll_tax_withheld"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Refundable Child Tax Credit Social Security Tax",
    "description": "Social Security taxes considered in the Child Tax Credit calculation",
    "adds_from_parameter": "gov.irs.credits.ctc.refundable.social_security.add",
    "subtracts_from_parameter": "gov.irs.credits.ctc.refundable.social_security.subtract"
  },
  "refundable_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/refundable/refundable_ctc.py",
    "parameters": {
      "ctc": "gov.irs.credits.ctc",
      "fully_refundable": "gov.irs.credits.ctc.refundable.fully_refundable",
      "refundable": "gov.irs.credits.ctc.refundable"
    },
    "variables": [
      "ctc_refundable_maximum",
      "ctc_phase_in",
      "ctc_phase_out",
      "ctc",
      "ctc_limiting_tax_liability"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "refundable CTC",
    "description": "The portion of the Child Tax Credit that is refundable."
  },
  "ctc_qualifying_children": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/maximum/ctc_qualifying_children.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ctc_qualifying_child"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC-qualifying children",
    "description": "Count of children that qualify for the Child Tax Credit"
  },
  "ctc_maximum_with_arpa_addition": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/maximum/ctc_maximum_with_arpa_addition.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ctc_maximum",
      "ctc_arpa_addition"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maximum CTC for ARPA",
    "description": "Maximum value of the Child Tax Credit, before phase-out, under ARPA."
  },
  "ctc_qualifying_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/maximum/ctc_qualifying_child.py",
    "parameters": {
      "p": "gov.irs.credits.ctc",
      "thresholds": "gov.irs.credits.ctc.amount.base.thresholds",
      "base": "gov.irs.credits.ctc.amount.base",
      "amount": "gov.irs.credits.ctc.amount"
    },
    "variables": [
      "meets_ctc_child_identification_requirements",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_tax_unit_dependent",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC-qualifying child",
    "description": "Child qualifies for the Child Tax Credit"
  },
  "ctc_maximum": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/maximum/ctc_maximum.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ctc_individual_maximum"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maximum CTC",
    "description": "Maximum value of the Child Tax Credit, before phase-out."
  },
  "ctc_phase_out": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/phase_out/ctc_phase_out.py",
    "parameters": {
      "p": "gov.irs.credits.ctc.phase_out",
      "amount": "gov.irs.credits.ctc.phase_out.amount",
      "increment": "gov.irs.credits.ctc.phase_out.increment"
    },
    "variables": [
      "ctc_phase_out_threshold",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC reduction from income",
    "description": "Reduction of the total CTC due to income."
  },
  "ctc_phase_out_threshold": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/phase_out/ctc_phase_out_threshold.py",
    "parameters": {
      "ctc": "gov.irs.credits.ctc",
      "threshold": "gov.irs.credits.ctc.phase_out.threshold",
      "phase_out": "gov.irs.credits.ctc.phase_out"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC phase-out threshold"
  },
  "ctc_arpa_phase_out": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/phase_out/arpa/ctc_arpa_phase_out.py",
    "parameters": {},
    "variables": [
      "ctc_arpa_phase_out_cap",
      "ctc_arpa_uncapped_phase_out"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Phase-out of CTC ARPA addition"
  },
  "ctc_arpa_phase_out_threshold": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/phase_out/arpa/ctc_arpa_phase_out_threshold.py",
    "parameters": {
      "ctc": "gov.irs.credits.ctc",
      "threshold": "gov.irs.credits.ctc.phase_out.arpa.threshold",
      "arpa": "gov.irs.credits.ctc.phase_out.arpa",
      "phase_out": "gov.irs.credits.ctc.phase_out"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC ARPA phase-out threshold"
  },
  "ctc_arpa_uncapped_phase_out": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/phase_out/arpa/ctc_arpa_uncapped_phase_out.py",
    "parameters": {
      "p": "gov.irs.credits.ctc.phase_out.arpa",
      "in_effect": "gov.irs.credits.ctc.phase_out.arpa.in_effect",
      "amount": "gov.irs.credits.ctc.phase_out.arpa.amount",
      "increment": "gov.irs.credits.ctc.phase_out.arpa.increment"
    },
    "variables": [
      "adjusted_gross_income",
      "ctc_arpa_phase_out_threshold"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Uncapped phase-out of ARPA CTC increase"
  },
  "ctc_arpa_addition": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/phase_out/arpa/ctc_arpa_addition.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ctc_arpa_max_addition"
    ],
    "subtracts": [
      "ctc_arpa_phase_out"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Additional CTC from ARPA"
  },
  "ctc_arpa_max_addition": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/phase_out/arpa/ctc_arpa_max_addition.py",
    "parameters": {
      "p": "gov.irs.credits.ctc.phase_out",
      "in_effect": "gov.irs.credits.ctc.phase_out.arpa.in_effect",
      "arpa": "gov.irs.credits.ctc.phase_out.arpa"
    },
    "variables": [
      "ctc_child_individual_maximum_arpa",
      "ctc_child_individual_maximum"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maximum additional CTC from ARPA",
    "description": "ARPA capped the additional amount based on the phase-out thresholds."
  },
  "ctc_arpa_phase_out_cap": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/phase_out/arpa/ctc_arpa_phase_out_cap.py",
    "parameters": {
      "p": "gov.irs.credits.ctc",
      "in_effect": "gov.irs.credits.ctc.phase_out.arpa.in_effect",
      "arpa_expansion_cap_percent_of_threshold_diff": "gov.irs.credits.ctc.amount.arpa_expansion_cap_percent_of_threshold_diff",
      "arpa": "gov.irs.credits.ctc.phase_out.arpa",
      "amount": "gov.irs.credits.ctc.amount",
      "phase_out": "gov.irs.credits.ctc.phase_out"
    },
    "variables": [
      "ctc_arpa_max_addition",
      "ctc_phase_out_threshold",
      "ctc_arpa_phase_out_threshold"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Cap on phase-out of ARPA CTC expansion",
    "description": "ARPA capped the additional amount based on the phase-out thresholds."
  },
  "meets_ctc_identification_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/maximum/individual/meets_ctc_identification_requirements.py",
    "parameters": {
      "p": "gov.irs.credits.ctc",
      "eligible_ssn_card_type": "gov.irs.credits.ctc.eligible_ssn_card_type"
    },
    "variables": [
      "ssn_card_type"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person meets CTC identification requirements"
  },
  "ctc_individual_maximum": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/maximum/individual/ctc_individual_maximum.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ctc_child_individual_maximum",
      "ctc_adult_individual_maximum"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC individual amount maximum",
    "description": "The Child Tax Credit entitlement in respect of this person."
  },
  "filer_meets_ctc_identification_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/maximum/individual/filer_meets_ctc_identification_requirements.py",
    "parameters": {
      "p": "gov.irs.credits.ctc",
      "adult_ssn_requirement_applies": "gov.irs.credits.ctc.adult_ssn_requirement_applies"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "meets_ctc_identification_requirements"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Filer meets CTC identification requirements"
  },
  "meets_ctc_child_identification_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/maximum/individual/meets_ctc_child_identification_requirements.py",
    "parameters": {
      "p": "gov.irs.credits.ctc",
      "child_ssn_requirement_applies": "gov.irs.credits.ctc.child_ssn_requirement_applies",
      "eligible_ssn_card_type": "gov.irs.credits.ctc.eligible_ssn_card_type"
    },
    "variables": [
      "ssn_card_type"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Child meets CTC identification requirements"
  },
  "ctc_child_individual_maximum": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/maximum/individual/ctc_child_individual_maximum.py",
    "parameters": {
      "p": "gov.irs.credits.ctc.amount",
      "calc": "gov.irs.credits.ctc.amount.base.calc",
      "base": "gov.irs.credits.ctc.amount.base"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_tax_unit_dependent",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC maximum amount (child)",
    "description": "The CTC entitlement in respect of this person as a child."
  },
  "ctc_adult_individual_maximum": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/maximum/individual/ctc_adult_individual_maximum.py",
    "parameters": {
      "p": "gov.irs.credits.ctc",
      "adult_dependent": "gov.irs.credits.ctc.amount.adult_dependent",
      "amount": "gov.irs.credits.ctc.amount"
    },
    "variables": [
      "ctc_child_individual_maximum"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_tax_unit_dependent",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC maximum amount (adult dependent)",
    "description": "The CTC entitlement in respect of this person as an adult dependent."
  },
  "ctc_child_individual_maximum_arpa": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/ctc/maximum/individual/ctc_child_individual_maximum_arpa.py",
    "parameters": {},
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ctc_qualifying_child",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC maximum amount (child under ARPA)",
    "description": "The CTC entitlement in respect of this person as a child, under the American Rescue Plan Act."
  },
  "new_clean_vehicle_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/clean_vehicle/new/new_clean_vehicle_credit.py",
    "parameters": {},
    "variables": [
      "new_clean_vehicle_credit_credit_limit",
      "new_clean_vehicle_credit_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "new_clean_vehicle_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New clean vehicle credit",
    "description": "Nonrefundable credit for the purchase of a new clean vehicle"
  },
  "new_clean_vehicle_credit_potential": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/clean_vehicle/new/new_clean_vehicle_credit_potential.py",
    "parameters": {
      "p": "gov.irs.credits.clean_vehicle.new",
      "threshold": "gov.irs.credits.clean_vehicle.new.critical_minerals.threshold",
      "amount": "gov.irs.credits.clean_vehicle.new.capacity_bonus.amount",
      "max": "gov.irs.credits.clean_vehicle.new.capacity_bonus.max",
      "kwh_threshold": "gov.irs.credits.clean_vehicle.new.capacity_bonus.kwh_threshold",
      "battery_components": "gov.irs.credits.clean_vehicle.new.battery_components",
      "critical_minerals": "gov.irs.credits.clean_vehicle.new.critical_minerals",
      "capacity_bonus": "gov.irs.credits.clean_vehicle.new.capacity_bonus",
      "base_amount": "gov.irs.credits.clean_vehicle.new.base_amount"
    },
    "variables": [
      "new_clean_vehicle_battery_capacity",
      "new_clean_vehicle_battery_critical_minerals_extracted_in_trading_partner_country",
      "new_clean_vehicle_battery_components_made_in_north_america"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "new_clean_vehicle_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Potential value of the New clean vehicle credit",
    "description": "Nonrefundable credit for the purchase of a new clean vehicle"
  },
  "new_clean_vehicle_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/clean_vehicle/new/new_clean_vehicle_credit_eligible.py",
    "parameters": {
      "p": "gov.irs.credits.clean_vehicle.new.eligibility",
      "min_kwh": "gov.irs.credits.clean_vehicle.new.eligibility.min_kwh",
      "income_limit": "gov.irs.credits.clean_vehicle.new.eligibility.income_limit",
      "msrp_limit": "gov.irs.credits.clean_vehicle.new.eligibility.msrp_limit"
    },
    "variables": [
      "new_clean_vehicle_msrp",
      "filing_status",
      "new_clean_vehicle_classification",
      "adjusted_gross_income",
      "new_clean_vehicle_battery_capacity"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "purchased_qualifying_new_clean_vehicle",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for new clean vehicle credit",
    "description": "Eligible for nonrefundable credit for the purchase of a new clean vehicle"
  },
  "new_clean_vehicle_credit_credit_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/clean_vehicle/new/new_clean_vehicle_credit_credit_limit.py",
    "parameters": {
      "p": "gov.irs.credits.clean_vehicle.new",
      "preceding_credits": "gov.irs.credits.clean_vehicle.new.preceding_credits"
    },
    "variables": [
      "income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "new_clean_vehicle_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New clean vehicle credit credit limit",
    "description": "Nonrefundable credit for the purchase of a new clean vehicle"
  },
  "used_clean_vehicle_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/clean_vehicle/used/used_clean_vehicle_credit_eligible.py",
    "parameters": {
      "p": "gov.irs.credits.clean_vehicle.used",
      "income_limit": "gov.irs.credits.clean_vehicle.used.eligibility.income_limit",
      "sale_price_limit": "gov.irs.credits.clean_vehicle.used.eligibility.sale_price_limit",
      "eligibility": "gov.irs.credits.clean_vehicle.used.eligibility"
    },
    "variables": [
      "used_clean_vehicle_sale_price",
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "purchased_qualifying_used_clean_vehicle",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for used clean vehicle credit",
    "description": "Eligible for nonrefundable credit for the purchase of a previously-owned clean vehicle"
  },
  "used_clean_vehicle_credit_credit_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/clean_vehicle/used/used_clean_vehicle_credit_credit_limit.py",
    "parameters": {
      "p": "gov.irs.credits.clean_vehicle.used",
      "preceding_credits": "gov.irs.credits.clean_vehicle.used.preceding_credits"
    },
    "variables": [
      "income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "used_clean_vehicle_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Used clean vehicle credit credit limit",
    "description": "Nonrefundable credit for the purchase of a previously-owned clean vehicle"
  },
  "used_clean_vehicle_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/clean_vehicle/used/used_clean_vehicle_credit.py",
    "parameters": {
      "p": "gov.irs.credits.clean_vehicle.used",
      "percent_of_sale_price": "gov.irs.credits.clean_vehicle.used.amount.percent_of_sale_price",
      "max": "gov.irs.credits.clean_vehicle.used.amount.max",
      "amount": "gov.irs.credits.clean_vehicle.used.amount"
    },
    "variables": [
      "used_clean_vehicle_sale_price"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "used_clean_vehicle_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Used clean vehicle credit",
    "description": "Nonrefundable credit for the purchase of a previously-owned clean vehicle"
  },
  "used_clean_vehicle_credit_potential": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/clean_vehicle/used/used_clean_vehicle_credit_potential.py",
    "parameters": {
      "p": "gov.irs.credits.clean_vehicle.used",
      "percent_of_sale_price": "gov.irs.credits.clean_vehicle.used.amount.percent_of_sale_price",
      "max": "gov.irs.credits.clean_vehicle.used.amount.max",
      "amount": "gov.irs.credits.clean_vehicle.used.amount"
    },
    "variables": [
      "used_clean_vehicle_sale_price"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "used_clean_vehicle_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Potential value of the Used clean vehicle credit",
    "description": "Nonrefundable credit for the purchase of a previously-owned clean vehicle"
  },
  "eitc_investment_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eligibility/eitc_investment_income_eligible.py",
    "parameters": {},
    "variables": [
      "eitc_relevant_investment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets investment income eligibility for EITC"
  },
  "eitc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eligibility/eitc_eligible.py",
    "parameters": {},
    "variables": [
      "eitc_investment_income_eligible",
      "filing_status",
      "filer_meets_eitc_identification_requirements",
      "eitc_demographic_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for EITC"
  },
  "eitc_demographic_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/earned_income/eligibility/eitc_demographic_eligible.py",
    "parameters": {},
    "variables": [
      "is_full_time_student",
      "age",
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets demographic eligibility for EITC"
  },
  "capped_energy_efficient_roof_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/improvements/capped_energy_efficient_roof_credit.py",
    "parameters": {
      "p": "gov.irs.credits.energy_efficient_home_improvement",
      "improvements": "gov.irs.credits.energy_efficient_home_improvement.rates.improvements",
      "rates": "gov.irs.credits.energy_efficient_home_improvement.rates",
      "cap": "gov.irs.credits.energy_efficient_home_improvement.cap",
      "roof": "gov.irs.credits.energy_efficient_home_improvement.cap.annual.roof",
      "annual": "gov.irs.credits.energy_efficient_home_improvement.cap.annual"
    },
    "variables": [
      "energy_efficient_roof_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped credit on energy-efficient roof credit",
    "description": "Capped credit on energy-efficient roof materials"
  },
  "capped_energy_efficient_window_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/improvements/capped_energy_efficient_window_credit.py",
    "parameters": {
      "p": "gov.irs.credits.energy_efficient_home_improvement",
      "improvements": "gov.irs.credits.energy_efficient_home_improvement.rates.improvements",
      "rates": "gov.irs.credits.energy_efficient_home_improvement.rates",
      "cap": "gov.irs.credits.energy_efficient_home_improvement.cap",
      "window": "gov.irs.credits.energy_efficient_home_improvement.cap.lifetime.window",
      "annual": "gov.irs.credits.energy_efficient_home_improvement.cap.annual",
      "lifetime": "gov.irs.credits.energy_efficient_home_improvement.cap.lifetime"
    },
    "variables": [
      "prior_energy_efficient_window_credits",
      "energy_efficient_window_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped energy efficient window credit",
    "description": "Capped credit on energy-efficient exterior window and skylights"
  },
  "prior_energy_efficient_window_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/improvements/prior_energy_efficient_window_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Prior years energy efficient window credit",
    "description": "Energy efficient window credits claimed in prior years"
  },
  "capped_energy_efficient_insulation_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/improvements/capped_energy_efficient_insulation_credit.py",
    "parameters": {
      "p": "gov.irs.credits.energy_efficient_home_improvement",
      "improvements": "gov.irs.credits.energy_efficient_home_improvement.rates.improvements",
      "rates": "gov.irs.credits.energy_efficient_home_improvement.rates",
      "cap": "gov.irs.credits.energy_efficient_home_improvement.cap",
      "insulation_material": "gov.irs.credits.energy_efficient_home_improvement.cap.annual.insulation_material",
      "annual": "gov.irs.credits.energy_efficient_home_improvement.cap.annual"
    },
    "variables": [
      "capped_insulation_air_sealing_ventilation_rebate",
      "energy_efficient_insulation_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped energy efficient insulation credit",
    "description": "Capped credit on energy-efficient insulation material"
  },
  "capped_energy_efficient_door_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/improvements/capped_energy_efficient_door_credit.py",
    "parameters": {
      "p": "gov.irs.credits.energy_efficient_home_improvement",
      "improvements": "gov.irs.credits.energy_efficient_home_improvement.rates.improvements",
      "rates": "gov.irs.credits.energy_efficient_home_improvement.rates",
      "cap": "gov.irs.credits.energy_efficient_home_improvement.cap",
      "door": "gov.irs.credits.energy_efficient_home_improvement.cap.annual.door",
      "annual": "gov.irs.credits.energy_efficient_home_improvement.cap.annual"
    },
    "variables": [
      "energy_efficient_door_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped energy-efficient exterior door credit",
    "description": "Capped energy-efficient exterior door credit"
  },
  "capped_energy_efficient_central_air_conditioner_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/property/capped_energy_efficient_central_air_conditioner_credit.py",
    "parameters": {
      "p": "gov.irs.credits.energy_efficient_home_improvement",
      "property": "gov.irs.credits.energy_efficient_home_improvement.rates.property",
      "rates": "gov.irs.credits.energy_efficient_home_improvement.rates",
      "cap": "gov.irs.credits.energy_efficient_home_improvement.cap",
      "energy_efficient_central_air_conditioner": "gov.irs.credits.energy_efficient_home_improvement.cap.annual.energy_efficient_central_air_conditioner",
      "energy_efficient_building_property": "gov.irs.credits.energy_efficient_home_improvement.cap.annual.energy_efficient_building_property",
      "annual": "gov.irs.credits.energy_efficient_home_improvement.cap.annual"
    },
    "variables": [
      "energy_efficient_central_air_conditioner_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped energy efficient central air conditioner credit",
    "description": "Capped energy-efficient central air conditioner expenditures"
  },
  "capped_advanced_main_air_circulating_fan_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/property/capped_advanced_main_air_circulating_fan_credit.py",
    "parameters": {
      "p": "gov.irs.credits.energy_efficient_home_improvement",
      "property": "gov.irs.credits.energy_efficient_home_improvement.rates.property",
      "rates": "gov.irs.credits.energy_efficient_home_improvement.rates",
      "cap": "gov.irs.credits.energy_efficient_home_improvement.cap",
      "advanced_main_air_circulating_fan": "gov.irs.credits.energy_efficient_home_improvement.cap.annual.advanced_main_air_circulating_fan",
      "energy_efficient_building_property": "gov.irs.credits.energy_efficient_home_improvement.cap.annual.energy_efficient_building_property",
      "annual": "gov.irs.credits.energy_efficient_home_improvement.cap.annual"
    },
    "variables": [
      "advanced_main_air_circulating_fan_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped advanced main air circulating fan credit",
    "description": "Capped advanced main air circulating fan credit"
  },
  "capped_qualified_furnace_or_hot_water_boiler_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/property/capped_qualified_furnace_or_hot_water_boiler_credit.py",
    "parameters": {
      "p": "gov.irs.credits.energy_efficient_home_improvement",
      "property": "gov.irs.credits.energy_efficient_home_improvement.rates.property",
      "rates": "gov.irs.credits.energy_efficient_home_improvement.rates",
      "cap": "gov.irs.credits.energy_efficient_home_improvement.cap",
      "qualified_furnace_or_hot_water_boiler": "gov.irs.credits.energy_efficient_home_improvement.cap.annual.qualified_furnace_or_hot_water_boiler",
      "energy_efficient_building_property": "gov.irs.credits.energy_efficient_home_improvement.cap.annual.energy_efficient_building_property",
      "annual": "gov.irs.credits.energy_efficient_home_improvement.cap.annual"
    },
    "variables": [
      "qualified_furnace_or_hot_water_boiler_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped qualified furnace or hot water boiler credit",
    "description": "Capped qualified furnace or hot water boiler credit"
  },
  "capped_heat_pump_heat_pump_water_heater_biomass_stove_boiler_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/energy_efficient_home_improvement/property/capped_heat_pump_heat_pump_water_heater_biomass_stove_boiler_credit.py",
    "parameters": {
      "p": "gov.irs.credits.energy_efficient_home_improvement",
      "property": "gov.irs.credits.energy_efficient_home_improvement.rates.property",
      "heat_pump_heat_pump_water_heater_biomass_stove_boiler": "gov.irs.credits.energy_efficient_home_improvement.qualified_expenditures.heat_pump_heat_pump_water_heater_biomass_stove_boiler",
      "rates": "gov.irs.credits.energy_efficient_home_improvement.rates",
      "cap": "gov.irs.credits.energy_efficient_home_improvement.cap",
      "qualified_expenditures": "gov.irs.credits.energy_efficient_home_improvement.qualified_expenditures",
      "annual": "gov.irs.credits.energy_efficient_home_improvement.cap.annual",
      "energy_efficient_building_property": "gov.irs.credits.energy_efficient_home_improvement.cap.annual.energy_efficient_building_property"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped credit on heat pumps, heat pump water heaters, and biomass stoves and boilers",
    "description": "Capped credit on heat pumps, heat pump water heaters, and biomass stoves and boilers"
  },
  "non_refundable_american_opportunity_credit_credit_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/education/american_opportunity_credit/non_refundable_american_opportunity_credit_credit_limit.py",
    "parameters": {
      "p": "gov.irs.credits.education.american_opportunity_credit",
      "preceding_credits": "gov.irs.credits.education.american_opportunity_credit.preceding_credits"
    },
    "variables": [
      "income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Non-refundable American Opportunity Credit credit limit",
    "description": "Value of the non-refundable portion of the American Opportunity Credit"
  },
  "non_refundable_american_opportunity_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/education/american_opportunity_credit/non_refundable_american_opportunity_credit.py",
    "parameters": {},
    "variables": [
      "non_refundable_american_opportunity_credit_credit_limit",
      "non_refundable_american_opportunity_credit_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Non-refundable American Opportunity Credit",
    "description": "Value of the non-refundable portion of the American Opportunity Credit"
  },
  "american_opportunity_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/education/american_opportunity_credit/american_opportunity_credit.py",
    "parameters": {
      "education": "gov.irs.credits.education",
      "american_opportunity_credit": "gov.irs.credits.education.american_opportunity_credit"
    },
    "variables": [
      "education_credit_phase_out",
      "is_eligible_for_american_opportunity_credit",
      "qualified_tuition_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "American Opportunity Credit",
    "description": "Total value of the American Opportunity Credit"
  },
  "is_eligible_for_american_opportunity_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/education/american_opportunity_credit/is_eligible_for_american_opportunity_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for American Opportunity Credit",
    "description": "Whether the person is eligible for the AOC in respect of qualified tuition expenses for this tax year. The expenses must be for one of the first four years of post-secondary education, and the person must not have claimed the AOC for any four previous tax years."
  },
  "non_refundable_american_opportunity_credit_potential": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/education/american_opportunity_credit/non_refundable_american_opportunity_credit_potential.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "american_opportunity_credit"
    ],
    "subtracts": [
      "refundable_american_opportunity_credit"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Potential value of the Non-refundable American Opportunity Credit",
    "description": "Value of the non-refundable portion of the American Opportunity Credit"
  },
  "refundable_american_opportunity_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/credits/education/american_opportunity_credit/refundable_american_opportunity_credit.py",
    "parameters": {
      "aoc": "gov.irs.credits.education.american_opportunity_credit",
      "refundability": "gov.irs.credits.education.american_opportunity_credit.refundability"
    },
    "variables": [
      "american_opportunity_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Refundable American Opportunity Credit",
    "description": "Value of the refundable portion of the American Opportunity Credit"
  },
  "estate_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/estate/estate_tax_before_credits.py",
    "parameters": {
      "p": "gov.irs.tax.estate.rate",
      "calc": "gov.irs.tax.estate.rate.calc"
    },
    "variables": [
      "taxable_estate_value"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Estate tax before credits",
    "bracket_parameters": {
      "p": "gov.irs.tax.estate.rate"
    },
    "parameter_details": {
      "p": {
        "path": "gov.irs.tax.estate.rate",
        "type": "bracket",
        "brackets": [
          {
            "threshold": 0,
            "amount": null
          },
          {
            "threshold": 10000,
            "amount": null
          },
          {
            "threshold": 20000,
            "amount": null
          },
          {
            "threshold": 40000,
            "amount": null
          },
          {
            "threshold": 60000,
            "amount": null
          },
          {
            "threshold": 80000,
            "amount": null
          },
          {
            "threshold": 100000,
            "amount": null
          },
          {
            "threshold": 150000,
            "amount": null
          },
          {
            "threshold": 250000,
            "amount": null
          },
          {
            "threshold": 500000,
            "amount": null
          },
          {
            "threshold": 750000,
            "amount": null
          },
          {
            "threshold": 1000000,
            "amount": null
          }
        ],
        "description": "The IRS taxes estate at the following rates."
      }
    }
  },
  "estate_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/estate/estate_tax.py",
    "parameters": {},
    "variables": [
      "estate_tax_before_credits",
      "estate_tax_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Estate tax"
  },
  "self_employment_medicare_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/self_employment/self_employment_medicare_tax.py",
    "parameters": {
      "p": "gov.irs.self_employment.rate",
      "medicare": "gov.irs.self_employment.rate.medicare"
    },
    "variables": [
      "taxable_self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employment Medicare tax"
  },
  "social_security_taxable_self_employment_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/self_employment/social_security_taxable_self_employment_income.py",
    "parameters": {
      "p": "gov.irs.payroll.social_security",
      "cap": "gov.irs.payroll.social_security.cap"
    },
    "variables": [
      "taxable_earnings_for_social_security",
      "taxable_self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable self-employment income for computing Social Security tax"
  },
  "self_employment_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/self_employment/self_employment_tax.py",
    "parameters": {},
    "variables": [
      "self_employment_medicare_tax",
      "self_employment_social_security_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "self-employment tax"
  },
  "self_employment_social_security_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/self_employment/self_employment_social_security_tax.py",
    "parameters": {
      "p": "gov.irs.self_employment.rate",
      "social_security": "gov.irs.self_employment.rate.social_security"
    },
    "variables": [
      "social_security_taxable_self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employment Social Security tax"
  },
  "taxable_self_employment_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/self_employment/taxable_self_employment_income.py",
    "parameters": {
      "p": "gov.irs",
      "social_security": "gov.irs.self_employment.rate.social_security",
      "medicare": "gov.irs.self_employment.rate.medicare",
      "employer_share": "gov.irs.ald.misc.employer_share",
      "rate": "gov.irs.self_employment.rate",
      "net_earnings_exemption": "gov.irs.self_employment.net_earnings_exemption",
      "misc": "gov.irs.ald.misc",
      "self_employment": "gov.irs.self_employment",
      "ald": "gov.irs.ald"
    },
    "variables": [
      "s_corp_self_employment_income",
      "farm_income",
      "self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable self-employment income"
  },
  "excess_payroll_tax_withheld": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/payroll/excess_payroll_tax_withheld.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Excess payroll (FICA/RRTA) tax withheld"
  },
  "unreported_payroll_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/payroll/unreported_payroll_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Unreported payroll taxes from Form 4137 or 8919"
  },
  "payroll_tax_gross_wages": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/payroll/payroll_tax_gross_wages.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "irs_employment_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Gross wages and salaries for payroll taxes"
  },
  "employee_payroll_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/payroll/employee_payroll_tax.py",
    "parameters": {},
    "variables": [
      "employee_medicare_tax",
      "employee_social_security_tax",
      "additional_medicare_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "employee-side payroll tax"
  },
  "additional_medicare_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/additional_medicare_tax.py",
    "parameters": {
      "amc": "gov.irs.payroll.medicare.additional",
      "exclusion": "gov.irs.payroll.medicare.additional.exclusion",
      "rate": "gov.irs.payroll.medicare.additional.rate"
    },
    "variables": [
      "filing_status",
      "taxable_self_employment_income",
      "irs_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Additional Medicare Tax",
    "description": "Additional Medicare Tax from Form 8959 (included in payrolltax)"
  },
  "amt_form_completed": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/amt_form_completed.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "AMT form completed"
  },
  "net_investment_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/net_investment_income_tax.py",
    "parameters": {
      "p": "gov.irs.investment.net_investment_income_tax",
      "threshold": "gov.irs.investment.net_investment_income_tax.threshold",
      "rate": "gov.irs.investment.net_investment_income_tax.rate"
    },
    "variables": [
      "net_investment_income",
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Net Investment Income Tax"
  },
  "income_tax_excluding_ptc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/income_tax_excluding_ptc.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "income_tax"
    ],
    "subtracts": [
      "aca_ptc"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "income tax (excluding PTC)"
  },
  "income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "qualified_retirement_penalty",
      "income_tax_before_credits",
      "net_investment_income_tax",
      "income_tax_capped_non_refundable_credits",
      "recapture_of_investment_credit",
      "unreported_payroll_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal income tax before refundable credits",
    "description": "Income tax liability (including other taxes) after non-refundable credits are used, but before refundable credits are applied"
  },
  "net_investment_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/net_investment_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "taxable_interest_income",
      "dividend_income",
      "rental_income",
      "loss_limited_net_capital_gains"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "net investment income (NII) that is base of the NII Tax (NIIT)",
    "adds_from_parameter": "gov.irs.investment.income.sources"
  },
  "income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/income_tax.py",
    "parameters": {},
    "variables": [
      "income_tax_before_refundable_credits",
      "income_tax_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal income tax",
    "description": "Total federal individual income tax liability."
  },
  "income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/before_credits/income_tax_before_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "income_tax_main_rates",
      "capital_gains_tax",
      "alternative_minimum_tax"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "income tax before credits",
    "description": "Total (regular + AMT) income tax liability before credits"
  },
  "income_tax_main_rates": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/before_credits/income_tax_main_rates.py",
    "parameters": {
      "p": "gov.irs.income",
      "thresholds": "gov.irs.income.bracket.thresholds",
      "rates": "gov.irs.income.bracket.rates",
      "bracket": "gov.irs.income.bracket"
    },
    "variables": [
      "capital_gains_excluded_from_taxable_income",
      "filing_status",
      "taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Income tax main rates"
  },
  "amt_part_iii_required": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/alternative_minimum_tax/amt_part_iii_required.py",
    "parameters": {},
    "variables": [
      "dwks10",
      "dwks19",
      "dwks14",
      "unrecaptured_section_1250_gain",
      "dwks13"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Alternative Minimum Tax Part III required",
    "description": "Whether the Alternative Minimum Tax (AMT) Part III worksheet is required, Form 6251, Part III"
  },
  "alternative_minimum_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/alternative_minimum_tax/alternative_minimum_tax.py",
    "parameters": {},
    "variables": [
      "amt_tax_including_cg",
      "amt_part_iii_required",
      "capital_gains_tax",
      "foreign_tax_credit_potential",
      "amt_base_tax",
      "form_4972_lumpsum_distributions",
      "regular_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alternative Minimum Tax",
    "description": "Alternative Minimum Tax (AMT) liability"
  },
  "regular_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/alternative_minimum_tax/regular_tax_before_credits.py",
    "parameters": {
      "capital_gains": "gov.irs.income.amt.capital_gains",
      "brackets": "gov.irs.income.amt.brackets",
      "p": "gov.irs.income",
      "thresholds": "gov.irs.capital_gains.brackets.thresholds",
      "rates": "gov.irs.income.amt.brackets.rates",
      "capital_gain_excess_tax_rate": "gov.irs.income.amt.capital_gains.capital_gain_excess_tax_rate",
      "bracket": "gov.irs.income.bracket",
      "amt": "gov.irs.income.amt"
    },
    "variables": [
      "filing_status",
      "taxable_income",
      "dwks09",
      "income_tax_main_rates",
      "has_qdiv_or_ltcg",
      "dwks10",
      "dwks19",
      "dwks14",
      "unrecaptured_section_1250_gain",
      "dwks13"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Regular tax before credits",
    "description": "Regular tax on regular taxable income before credits"
  },
  "amt_tax_including_cg": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/alternative_minimum_tax/amt_tax_including_cg.py",
    "parameters": {
      "p": "gov.irs",
      "thresholds": "gov.irs.capital_gains.brackets.thresholds",
      "rates": "gov.irs.capital_gains.brackets.rates",
      "calc": "gov.irs.income.amt.brackets.calc",
      "brackets": "gov.irs.capital_gains.brackets",
      "capital_gain_excess_tax_rate": "gov.irs.income.amt.capital_gains.capital_gain_excess_tax_rate",
      "amt": "gov.irs.income.amt",
      "capital_gains": "gov.irs.capital_gains",
      "income": "gov.irs.income"
    },
    "variables": [
      "filing_status",
      "amt_income_less_exemptions",
      "dwks10",
      "dwks14",
      "unrecaptured_section_1250_gain",
      "dwks13",
      "loss_limited_net_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alternative Minimum Tax computed using the capital gains rates",
    "description": "Alternative Minimum Tax (AMT) liability computed using the capital gains rates, Form 6251, Part III"
  },
  "adjusted_net_capital_gain": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/capital_gains/adjusted_net_capital_gain.py",
    "parameters": {},
    "variables": [
      "unrecaptured_section_1250_gain",
      "net_capital_gain",
      "qualified_dividend_income",
      "capital_gains_28_percent_rate_gain"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Adjusted net capital gain",
    "description": "The excess of net long-term capital gain over net short-term capital loss."
  },
  "dwks14": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/capital_gains/dwks14.py",
    "parameters": {},
    "variables": [
      "dwks13",
      "taxable_income",
      "has_qdiv_or_ltcg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IRS Form 1040 Schedule D worksheet (part 5 of 6)"
  },
  "dwks10": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/capital_gains/dwks10.py",
    "parameters": {},
    "variables": [
      "dwks09",
      "non_sch_d_capital_gains",
      "qualified_dividend_income",
      "long_term_capital_gains",
      "has_qdiv_or_ltcg",
      "net_capital_gains",
      "dividend_income_reduced_by_investment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IRS Form 1040 Schedule D worksheet (part 3 of 6)"
  },
  "net_capital_gain": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/capital_gains/net_capital_gain.py",
    "parameters": {},
    "variables": [
      "short_term_capital_gains",
      "qualified_dividend_income",
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Net capital gain",
    "description": "The excess of net long-term capital gain over net short-term capitalloss, plus qualified dividends (the definition of \"net capital gain\"which applies to 26 U.S.C. \u00a7 1(h) from \u00a7 1(h)(11))."
  },
  "capital_gains_excluded_from_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/capital_gains/capital_gains_excluded_from_taxable_income.py",
    "parameters": {
      "cg": "gov.irs.capital_gains.brackets",
      "thresholds": "gov.irs.capital_gains.brackets.thresholds"
    },
    "variables": [
      "net_capital_gain",
      "filing_status",
      "taxable_income",
      "adjusted_net_capital_gain"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capital gains excluded from taxable income",
    "description": "This is subtracted from taxable income before applying the ordinary tax rates. Capital gains tax is calculated separately."
  },
  "capital_gains_28_percent_rate_gain": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/capital_gains/capital_gains_28_percent_rate_gain.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "long_term_capital_gains_on_collectibles",
      "long_term_capital_gains_on_small_business_stock"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "28-percent rate gain",
    "description": "Includes collectibles and certain small business stock gains. These are taxed at a higher (28-percent) rate than other capital gains, while a proportion is excluded from taxable income."
  },
  "dwks09": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/capital_gains/dwks09.py",
    "parameters": {},
    "variables": [
      "non_sch_d_capital_gains",
      "qualified_dividend_income",
      "investment_income_form_4952",
      "long_term_capital_gains",
      "net_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IRS Form 1040 Schedule D worksheet (part 2 of 6)"
  },
  "dwks19": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/capital_gains/dwks19.py",
    "parameters": {
      "capital_gains": "gov.irs.capital_gains.brackets",
      "thresholds": "gov.irs.capital_gains.brackets.thresholds"
    },
    "variables": [
      "filing_status",
      "taxable_income",
      "has_qdiv_or_ltcg",
      "dwks10",
      "dwks14"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IRS Form 1040 Schedule D worksheet (part 6 of 6)"
  },
  "dividend_income_reduced_by_investment_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/capital_gains/dividend_income_reduced_by_investment_income.py",
    "parameters": {},
    "variables": [
      "qualified_dividend_income",
      "investment_income_form_4952"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Dividend income reduced by investment income",
    "description": "IRS Form 1040 Schedule D worksheet (part 1 of 6)"
  },
  "capital_gains_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/capital_gains/capital_gains_tax.py",
    "parameters": {
      "cg": "gov.irs.capital_gains",
      "thresholds": "gov.irs.capital_gains.brackets.thresholds",
      "rates": "gov.irs.capital_gains.brackets.rates",
      "unrecaptured_s_1250_rate": "gov.irs.capital_gains.unrecaptured_s_1250_rate",
      "other_cg_rate": "gov.irs.capital_gains.other_cg_rate",
      "brackets": "gov.irs.capital_gains.brackets"
    },
    "variables": [
      "unrecaptured_section_1250_gain",
      "capital_gains_28_percent_rate_gain",
      "filing_status",
      "taxable_income",
      "adjusted_net_capital_gain",
      "capital_gains_excluded_from_taxable_income",
      "qualified_dividend_income",
      "net_capital_gain"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maximum income tax after capital gains tax"
  },
  "dwks13": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/capital_gains/dwks13.py",
    "parameters": {},
    "variables": [
      "capital_gains_28_percent_rate_gain",
      "dwks09",
      "has_qdiv_or_ltcg",
      "dwks10",
      "unrecaptured_section_1250_gain"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IRS Form 1040 Schedule D worksheet (part 4 of 6)"
  },
  "amt_lower_base_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/alternative_minimum_tax/base_tax/amt_lower_base_tax.py",
    "parameters": {
      "p": "gov.irs.income.amt",
      "multiplier": "gov.irs.income.amt.multiplier",
      "brackets": "gov.irs.income.amt.brackets",
      "rates": "gov.irs.income.amt.brackets.rates",
      "thresholds": "gov.irs.income.amt.brackets.thresholds"
    },
    "variables": [
      "filing_status",
      "amt_income_less_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alternative Minimum Tax lower base tax amount",
    "description": "Alternative Minimum Tax (AMT) base tax, Form 6251 Part II Line 7 'All Others' - lower bracket"
  },
  "amt_base_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/alternative_minimum_tax/base_tax/amt_base_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "amt_lower_base_tax",
      "amt_higher_base_tax"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alternative Minimum Tax base tax",
    "description": "Alternative Minimum Tax (AMT) base tax, Form 6251 Part II Line 7 'All Others'"
  },
  "amt_higher_base_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/alternative_minimum_tax/base_tax/amt_higher_base_tax.py",
    "parameters": {
      "p": "gov.irs.income.amt",
      "multiplier": "gov.irs.income.amt.multiplier",
      "brackets": "gov.irs.income.amt.brackets",
      "rates": "gov.irs.income.amt.brackets.rates",
      "thresholds": "gov.irs.income.amt.brackets.thresholds"
    },
    "variables": [
      "filing_status",
      "amt_income_less_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alternative Minimum Tax higher base tax amount",
    "description": "Alternative Minimum Tax (AMT) base tax, Form 6251 Part II Line 7 'All Others' - higher bracket"
  },
  "amt_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/alternative_minimum_tax/income/amt_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "taxable_income",
      "amt_excluded_deductions",
      "amt_separate_addition",
      "exemptions"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "AMT taxable income"
  },
  "amt_excluded_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/alternative_minimum_tax/income/amt_excluded_deductions.py",
    "parameters": {
      "p": "gov.irs.income.amt",
      "itemized_deductions_add_back": "gov.irs.income.amt.itemized_deductions_add_back"
    },
    "variables": [
      "tax_unit_itemizes",
      "standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "AMT taxable income excluded deductions"
  },
  "amt_income_less_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/alternative_minimum_tax/income/amt_income_less_exemptions.py",
    "parameters": {
      "p": "gov.irs.income.amt",
      "phase_out": "gov.irs.income.amt.exemption.phase_out",
      "amount": "gov.irs.income.amt.exemption.amount",
      "child": "gov.irs.income.amt.exemption.child",
      "exemption": "gov.irs.income.amt.exemption"
    },
    "variables": [
      "filing_status",
      "amt_kiddie_tax_applies",
      "taxable_income",
      "filer_adjusted_earnings",
      "amt_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alternative Minimum Tax Income less exemptions",
    "description": "Alternative Minimum Tax (AMT) income less exemptions"
  },
  "amt_separate_addition": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/alternative_minimum_tax/income/amt_separate_addition.py",
    "parameters": {
      "p": "gov.irs.income.amt.exemption",
      "separate_limit": "gov.irs.income.amt.exemption.separate_limit",
      "amount": "gov.irs.income.amt.exemption.amount",
      "phase_out": "gov.irs.income.amt.exemption.phase_out",
      "rate": "gov.irs.income.amt.exemption.phase_out.rate"
    },
    "variables": [
      "amt_excluded_deductions",
      "filing_status",
      "taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "AMT taxable income separate addition"
  },
  "amt_kiddie_tax_applies": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/federal_income/alternative_minimum_tax/kiddie_tax/amt_kiddie_tax_applies.py",
    "parameters": {
      "p": "gov.irs.dependent.ineligible_age",
      "non_student": "gov.irs.dependent.ineligible_age.non_student"
    },
    "variables": [
      "age_head",
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Alternative Minimum Tax kiddie tax applies",
    "description": "Whether the kiddie tax applies to the tax unit"
  },
  "employer_medicare_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/payroll/medicare/employer_medicare_tax.py",
    "parameters": {
      "p": "gov.irs.payroll.medicare.rate",
      "employer": "gov.irs.payroll.medicare.rate.employer"
    },
    "variables": [
      "payroll_tax_gross_wages"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Employer-side health insurance payroll tax",
    "description": "Total liability for employer-side health insurance payroll tax."
  },
  "employee_medicare_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/payroll/medicare/employee_medicare_tax.py",
    "parameters": {
      "p": "gov.irs.payroll.medicare.rate",
      "employee": "gov.irs.payroll.medicare.rate.employee"
    },
    "variables": [
      "payroll_tax_gross_wages"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "employee-side health insurance payroll tax",
    "description": "Total liability for employee-side health insurance payroll tax."
  },
  "employer_social_security_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/payroll/social_security/employer_social_security_tax.py",
    "parameters": {
      "p": "gov.irs.payroll.social_security.rate",
      "employer": "gov.irs.payroll.social_security.rate.employer"
    },
    "variables": [
      "taxable_earnings_for_social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Employer-side OASDI payroll tax",
    "description": "Total liability for employer-side OASDI payroll tax."
  },
  "taxable_earnings_for_social_security": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/payroll/social_security/taxable_earnings_for_social_security.py",
    "parameters": {
      "p": "gov.irs.payroll.social_security",
      "cap": "gov.irs.payroll.social_security.cap"
    },
    "variables": [
      "payroll_tax_gross_wages"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable gross earnings for OASDI FICA"
  },
  "employee_social_security_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/tax/payroll/social_security/employee_social_security_tax.py",
    "parameters": {
      "p": "gov.irs.payroll.social_security.rate",
      "employee": "gov.irs.payroll.social_security.rate.employee"
    },
    "variables": [
      "taxable_earnings_for_social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "employee-side OASDI payroll tax",
    "description": "Total liability for employee-side OASDI payroll tax."
  },
  "taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/taxable_income.py",
    "parameters": {},
    "variables": [
      "exemptions",
      "taxable_income_deductions",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IRS taxable income"
  },
  "investment_income_form_4952": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/sources/investment_income_form_4952.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Investment income from Form 4952"
  },
  "amt_non_agi_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/sources/amt_non_agi_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Income considered for AMT but not AGI"
  },
  "tuition_and_fees_deduction_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/tuition_and_fees_deduction_eligible.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "lifetime_learning_credit_potential",
      "american_opportunity_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tuition and fees deduction eligible"
  },
  "taxable_income_deductions_if_not_itemizing": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/taxable_income_deductions_if_not_itemizing.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "charitable_deduction_for_non_itemizers",
      "standard_deduction",
      "qualified_business_income_deduction"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Deductions if not itemizing",
    "adds_from_parameter": "gov.irs.deductions.deductions_if_not_itemizing"
  },
  "tax_unit_itemizes": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/tax_unit_itemizes.py",
    "parameters": {},
    "variables": [
      "itemized_taxable_income_deductions",
      "tax_liability_if_itemizing",
      "tax_liability_if_not_itemizing",
      "standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Itemizes tax deductions",
    "description": "Whether tax unit elects to itemize deductions rather than claim the standard deduction."
  },
  "taxable_income_deductions_if_itemizing": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/taxable_income_deductions_if_itemizing.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "qualified_business_income_deduction",
      "wagering_losses_deduction",
      "itemized_taxable_income_deductions"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Deductions if itemizing",
    "adds_from_parameter": "gov.irs.deductions.deductions_if_itemizing"
  },
  "tax_liability_if_not_itemizing": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/tax_liability_if_not_itemizing.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax liability if not itemizing"
  },
  "itemized_deductions_less_salt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemized_deductions_less_salt.py",
    "parameters": {
      "p": "gov.irs.deductions",
      "itemized_deductions": "gov.irs.deductions.itemized_deductions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Itemized tax deductions other than SALT deduction",
    "description": "Non-SALT itemized deductions total."
  },
  "tuition_and_fees_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/tuition_and_fees_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.tuition_and_fees",
      "calc": "gov.irs.deductions.tuition_and_fees.non_joint.calc",
      "joint": "gov.irs.deductions.tuition_and_fees.joint",
      "non_joint": "gov.irs.deductions.tuition_and_fees.non_joint"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income",
      "qualified_tuition_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "tuition_and_fees_deduction_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tuition and fees deduction"
  },
  "capped_property_taxes": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/capped_property_taxes.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized",
      "cap": "gov.irs.deductions.itemized.salt_and_real_estate.cap",
      "salt_and_real_estate": "gov.irs.deductions.itemized.salt_and_real_estate"
    },
    "variables": [
      "filing_status",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Local real estate taxes limited by the federal SALT cap.",
    "description": "Local real estate taxes limited by the federal SALT cap."
  },
  "taxable_income_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/taxable_income_deductions.py",
    "parameters": {},
    "variables": [
      "taxable_income_deductions_if_not_itemizing",
      "taxable_income_deductions_if_itemizing",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable income deductions"
  },
  "tax_liability_if_itemizing": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/tax_liability_if_itemizing.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax liability if itemizing"
  },
  "exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/exemptions/exemptions.py",
    "parameters": {
      "p": "gov.irs.income.exemption",
      "start": "gov.irs.income.exemption.phase_out.start",
      "step_size": "gov.irs.income.exemption.phase_out.step_size",
      "rate": "gov.irs.income.exemption.phase_out.rate",
      "amount": "gov.irs.income.exemption.amount",
      "phase_out": "gov.irs.income.exemption.phase_out"
    },
    "variables": [
      "filing_status",
      "exemptions_count",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Exemptions",
    "description": "Personal exemptions amount after phase-out"
  },
  "exemptions_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/exemptions/exemptions_count.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_unit_size"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of tax exemptions"
  },
  "positive_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/positive_agi.py",
    "parameters": {},
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Positive AGI",
    "description": "Negative AGI values capped at zero"
  },
  "positive_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/positive_gross_income.py",
    "parameters": {},
    "variables": [
      "irs_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Positive Gross Income",
    "description": "Negative gross income values capped at zero"
  },
  "adjusted_gross_income_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/adjusted_gross_income_person.py",
    "parameters": {
      "all_alds": "gov.irs.ald.deductions"
    },
    "variables": [
      "irs_gross_income",
      "filing_status",
      "basic_income",
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal adjusted gross income for each person"
  },
  "adjusted_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/adjusted_gross_income.py",
    "parameters": {},
    "variables": [
      "above_the_line_deductions",
      "irs_gross_income",
      "basic_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Adjusted gross income"
  },
  "tax_unit_partnership_s_corp_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/tax_unit_partnership_s_corp_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "partnership_s_corp_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit partnership/S-corp income",
    "description": "Combined partnership/S-corporation income for the tax unit."
  },
  "tax_unit_rental_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/tax_unit_rental_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "rental_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit rental income",
    "description": "Combined rental income for the tax unit."
  },
  "irs_employment_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/irs_employment_income.py",
    "parameters": {},
    "variables": [
      "employment_income",
      "pre_tax_contributions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IRS employment income",
    "description": "Employment income less payroll deductions."
  },
  "pre_tax_contributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/pre_tax_contributions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "traditional_401k_contributions",
      "traditional_403b_contributions",
      "health_insurance_premiums",
      "health_savings_account_payroll_contributions"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pre-tax contributions",
    "description": "Payroll deductions.",
    "adds_from_parameter": "gov.irs.gross_income.pre_tax_contributions"
  },
  "has_qdiv_or_ltcg": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/has_qdiv_or_ltcg.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Has qualified dividends or long-term capital gains",
    "description": "Whether this tax unit has qualified dividend income or long-term capital gains income"
  },
  "irs_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/irs_gross_income.py",
    "parameters": {
      "sources": "gov.irs.gross_income.sources"
    },
    "variables": [
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Gross income",
    "description": "Gross income, as defined in the Internal Revenue Code."
  },
  "loss_limited_net_capital_gains": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/loss_limited_net_capital_gains.py",
    "parameters": {
      "p": "gov.irs",
      "loss_limit": "gov.irs.capital_gains.loss_limit",
      "capital_gains": "gov.irs.capital_gains"
    },
    "variables": [
      "net_capital_gains",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Loss-limited net capital gains"
  },
  "limited_capital_loss": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/limited_capital_loss.py",
    "parameters": {
      "p": "gov.irs",
      "max": "gov.irs.ald.loss.capital.max",
      "capital": "gov.irs.ald.loss.capital",
      "loss": "gov.irs.ald.loss",
      "ald": "gov.irs.ald"
    },
    "variables": [
      "capital_losses",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Limited capital loss deduction",
    "description": "The capital loss deductible from gross income."
  },
  "self_employed_pension_contribution_ald_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/self_employed_pension_contribution_ald_person.py",
    "parameters": {},
    "variables": [
      "self_employed_pension_contributions",
      "self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employed pension contribution ALD for each person",
    "description": "Personal above-the-line deduction for self-employed pension plan contributions."
  },
  "self_employed_pension_contribution_ald": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/self_employed_pension_contribution_ald.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "self_employed_pension_contribution_ald_person"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employed pension contribution ALD",
    "description": "Above-the-line deduction for self-employed pension plan contributions."
  },
  "self_employment_tax_ald_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/self_employment_tax_ald_person.py",
    "parameters": {
      "percent_deductible": "gov.irs.ald.self_employment_tax.percent_deductible"
    },
    "variables": [
      "self_employment_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employment tax ALD deduction for each person",
    "description": "Personal above-the-line deduction for self-employment tax"
  },
  "loss_ald": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/loss_ald.py",
    "parameters": {
      "max": "gov.irs.ald.loss.max"
    },
    "variables": [
      "filing_status",
      "self_employment_income",
      "limited_capital_loss"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Business loss ALD",
    "description": "Above-the-line deduction from gross income for business losses."
  },
  "alimony_expense_ald": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/alimony_expense_ald.py",
    "parameters": {
      "p": "gov.irs.ald.alimony_expense",
      "calc": "gov.irs.ald.alimony_expense.divorce_year_threshold.calc",
      "divorce_year_threshold": "gov.irs.ald.alimony_expense.divorce_year_threshold"
    },
    "variables": [
      "alimony_expense",
      "divorce_year"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alimony expense ALD",
    "description": "Above-the-line deduction from gross income for alimony expenses."
  },
  "self_employed_health_insurance_ald": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/self_employed_health_insurance_ald.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "self_employed_health_insurance_ald_person"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employed health insurance ALD",
    "description": "Above-the-line deduction for self-employed health insurance contributions."
  },
  "self_employed_health_insurance_ald_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/self_employed_health_insurance_ald_person.py",
    "parameters": {},
    "variables": [
      "self_employment_income",
      "self_employed_health_insurance_premiums"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employed health insurance ALD for each person",
    "description": "Personal above-the-line deduction for self-employed health insurance contributions."
  },
  "above_the_line_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/above_the_line_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "loss_ald",
      "self_employment_tax_ald",
      "student_loan_interest_ald",
      "early_withdrawal_penalty",
      "alimony_expense",
      "educator_expense",
      "health_savings_account_ald",
      "self_employed_health_insurance_ald",
      "self_employed_pension_contribution_ald",
      "traditional_ira_contributions",
      "qualified_adoption_assistance_expense",
      "us_bonds_for_higher_ed",
      "specified_possession_income",
      "puerto_rico_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Above-the-line deductions",
    "description": "Deductions applied to reach adjusted gross income from gross income.",
    "adds_from_parameter": "gov.irs.ald.deductions"
  },
  "specified_possession_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/specified_possession_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Income from Guam, American Samoa, or the Northern Mariana Islands",
    "description": "Income generated in the above territories by any individual who is a bona fide resident."
  },
  "health_savings_account_ald": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/health_savings_account_ald.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Health savings account ALD",
    "description": "Above-the-line deduction from gross income for health savings account expenses."
  },
  "puerto_rico_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/puerto_rico_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Income from Puerto Rico",
    "description": "Income generated in Puerto Rico by any individual who is a bona fide resident."
  },
  "domestic_production_ald": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/domestic_production_ald.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Domestic production activities ALD",
    "description": "Above-the-line deduction from gross income for domestic production activities."
  },
  "self_employment_tax_ald": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/self_employment_tax_ald.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "self_employment_tax_ald_person"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employment tax ALD deduction",
    "description": "Above-the-line deduction for self-employment tax"
  },
  "student_loan_interest_ald_magi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/student_loan_interest/student_loan_interest_ald_magi.py",
    "parameters": {
      "p_irs": "gov.irs",
      "sources": "gov.irs.gross_income.sources",
      "person_alds": "gov.irs.ald.student_loan_interest.magi.person_alds",
      "excluded_gross_income_sources": "gov.irs.ald.student_loan_interest.magi.excluded_gross_income_sources",
      "excluded_alds": "gov.irs.ald.student_loan_interest.magi.excluded_alds",
      "deductions": "gov.irs.ald.deductions",
      "student_loan_interest": "gov.irs.ald.student_loan_interest",
      "gross_income": "gov.irs.gross_income",
      "ald": "gov.irs.ald",
      "magi": "gov.irs.ald.student_loan_interest.magi"
    },
    "variables": [
      "filing_status",
      "is_tax_unit_dependent",
      "basic_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "student_loan_interest_ald_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Modified adjusted gross income for the student loan interest ALD",
    "description": "Above-the-line deduction for student loan interest"
  },
  "student_loan_interest_ald_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/student_loan_interest/student_loan_interest_ald_eligible.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "filing_status",
      "is_eligible_for_american_opportunity_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Student loan interest ALD"
  },
  "student_loan_interest_ald": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/above_the_line_deductions/student_loan_interest/student_loan_interest_ald.py",
    "parameters": {
      "p": "gov.irs.ald.student_loan_interest",
      "cap": "gov.irs.ald.student_loan_interest.cap",
      "reduction": "gov.irs.ald.student_loan_interest.reduction",
      "start": "gov.irs.ald.student_loan_interest.reduction.start",
      "divisor": "gov.irs.ald.student_loan_interest.reduction.divisor"
    },
    "variables": [
      "student_loan_interest_ald_magi",
      "filing_status",
      "student_loan_interest",
      "is_tax_unit_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "student_loan_interest_ald_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Student loan interest ALD",
    "description": "Above-the-line deduction for student loan interest"
  },
  "tax_exempt_unemployment_compensation": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/unemployment_insurance/tax_exempt_unemployment_compensation.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "unemployment_compensation"
    ],
    "subtracts": [
      "taxable_unemployment_compensation"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax-exempt unemployment compensation"
  },
  "tax_unit_taxable_unemployment_compensation": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/unemployment_insurance/tax_unit_taxable_unemployment_compensation.py",
    "parameters": {
      "ui": "gov.irs.unemployment_compensation",
      "cutoff": "gov.irs.unemployment_compensation.exemption.cutoff",
      "amount": "gov.irs.unemployment_compensation.exemption.amount",
      "exemption": "gov.irs.unemployment_compensation.exemption"
    },
    "variables": [
      "filing_status",
      "tax_unit_unemployment_compensation",
      "taxable_uc_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable unemployment compensation",
    "description": "Unemployment compensation included in AGI."
  },
  "tax_unit_unemployment_compensation": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/unemployment_insurance/tax_unit_unemployment_compensation.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "unemployment_compensation"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit unemployment compensation",
    "description": "Combined unemployment compensation for the tax unit."
  },
  "taxable_uc_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/unemployment_insurance/taxable_uc_agi.py",
    "parameters": {
      "irs": "gov.irs",
      "sources": "gov.irs.gross_income.sources",
      "deductions": "gov.irs.ald.deductions",
      "gross_income": "gov.irs.gross_income",
      "ald": "gov.irs.ald"
    },
    "variables": [
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable unemployment compensation for SS adjusted gross income",
    "description": "Income used to determine taxability of unemployment compensation."
  },
  "tax_unit_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/earned_income/tax_unit_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit earned income"
  },
  "earned_income_last_year": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/earned_income/earned_income_last_year.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income_last_year",
      "self_employment_income_last_year"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Earned income last year",
    "description": "Prior-year income from wages or self-employment"
  },
  "tax_unit_earned_income_last_year": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/earned_income/tax_unit_earned_income_last_year.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit earned income last year"
  },
  "earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/earned_income/earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Earned income",
    "description": "Income from wages or self-employment"
  },
  "tax_unit_taxable_social_security": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/social_security/tax_unit_taxable_social_security.py",
    "parameters": {
      "p": "gov.irs.social_security.taxability",
      "separate_cohabitating": "gov.irs.social_security.taxability.threshold.adjusted_base.separate_cohabitating",
      "main": "gov.irs.social_security.taxability.threshold.adjusted_base.main",
      "base": "gov.irs.social_security.taxability.rate.base",
      "additional": "gov.irs.social_security.taxability.rate.additional",
      "adjusted_base": "gov.irs.social_security.taxability.threshold.adjusted_base",
      "rate": "gov.irs.social_security.taxability.rate",
      "threshold": "gov.irs.social_security.taxability.threshold"
    },
    "variables": [
      "filing_status",
      "tax_unit_social_security",
      "tax_unit_ss_combined_income_excess",
      "cohabitating_spouses",
      "tax_unit_combined_income_for_social_security_taxability"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable Social Security benefits",
    "description": "Social security (OASDI) benefits included in AGI, including tier 1 railroad retirement benefits."
  },
  "taxable_social_security": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/social_security/taxable_social_security.py",
    "parameters": {},
    "variables": [
      "tax_unit_taxable_social_security",
      "social_security",
      "tax_unit_social_security",
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable Social Security"
  },
  "tax_exempt_social_security": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/social_security/tax_exempt_social_security.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_unit_social_security"
    ],
    "subtracts": [
      "tax_unit_taxable_social_security"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax-exempt Social Security"
  },
  "tax_unit_ss_combined_income_excess": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/social_security/tax_unit_ss_combined_income_excess.py",
    "parameters": {
      "p": "gov.irs.social_security.taxability.threshold.base",
      "separate_cohabitating": "gov.irs.social_security.taxability.threshold.base.separate_cohabitating",
      "main": "gov.irs.social_security.taxability.threshold.base.main"
    },
    "variables": [
      "filing_status",
      "tax_unit_combined_income_for_social_security_taxability",
      "cohabitating_spouses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable Social Security combined income excess over base amount"
  },
  "tax_unit_combined_income_for_social_security_taxability": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/social_security/tax_unit_combined_income_for_social_security_taxability.py",
    "parameters": {
      "p": "gov.irs.social_security.taxability",
      "combined_income_ss_fraction": "gov.irs.social_security.taxability.combined_income_ss_fraction"
    },
    "variables": [
      "tax_unit_social_security",
      "taxable_ss_magi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable Social Security combined income"
  },
  "taxable_ss_magi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/social_security/taxable_ss_magi.py",
    "parameters": {
      "irs": "gov.irs",
      "sources": "gov.irs.gross_income.sources",
      "income": "gov.irs.social_security.taxability.income",
      "deductions": "gov.irs.ald.deductions",
      "gross_income": "gov.irs.gross_income",
      "ald": "gov.irs.ald",
      "social_security": "gov.irs.social_security",
      "taxability": "gov.irs.social_security.taxability"
    },
    "variables": [
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Modified adjusted gross income (SS)",
    "description": "Income used to determine taxability of Social Security."
  },
  "tax_unit_social_security": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/adjusted_gross_income/irs_gross_income/social_security/tax_unit_social_security.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "social_security"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit Social Security"
  },
  "overtime_income_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/overtime_income/overtime_income_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.overtime_income",
      "cap": "gov.irs.deductions.overtime_income.cap",
      "phase_out": "gov.irs.deductions.overtime_income.phase_out",
      "start": "gov.irs.deductions.overtime_income.phase_out.start",
      "rate": "gov.irs.deductions.overtime_income.phase_out.rate"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income",
      "fsla_overtime_premium"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "overtime_income_deduction_ssn_requirement_met",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Overtime income deduction"
  },
  "overtime_income_deduction_ssn_requirement_met": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/overtime_income/overtime_income_deduction_ssn_requirement_met.py",
    "parameters": {
      "p": "gov.irs.deductions.overtime_income",
      "eligible_ssn_card_type": "gov.irs.deductions.overtime_income.eligible_ssn_card_type"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "ssn_card_type",
      "tax_unit_is_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SSN requirement met for the overtime income deduction"
  },
  "additional_senior_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/senior_deduction/additional_senior_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.senior_deduction",
      "amount": "gov.irs.deductions.senior_deduction.amount",
      "phase_out_rate": "gov.irs.deductions.senior_deduction.phase_out_rate",
      "calc": "gov.irs.deductions.senior_deduction.phase_out_rate.other.calc",
      "joint": "gov.irs.deductions.senior_deduction.phase_out_rate.joint",
      "other": "gov.irs.deductions.senior_deduction.phase_out_rate.other"
    },
    "variables": [
      "additional_senior_deduction_eligible_person",
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Senior deduction"
  },
  "additional_senior_deduction_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/senior_deduction/additional_senior_deduction_eligible_person.py",
    "parameters": {
      "p": "gov.irs.deductions.senior_deduction",
      "p_irs": "gov.irs.deductions.standard.aged_or_blind",
      "eligible_ssn_card_type": "gov.irs.deductions.senior_deduction.eligible_ssn_card_type",
      "age_threshold": "gov.irs.deductions.standard.aged_or_blind.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "ssn_card_type",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is eligible for the additional senior deduction"
  },
  "is_irs_aged": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/standard_deduction/is_irs_aged.py",
    "parameters": {
      "p": "gov.irs.deductions.standard.aged_or_blind",
      "age_threshold": "gov.irs.deductions.standard.aged_or_blind.age_threshold"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Aged person under the IRS requirements"
  },
  "standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/standard_deduction/standard_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "basic_standard_deduction",
      "additional_standard_deduction",
      "bonus_guaranteed_deduction"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Standard deduction"
  },
  "aged_blind_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/standard_deduction/aged_blind_count.py",
    "parameters": {},
    "variables": [
      "blind_spouse",
      "blind_head",
      "aged_spouse",
      "aged_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Aged and or blind head and spouse count"
  },
  "additional_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/standard_deduction/additional_standard_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.standard",
      "amount": "gov.irs.deductions.standard.aged_or_blind.amount",
      "aged_or_blind": "gov.irs.deductions.standard.aged_or_blind"
    },
    "variables": [
      "filing_status",
      "aged_blind_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Additional standard deduction"
  },
  "aged_head": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/standard_deduction/aged_head.py",
    "parameters": {
      "p": "gov.irs.deductions.standard.aged_or_blind",
      "age_threshold": "gov.irs.deductions.standard.aged_or_blind.age_threshold"
    },
    "variables": [
      "age_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Aged head"
  },
  "aged_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/standard_deduction/aged_spouse.py",
    "parameters": {
      "p": "gov.irs.deductions.standard.aged_or_blind",
      "age_threshold": "gov.irs.deductions.standard.aged_or_blind.age_threshold"
    },
    "variables": [
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Aged spouse"
  },
  "basic_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/standard_deduction/basic_standard_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.standard",
      "amount": "gov.irs.deductions.standard.dependent.amount",
      "additional_earned_income": "gov.irs.deductions.standard.dependent.additional_earned_income",
      "dependent": "gov.irs.deductions.standard.dependent"
    },
    "variables": [
      "separate_filer_itemizes",
      "filing_status",
      "head_is_dependent_elsewhere",
      "tax_unit_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Basic standard deduction"
  },
  "auto_loan_interest_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/auto_loan_interest/auto_loan_interest_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.auto_loan_interest",
      "start": "gov.irs.deductions.auto_loan_interest.phase_out.start",
      "step": "gov.irs.deductions.auto_loan_interest.phase_out.step",
      "increment": "gov.irs.deductions.auto_loan_interest.phase_out.increment",
      "cap": "gov.irs.deductions.auto_loan_interest.cap",
      "phase_out": "gov.irs.deductions.auto_loan_interest.phase_out"
    },
    "variables": [
      "auto_loan_interest",
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Auto loan interest deduction"
  },
  "qualified_business_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/qualified_business_income_deduction/qualified_business_income.py",
    "parameters": {
      "p": "gov.irs.deductions.qbi",
      "income_definition": "gov.irs.deductions.qbi.income_definition",
      "deduction_definition": "gov.irs.deductions.qbi.deduction_definition"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "business_is_qualified",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified business income",
    "description": "Business income that qualifies for the qualified business income deduction."
  },
  "qualified_business_income_deduction_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/qualified_business_income_deduction/qualified_business_income_deduction_person.py",
    "parameters": {},
    "variables": [
      "qbid_amount",
      "qualified_business_income_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified business income deduction for each person"
  },
  "taxable_income_less_qbid": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/qualified_business_income_deduction/taxable_income_less_qbid.py",
    "parameters": {
      "p": "gov.irs.deductions",
      "deductions_if_itemizing": "gov.irs.deductions.deductions_if_itemizing",
      "deductions_if_not_itemizing": "gov.irs.deductions.deductions_if_not_itemizing"
    },
    "variables": [
      "adjusted_gross_income",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable income (not considering QBID)"
  },
  "qbid_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/qualified_business_income_deduction/qbid_amount.py",
    "parameters": {
      "p": "gov.irs.deductions.qbi",
      "start": "gov.irs.deductions.qbi.phase_out.start",
      "length": "gov.irs.deductions.qbi.phase_out.length",
      "rate": "gov.irs.deductions.qbi.max.business_property.rate",
      "max": "gov.irs.deductions.qbi.max",
      "phase_out": "gov.irs.deductions.qbi.phase_out",
      "w2_wages": "gov.irs.deductions.qbi.max.w2_wages",
      "business_property": "gov.irs.deductions.qbi.max.business_property",
      "alt_rate": "gov.irs.deductions.qbi.max.w2_wages.alt_rate"
    },
    "variables": [
      "filing_status",
      "qualified_business_income",
      "unadjusted_basis_qualified_property",
      "business_is_sstb",
      "w2_wages_from_qualified_business",
      "taxable_income_less_qbid"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Per-cap qualified business income deduction amount for each person"
  },
  "qualified_business_income_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/qualified_business_income_deduction/qualified_business_income_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.qbi",
      "in_effect": "gov.irs.deductions.qbi.deduction_floor.in_effect",
      "amount": "gov.irs.deductions.qbi.deduction_floor.amount",
      "rate": "gov.irs.deductions.qbi.max.rate",
      "deduction_floor": "gov.irs.deductions.qbi.deduction_floor",
      "max": "gov.irs.deductions.qbi.max",
      "calc": "gov.irs.deductions.qbi.deduction_floor.amount.calc"
    },
    "variables": [
      "qualified_business_income",
      "adjusted_net_capital_gain",
      "qbid_amount",
      "taxable_income_less_qbid"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified business income deduction for tax unit"
  },
  "interest_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/interest_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "deductible_interest_expense"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Interest deduction",
    "description": "Interest expenses deducted from taxable income."
  },
  "itemized_taxable_income_deductions_reduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/itemized_taxable_income_deductions_reduction.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.reduction",
      "applies": "gov.irs.deductions.itemized.reduction.amended_structure.applies",
      "rate": "gov.irs.deductions.itemized.reduction.amended_structure.rate",
      "agi_threshold": "gov.irs.deductions.itemized.reduction.agi_threshold",
      "amended_structure": "gov.irs.deductions.itemized.reduction.amended_structure",
      "excess_agi": "gov.irs.deductions.itemized.reduction.rate.excess_agi",
      "base": "gov.irs.deductions.itemized.reduction.rate.base"
    },
    "variables": [
      "total_itemized_taxable_income_deductions",
      "filing_status",
      "exemptions",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Itemized taxable income deductions reduction"
  },
  "wagering_losses_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/wagering_losses_deduction.py",
    "parameters": {},
    "variables": [
      "gambling_winnings",
      "gambling_losses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wagering losses deduction",
    "description": "Deduction from taxable income for gambling losses, capped at gambling winnings."
  },
  "salt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/salt.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "state_and_local_sales_or_income_tax",
      "real_estate_taxes"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State and local sales or income tax and real estate taxes subject to the SALT deduction",
    "adds_from_parameter": "gov.irs.deductions.itemized.salt_and_real_estate.sources"
  },
  "medical_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/medical_expense_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.medical",
      "floor": "gov.irs.deductions.itemized.medical.floor"
    },
    "variables": [
      "positive_agi",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Medical expense deduction",
    "description": "Medical expenses deducted from taxable income."
  },
  "itemized_taxable_income_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/itemized_taxable_income_deductions.py",
    "parameters": {},
    "variables": [
      "total_itemized_taxable_income_deductions",
      "itemized_taxable_income_deductions_reduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Itemized taxable income deductions"
  },
  "reported_salt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/reported_salt.py",
    "parameters": {
      "p": "gov.simulation",
      "limit_itemized_deductions_to_taxable_income": "gov.simulation.limit_itemized_deductions_to_taxable_income"
    },
    "variables": [
      "exemptions",
      "adjusted_gross_income",
      "salt"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Reported State and local sales or income tax and real estate taxes subject to the SALT deduction limited to taxable income"
  },
  "state_and_local_sales_or_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/state_and_local_sales_or_income_tax.py",
    "parameters": {},
    "variables": [
      "state_sales_tax",
      "local_sales_tax",
      "state_withheld_income_tax",
      "local_income_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State and local sales or income tax"
  },
  "total_itemized_taxable_income_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/total_itemized_taxable_income_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "charitable_deduction",
      "interest_deduction",
      "salt_deduction",
      "medical_expense_deduction",
      "casualty_loss_deduction",
      "misc_deduction"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Total values of itemized taxable income deductions",
    "adds_from_parameter": "gov.irs.deductions.itemized_deductions"
  },
  "total_misc_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/total_misc_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "unreimbursed_business_employee_expenses",
      "tax_preparation_fees"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Total miscellaneous deductions subject to the AGI floor",
    "adds_from_parameter": "gov.irs.deductions.itemized.misc.sources"
  },
  "salt_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/salt_deduction.py",
    "parameters": {},
    "variables": [
      "reported_salt",
      "salt_cap"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SALT deduction",
    "description": "State and local taxes plus real estate tax deduction from taxable income."
  },
  "charitable_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/charitable_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.charity",
      "applies": "gov.irs.deductions.itemized.charity.floor.applies",
      "amount": "gov.irs.deductions.itemized.charity.floor.amount",
      "all": "gov.irs.deductions.itemized.charity.ceiling.all",
      "non_cash": "gov.irs.deductions.itemized.charity.ceiling.non_cash",
      "floor": "gov.irs.deductions.itemized.charity.floor",
      "ceiling": "gov.irs.deductions.itemized.charity.ceiling"
    },
    "variables": [
      "charitable_cash_donations",
      "positive_agi",
      "charitable_non_cash_donations"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Charitable deduction",
    "description": "Deduction from taxable income for charitable donations."
  },
  "casualty_loss_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/casualty_loss_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.casualty",
      "active": "gov.irs.deductions.itemized.casualty.active",
      "floor": "gov.irs.deductions.itemized.casualty.floor"
    },
    "variables": [
      "casualty_loss",
      "positive_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Casualty loss deduction"
  },
  "misc_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/misc_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.misc",
      "applies": "gov.irs.deductions.itemized.misc.applies",
      "floor": "gov.irs.deductions.itemized.misc.floor"
    },
    "variables": [
      "total_misc_deductions",
      "positive_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Miscellaneous deduction"
  },
  "charitable_deduction_for_non_itemizers": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/charitable_deduction_for_non_itemizers.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.charity",
      "non_itemizers_amount": "gov.irs.deductions.itemized.charity.non_itemizers_amount"
    },
    "variables": [
      "charitable_cash_donations",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Charitable deduction for non-itemizers",
    "description": "Charitable deduction amount for non-itemizers."
  },
  "salt_cap": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/itemizing/salt_cap.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.salt_and_real_estate",
      "cap": "gov.irs.deductions.itemized.salt_and_real_estate.cap",
      "phase_out": "gov.irs.deductions.itemized.salt_and_real_estate.phase_out",
      "in_effect": "gov.irs.deductions.itemized.salt_and_real_estate.phase_out.in_effect",
      "rate": "gov.irs.deductions.itemized.salt_and_real_estate.phase_out.rate",
      "floor": "gov.irs.deductions.itemized.salt_and_real_estate.phase_out.floor",
      "threshold": "gov.irs.deductions.itemized.salt_and_real_estate.phase_out.threshold",
      "applies": "gov.irs.deductions.itemized.salt_and_real_estate.phase_out.floor.applies",
      "amount": "gov.irs.deductions.itemized.salt_and_real_estate.phase_out.floor.amount"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SALT cap"
  },
  "tip_income_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/tip_income/tip_income_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.tip_income",
      "start": "gov.irs.deductions.tip_income.phase_out.start",
      "rate": "gov.irs.deductions.tip_income.phase_out.rate",
      "cap": "gov.irs.deductions.tip_income.cap",
      "phase_out": "gov.irs.deductions.tip_income.phase_out"
    },
    "variables": [
      "filing_status",
      "tip_income",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "tip_income_deduction_ssn_requirement_met",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tip income deduction"
  },
  "tip_income_deduction_ssn_requirement_met": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/income/taxable_income/deductions/tip_income/tip_income_deduction_ssn_requirement_met.py",
    "parameters": {
      "p": "gov.irs.deductions.tip_income",
      "eligible_ssn_card_type": "gov.irs.deductions.tip_income.eligible_ssn_card_type"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "ssn_card_type",
      "tax_unit_is_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SSN requirement met for the tip income deduction"
  },
  "state_sales_tax_income_bracket": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/irs/deductions/itemized/salt_and_real_estate/state_sales_tax_income_bracket.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.salt_and_real_estate.state_sales_tax_table",
      "income_sources": "gov.irs.deductions.itemized.salt_and_real_estate.state_sales_tax_table.income_sources",
      "income_bracket": "gov.irs.deductions.itemized.salt_and_real_estate.state_sales_tax_table.income_bracket",
      "calc": "gov.irs.deductions.itemized.salt_and_real_estate.state_sales_tax_table.income_bracket.calc"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "State Sales Tax Income Bracket"
  },
  "co_child_care_subsidies": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/co_child_care_subsidies.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "co_ccap_subsidy"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado child care subsidies"
  },
  "ca_child_care_subsidies": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/ca_child_care_subsidies.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_calworks_child_care"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California child care subsidies"
  },
  "ca_foster_care_minor_dependent": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/ca_foster_care_minor_dependent.py",
    "parameters": {
      "p": "gov.states.ca.foster_care",
      "age_threshold": "gov.states.ca.foster_care.age_threshold"
    },
    "variables": [
      "monthly_age",
      "is_in_foster_care"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California foster care minor dependent"
  },
  "ca_in_medical_care_facility": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/ca_in_medical_care_facility.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is in a California medical care facility"
  },
  "wa_tanf_countable_resources": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wa/dshs/tanf/wa_tanf_countable_resources.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Countable resources for Washington TANF"
  },
  "wa_tanf_resources_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wa/dshs/tanf/wa_tanf_resources_eligible.py",
    "parameters": {
      "p": "gov.states.wa.dshs.tanf.eligibility.resources",
      "limit": "gov.states.wa.dshs.tanf.eligibility.resources.limit"
    },
    "variables": [
      "wa_tanf_countable_resources"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Washington TANF resources eligible"
  },
  "wa_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wa/tax/income/wa_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wa_capital_gains_tax"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Washington income tax before refundable credits"
  },
  "wa_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wa/tax/income/wa_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wa_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "wa_refundable_credits"
    ],
    "defined_for": "StateCode.WA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Washington income tax"
  },
  "wa_capital_gains_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wa/tax/income/wa_capital_gains_tax.py",
    "parameters": {
      "in_effect": "gov.states.wa.tax.income.in_effect",
      "p": "gov.states.wa.tax.income.capital_gains",
      "cap": "gov.states.wa.tax.income.capital_gains.deductions.charitable.cap",
      "exemption": "gov.states.wa.tax.income.capital_gains.deductions.charitable.exemption",
      "rate": "gov.states.wa.tax.income.capital_gains.rate",
      "deductions": "gov.states.wa.tax.income.capital_gains.deductions",
      "charitable": "gov.states.wa.tax.income.capital_gains.deductions.charitable",
      "standard": "gov.states.wa.tax.income.capital_gains.deductions.standard"
    },
    "variables": [
      "charitable_cash_donations",
      "long_term_capital_gains",
      "charitable_non_cash_donations"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Washington capital gains tax"
  },
  "wa_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wa/tax/income/credits/wa_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wa_working_families_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Washington refundable tax credits",
    "adds_from_parameter": "gov.states.wa.tax.income.credits.refundable"
  },
  "wa_working_families_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wa/tax/income/credits/wa_working_families_tax_credit.py",
    "parameters": {
      "p": "gov.states.wa.tax.income.credits.working_families_tax_credit",
      "calc": "gov.states.wa.tax.income.credits.working_families_tax_credit.phase_out.start_below_eitc.calc",
      "amount": "gov.states.wa.tax.income.credits.working_families_tax_credit.amount",
      "min_amount": "gov.states.wa.tax.income.credits.working_families_tax_credit.min_amount",
      "phase_out": "gov.states.wa.tax.income.credits.working_families_tax_credit.phase_out",
      "start_below_eitc": "gov.states.wa.tax.income.credits.working_families_tax_credit.phase_out.start_below_eitc"
    },
    "variables": [
      "eitc_agi_limit",
      "filer_adjusted_earnings",
      "eitc_child_count",
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Washington Working Families Tax Credit"
  },
  "wi_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/wi_taxable_income.py",
    "parameters": {},
    "variables": [
      "wi_standard_deduction",
      "wi_agi",
      "wi_exemption"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin taxable income"
  },
  "wi_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/wi_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "wi_additions"
    ],
    "subtracts": [
      "wi_income_subtractions"
    ],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin Adjusted Gross Income"
  },
  "wi_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/wi_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "wi_income_tax_before_credits",
      "wi_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin income tax before refundable credits"
  },
  "wi_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/wi_standard_deduction.py",
    "parameters": {
      "deduction": "gov.states.wi.tax.income.deductions",
      "max": "gov.states.wi.tax.income.deductions.standard.max",
      "phase_out": "gov.states.wi.tax.income.deductions.standard.phase_out",
      "standard": "gov.states.wi.tax.income.deductions.standard",
      "calc": "gov.states.wi.tax.income.deductions.standard.phase_out.head_of_household.calc",
      "single": "gov.states.wi.tax.income.deductions.standard.phase_out.single",
      "joint": "gov.states.wi.tax.income.deductions.standard.phase_out.joint",
      "separate": "gov.states.wi.tax.income.deductions.standard.phase_out.separate",
      "head_of_household": "gov.states.wi.tax.income.deductions.standard.phase_out.head_of_household"
    },
    "variables": [
      "filing_status",
      "wi_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin standard deduction"
  },
  "wi_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/wi_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wi_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "wi_refundable_credits"
    ],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin income tax"
  },
  "wi_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/wi_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.wi.tax.income",
      "max": "gov.states.wi.tax.income.deductions.standard.max",
      "calc": "gov.states.wi.tax.income.rates.single.calc",
      "standard": "gov.states.wi.tax.income.deductions.standard",
      "single": "gov.states.wi.tax.income.rates.single",
      "deductions": "gov.states.wi.tax.income.deductions",
      "rates": "gov.states.wi.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin withheld income tax"
  },
  "wi_retirement_income_subtraction_agi_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/subtractions/wi_retirement_income_subtraction_agi_eligible.py",
    "parameters": {
      "p": "gov.states.wi.tax.income",
      "max_agi": "gov.states.wi.tax.income.subtractions.retirement_income.max_agi",
      "retirement_income": "gov.states.wi.tax.income.subtractions.retirement_income",
      "subtractions": "gov.states.wi.tax.income.subtractions"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin retirement income subtraction AGI eligibility"
  },
  "wi_income_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/subtractions/wi_income_subtractions.py",
    "parameters": {
      "p": "gov.states.wi.tax.income.subtractions",
      "sources": "gov.states.wi.tax.income.subtractions.sources"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin subtractions from federal adjusted gross income"
  },
  "wi_retirement_income_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/subtractions/wi_retirement_income_subtraction.py",
    "parameters": {
      "p": "gov.states.wi.tax.income",
      "retirement_income": "gov.states.wi.tax.income.subtractions.retirement_income",
      "subtractions": "gov.states.wi.tax.income.subtractions"
    },
    "variables": [
      "taxable_pension_income",
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "wi_retirement_income_subtraction_agi_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin retirement income subtraction from federal AGI"
  },
  "wi_capital_gain_loss_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/subtractions/wi_capital_gain_loss_subtraction.py",
    "parameters": {
      "p": "gov.states.wi.tax.income.subtractions",
      "fraction": "gov.states.wi.tax.income.subtractions.capital_gain.fraction",
      "capital_gain": "gov.states.wi.tax.income.subtractions.capital_gain"
    },
    "variables": [
      "short_term_capital_gains",
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin capital gain/loss subtraction from federal AGI"
  },
  "wi_unemployment_compensation_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/subtractions/wi_unemployment_compensation_subtraction.py",
    "parameters": {
      "wi": "gov.states.wi.tax.income",
      "income_phase_out": "gov.states.wi.tax.income.subtractions.unemployment_compensation.income_phase_out",
      "unemployment_compensation": "gov.states.wi.tax.income.subtractions.unemployment_compensation",
      "subtractions": "gov.states.wi.tax.income.subtractions"
    },
    "variables": [
      "tax_unit_taxable_social_security",
      "filing_status",
      "taxable_unemployment_compensation",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin unemployment compensation subtraction from federal AGI"
  },
  "wi_childcare_expense_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/subtractions/wi_childcare_expense_subtraction.py",
    "parameters": {
      "subtraction": "gov.states.wi.tax.income.subtractions",
      "max_dependents": "gov.states.wi.tax.income.subtractions.childcare_expense.max_dependents",
      "max_amount": "gov.states.wi.tax.income.subtractions.childcare_expense.max_amount",
      "childcare_expense": "gov.states.wi.tax.income.subtractions.childcare_expense"
    },
    "variables": [
      "min_head_spouse_earned",
      "count_cdcc_eligible",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin childcare expense subtraction from federal AGI"
  },
  "wi_capital_loss": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/additions/wi_capital_loss.py",
    "parameters": {
      "p": "gov.states.wi.tax.income.additions",
      "limit": "gov.states.wi.tax.income.additions.capital_loss.limit",
      "capital_loss": "gov.states.wi.tax.income.additions.capital_loss"
    },
    "variables": [
      "short_term_capital_gains",
      "filing_status",
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin capital loss (limited differently than US capital loss)"
  },
  "wi_capital_gain_loss_addition": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/additions/wi_capital_gain_loss_addition.py",
    "parameters": {},
    "variables": [
      "wi_capital_loss",
      "limited_capital_loss"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "WI capital gain/loss addition to federal adjusted gross income"
  },
  "wi_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/additions/wi_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_exempt_interest_income",
      "wi_capital_gain_loss_addition",
      "form_4972_lumpsum_distributions"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin additions to federal adjusted gross income",
    "adds_from_parameter": "gov.states.wi.tax.income.additions.sources"
  },
  "wi_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/exemptions/wi_exemption.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wi_base_exemption",
      "wi_additional_exemption"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin exemption"
  },
  "wi_base_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/exemptions/wi_base_exemption.py",
    "parameters": {
      "p": "gov.states.wi.tax.income",
      "base": "gov.states.wi.tax.income.exemption.base",
      "exemption": "gov.states.wi.tax.income.exemption"
    },
    "variables": [
      "exemptions_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin base exemption"
  },
  "wi_additional_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/exemptions/wi_additional_exemption.py",
    "parameters": {
      "p": "gov.states.wi.tax.income",
      "extra": "gov.states.wi.tax.income.exemption.extra",
      "old_age": "gov.states.wi.tax.income.exemption.old_age",
      "exemption": "gov.states.wi.tax.income.exemption"
    },
    "variables": [
      "age_head",
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin additional exemption"
  },
  "wi_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/credits/wi_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wi_itemized_deduction_credit",
      "wi_childcare_expense_credit",
      "wi_property_tax_credit",
      "wi_married_couple_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin nonrefundable credits",
    "adds_from_parameter": "gov.states.wi.tax.income.credits.non_refundable"
  },
  "wi_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/credits/wi_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wi_earned_income_credit",
      "wi_homestead_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin refundable credits",
    "adds_from_parameter": "gov.states.wi.tax.income.credits.refundable"
  },
  "wi_homestead_property_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/credits/homestead/wi_homestead_property_tax.py",
    "parameters": {
      "p": "gov.states.wi.tax.income.credits",
      "rent_ratio": "gov.states.wi.tax.income.credits.homestead.property_tax.rent_ratio",
      "property_tax": "gov.states.wi.tax.income.credits.homestead.property_tax",
      "homestead": "gov.states.wi.tax.income.credits.homestead"
    },
    "variables": [
      "rent",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin homestead credit property tax amount"
  },
  "wi_homestead_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/credits/homestead/wi_homestead_credit.py",
    "parameters": {
      "p": "gov.states.wi.tax.income.credits",
      "start": "gov.states.wi.tax.income.credits.homestead.phase_out.start",
      "rate": "gov.states.wi.tax.income.credits.homestead.rate",
      "phase_out": "gov.states.wi.tax.income.credits.homestead.phase_out",
      "property_tax": "gov.states.wi.tax.income.credits.homestead.property_tax",
      "max": "gov.states.wi.tax.income.credits.homestead.property_tax.max",
      "homestead": "gov.states.wi.tax.income.credits.homestead"
    },
    "variables": [
      "wi_homestead_property_tax",
      "wi_homestead_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "wi_homestead_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin homestead credit"
  },
  "wi_homestead_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/credits/homestead/wi_homestead_income.py",
    "parameters": {
      "p": "gov.states.wi.tax.income.credits",
      "sources": "gov.states.wi.tax.income.credits.homestead.income.sources",
      "exemption": "gov.states.wi.tax.income.credits.homestead.income.exemption",
      "income": "gov.states.wi.tax.income.credits.homestead.income",
      "homestead": "gov.states.wi.tax.income.credits.homestead"
    },
    "variables": [
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin homestead credit income"
  },
  "wi_homestead_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/credits/homestead/wi_homestead_eligible.py",
    "parameters": {
      "p": "gov.states.wi.tax.income.credits",
      "min_age": "gov.states.wi.tax.income.credits.homestead.eligible.min_age",
      "min_elderly_age": "gov.states.wi.tax.income.credits.homestead.eligible.min_elderly_age",
      "earnings_sources": "gov.states.wi.tax.income.credits.homestead.eligible.earnings_sources",
      "max_income": "gov.states.wi.tax.income.credits.homestead.eligible.max_income",
      "eligible": "gov.states.wi.tax.income.credits.homestead.eligible",
      "homestead": "gov.states.wi.tax.income.credits.homestead"
    },
    "variables": [
      "age_head",
      "head_is_disabled",
      "age_spouse",
      "wi_homestead_income",
      "spouse_is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin homestead credit eligibility status"
  },
  "wi_married_couple_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/credits/married_couple/wi_married_couple_credit.py",
    "parameters": {
      "p": "gov.states.wi.tax.income.credits",
      "income_sources": "gov.states.wi.tax.income.credits.married_couple.income_sources",
      "max": "gov.states.wi.tax.income.credits.married_couple.max",
      "rate": "gov.states.wi.tax.income.credits.married_couple.rate",
      "married_couple": "gov.states.wi.tax.income.credits.married_couple"
    },
    "variables": [
      "is_tax_unit_head",
      "filing_status",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin married couple credit"
  },
  "wi_childcare_expense_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/credits/childcare_expense/wi_childcare_expense_credit.py",
    "parameters": {
      "p": "gov.states.wi.tax.income",
      "fraction": "gov.states.wi.tax.income.credits.childcare_expense.fraction",
      "childcare_expense": "gov.states.wi.tax.income.credits.childcare_expense",
      "credits": "gov.states.wi.tax.income.credits"
    },
    "variables": [
      "cdcc_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin childcare expense credit"
  },
  "wi_property_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/credits/property_tax/wi_property_tax_credit.py",
    "parameters": {
      "p": "gov.states.wi.tax.income.credits.property_tax",
      "max": "gov.states.wi.tax.income.credits.property_tax.max",
      "rent_fraction": "gov.states.wi.tax.income.credits.property_tax.rent_fraction",
      "rate": "gov.states.wi.tax.income.credits.property_tax.rate"
    },
    "variables": [
      "rent",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin property tax credit"
  },
  "wi_earned_income_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/credits/earned_income/wi_earned_income_credit.py",
    "parameters": {
      "p": "gov.states.wi.tax.income.credits.earned_income",
      "p_irs": "gov.irs.credits.eitc.phase_out",
      "apply_federal_investment_income_limit": "gov.states.wi.tax.income.credits.earned_income.apply_federal_investment_income_limit",
      "investment_income_limit": "gov.states.wi.tax.income.credits.earned_income.investment_income_limit",
      "fraction": "gov.states.wi.tax.income.credits.earned_income.fraction",
      "max_investment_income": "gov.irs.credits.eitc.phase_out.max_investment_income",
      "calc": "gov.states.wi.tax.income.credits.earned_income.fraction.calc"
    },
    "variables": [
      "eitc_child_count",
      "eitc_relevant_investment_income",
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin earned income credit (WI EITC)"
  },
  "wi_itemized_deduction_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wi/tax/income/credits/itemized_deduction/wi_itemized_deduction_credit.py",
    "parameters": {
      "p": "gov.states.wi.tax.income",
      "rate": "gov.states.wi.tax.income.credits.itemized_deduction.rate",
      "itemized_deduction": "gov.states.wi.tax.income.credits.itemized_deduction",
      "credits": "gov.states.wi.tax.income.credits"
    },
    "variables": [
      "wi_standard_deduction",
      "itemized_deductions_less_salt"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wisconsin itemized deduction credit"
  },
  "la_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/la_taxable_income.py",
    "parameters": {
      "p": "gov.states.la.tax.income.deductions.standard",
      "applies": "gov.states.la.tax.income.deductions.standard.applies"
    },
    "variables": [
      "la_agi",
      "la_itemized_deductions",
      "la_standard_deduction",
      "la_federal_tax_deduction",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana taxable income"
  },
  "la_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/la_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "la_non_refundable_cdcc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana non-refundable credits",
    "adds_from_parameter": "gov.states.la.tax.income.credits.non_refundable"
  },
  "la_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/la_withheld_income_tax.py",
    "parameters": {
      "p_irs": "gov.irs.deductions.standard",
      "p": "gov.states.la.tax.income.main",
      "amount": "gov.irs.deductions.standard.amount",
      "applies": "gov.states.la.tax.income.main.flat.applies",
      "rate": "gov.states.la.tax.income.main.flat.rate",
      "flat": "gov.states.la.tax.income.main.flat",
      "by_filing_status": "gov.states.la.tax.income.main.by_filing_status",
      "calc": "gov.states.la.tax.income.main.by_filing_status.single.calc",
      "single": "gov.states.la.tax.income.main.by_filing_status.single"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana withheld income tax"
  },
  "la_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/la_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "la_refundable_cdcc",
      "la_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana refundable credits",
    "adds_from_parameter": "gov.states.la.tax.income.credits.refundable"
  },
  "la_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/la_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "la_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "la_refundable_credits"
    ],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana income tax"
  },
  "la_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/la_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "la_income_tax_before_non_refundable_credits",
      "la_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana income tax before refundable credits"
  },
  "la_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/la_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "p": "gov.states.la.tax.income.main",
      "applies": "gov.states.la.tax.income.main.flat.applies",
      "rate": "gov.states.la.tax.income.main.flat.rate",
      "rates": "gov.states.la.tax.income.main.by_filing_status.single.rates",
      "flat": "gov.states.la.tax.income.main.flat",
      "by_filing_status": "gov.states.la.tax.income.main.by_filing_status",
      "calc": "gov.states.la.tax.income.main.by_filing_status.head_of_household.calc"
    },
    "variables": [
      "la_exemptions",
      "filing_status",
      "la_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana income tax before non-refundable credits"
  },
  "la_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/la_agi.py",
    "parameters": {},
    "variables": [
      "la_agi_exempt_income",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana adjusted gross income income"
  },
  "la_federal_tax_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/deductions/la_federal_tax_deduction.py",
    "parameters": {
      "p": "gov.states.la.tax.income.deductions.federal_tax",
      "availability": "gov.states.la.tax.income.deductions.federal_tax.availability"
    },
    "variables": [
      "income_tax_before_refundable_credits",
      "form_4972_lumpsum_distributions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana federal tax deduction"
  },
  "la_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/deductions/la_standard_deduction.py",
    "parameters": {
      "p": "gov.states.la.tax.income.deductions.standard",
      "amount": "gov.states.la.tax.income.deductions.standard.amount"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana standard deduction"
  },
  "la_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/deductions/la_itemized_deductions.py",
    "parameters": {
      "p": "gov.states.la.tax.income.deductions.itemized",
      "relevant_federal_deductions": "gov.states.la.tax.income.deductions.itemized.relevant_federal_deductions",
      "excess_fraction": "gov.states.la.tax.income.deductions.itemized.excess_fraction"
    },
    "variables": [
      "standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana itemized deductions"
  },
  "la_disability_income_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/exempt_income/la_disability_income_exemption_person.py",
    "parameters": {
      "p": "gov.states.la.tax.income.exempt_income.disability",
      "cap": "gov.states.la.tax.income.exempt_income.disability.cap"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "la_receives_blind_exemption",
      "disability_benefits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana disability income exemption for each person"
  },
  "la_retirement_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/exempt_income/la_retirement_exemption_person.py",
    "parameters": {
      "p": "gov.states.la.tax.income.exempt_income.retirement",
      "calc": "gov.states.la.tax.income.exempt_income.retirement.cap.calc",
      "cap": "gov.states.la.tax.income.exempt_income.retirement.cap"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "taxable_pension_income",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana retirement exemption for each person"
  },
  "la_agi_exempt_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/exempt_income/la_agi_exempt_income.py",
    "parameters": {
      "p": "gov.states.la.tax.income.exempt_income",
      "in_effect": "gov.states.la.tax.income.exempt_income.reduction.in_effect",
      "rate": "gov.states.la.tax.income.exempt_income.reduction.rate",
      "sources": "gov.states.la.tax.income.exempt_income.sources",
      "reduction": "gov.states.la.tax.income.exempt_income.reduction",
      "calc": "gov.states.la.tax.income.exempt_income.reduction.rate.calc"
    },
    "variables": [
      "la_federal_tax_deduction",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana income that is exempt from the adjusted gross income"
  },
  "la_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/exemptions/la_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "la_personal_exemption",
      "la_blind_exemption",
      "la_dependents_exemption",
      "la_surviving_spouse_exemption",
      "la_aged_exemption"
    ],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana exemptions"
  },
  "la_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/credits/la_eitc.py",
    "parameters": {
      "p": "gov.states.la.tax.income.credits",
      "match": "gov.states.la.tax.income.credits.eitc.match",
      "eitc": "gov.states.la.tax.income.credits.eitc"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana Earned Income Tax Credit"
  },
  "la_school_readiness_credit_refundable": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/credits/school_readiness/la_school_readiness_credit_refundable.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "la_school_readiness_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "la_school_readiness_credit_refundable_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana refundable school readiness tax credit"
  },
  "la_school_readiness_credit_non_refundable": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/credits/school_readiness/la_school_readiness_credit_non_refundable.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "la_school_readiness_tax_credit"
    ],
    "subtracts": [
      "la_school_readiness_tax_credit_refundable"
    ],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana non-refundable school readiness tax credit"
  },
  "la_school_readiness_credit_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/credits/school_readiness/la_school_readiness_credit_eligible_child.py",
    "parameters": {
      "p": "gov.states.la.tax.income.credits.school_readiness",
      "age_threshold": "gov.states.la.tax.income.credits.school_readiness.age_threshold"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible child for the Louisiana school readiness tax credit"
  },
  "la_quality_rating_of_child_care_facility": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/credits/school_readiness/la_quality_rating_of_child_care_facility.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Quality rating of child care facility for the Louisiana school readiness tax credit"
  },
  "la_school_readiness_credit_refundable_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/credits/school_readiness/la_school_readiness_credit_refundable_eligible.py",
    "parameters": {
      "p": "gov.states.la.tax.income.credits.cdcc.refundable",
      "thresholds": "gov.states.la.tax.income.credits.cdcc.refundable.match.thresholds",
      "match": "gov.states.la.tax.income.credits.cdcc.refundable.match"
    },
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana refundable school readiness tax credit eligibility"
  },
  "la_refundable_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/credits/cdcc/la_refundable_cdcc.py",
    "parameters": {
      "p": "gov.states.la.tax.income.credits.cdcc.refundable",
      "calc": "gov.states.la.tax.income.credits.cdcc.refundable.match.calc",
      "match": "gov.states.la.tax.income.credits.cdcc.refundable.match"
    },
    "variables": [
      "adjusted_gross_income",
      "cdcc_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana refundable Child and Dependent Care Credit"
  },
  "la_non_refundable_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/credits/cdcc/la_non_refundable_cdcc.py",
    "parameters": {
      "p": "gov.states.la.tax.income.credits.cdcc.non_refundable",
      "thresholds": "gov.states.la.tax.income.credits.cdcc.non_refundable.match.thresholds",
      "calc": "gov.states.la.tax.income.credits.cdcc.non_refundable.match.calc",
      "upper_bracket_cap": "gov.states.la.tax.income.credits.cdcc.non_refundable.upper_bracket_cap",
      "match": "gov.states.la.tax.income.credits.cdcc.non_refundable.match"
    },
    "variables": [
      "adjusted_gross_income",
      "cdcc_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana non-refundable Child and Dependent Care Credit"
  },
  "la_dependents_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/exemptions/personal/la_dependents_exemption.py",
    "parameters": {
      "p": "gov.states.la.tax.income.exemptions",
      "dependent": "gov.states.la.tax.income.exemptions.dependent"
    },
    "variables": [
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana qualified dependents exemption"
  },
  "la_personal_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/exemptions/personal/la_personal_exemption.py",
    "parameters": {
      "p": "gov.states.la.tax.income.exemptions",
      "personal": "gov.states.la.tax.income.exemptions.personal"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana personal exemption"
  },
  "la_aged_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/exemptions/personal/la_aged_exemption.py",
    "parameters": {
      "p": "gov.states.la.tax.income.exemptions",
      "calc": "gov.states.la.tax.income.exemptions.aged.calc",
      "aged": "gov.states.la.tax.income.exemptions.aged"
    },
    "variables": [
      "age_head",
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana aged exemption"
  },
  "la_blind_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/exemptions/personal/blind/la_blind_exemption_person.py",
    "parameters": {
      "p": "gov.states.la.tax.income.exemptions",
      "blind": "gov.states.la.tax.income.exemptions.blind"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "is_blind"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "la_receives_blind_exemption",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana blind exemption for each individual"
  },
  "la_receives_blind_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/exemptions/personal/blind/la_receives_blind_exemption.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Filer receives the Louisiana blind exemption over the subtraction"
  },
  "la_blind_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/exemptions/personal/blind/la_blind_exemption.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "la_blind_exemption_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana blind exemption"
  },
  "la_military_pay_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/la/tax/income/exempt_income/military_pay_exclusion/la_military_pay_exclusion.py",
    "parameters": {
      "p": "gov.states.la.tax.income.exempt_income.military_pay_exclusion",
      "max_amount": "gov.states.la.tax.income.exempt_income.military_pay_exclusion.max_amount"
    },
    "variables": [
      "military_service_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.LA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Louisiana military pay exclusion"
  },
  "il_bap_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/idoa/bap/il_bap_eligible.py",
    "parameters": {
      "p": "gov.states.il.idoa.bap",
      "income_limit": "gov.states.il.idoa.bap.income_limit",
      "senior_age_threshold": "gov.states.il.idoa.bap.senior_age_threshold",
      "disabled": "gov.states.il.idoa.bap.disabled"
    },
    "variables": [
      "adjusted_gross_income_person",
      "age",
      "is_permanently_and_totally_disabled",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Illinois Chicago Department of Aging Benefit Access Program (BAP)"
  },
  "il_liheap": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dceo/liheap/il_liheap.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "il_liheap_base_payment",
      "il_liheap_crisis_assistance_amount"
    ],
    "subtracts": [],
    "defined_for": "il_liheap_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois LIHEAP total benefit"
  },
  "il_liheap_base_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dceo/liheap/payment/il_liheap_base_payment.py",
    "parameters": {
      "p": "gov.states.il.dceo.liheap.payment.base_amount",
      "max": "gov.states.il.dceo.liheap.payment.base_amount.max",
      "min": "gov.states.il.dceo.liheap.payment.base_amount.min"
    },
    "variables": [
      "heat_expense_included_in_rent",
      "heating_expense_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois LIHEAP base payment"
  },
  "il_liheap_crisis_assistance_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dceo/liheap/payment/il_liheap_crisis_assistance_amount.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "il_liheap_eligible_for_crisis_assistance",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois LIHEAP crisis assistance amount",
    "adds_parameter_values": {
      "gov.states.il.dceo.liheap.payment.crisis_amount.max": "$1,500"
    }
  },
  "il_liheap_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dceo/liheap/eligibility/il_liheap_eligible.py",
    "parameters": {
      "p": "gov.states.il.dceo.liheap.eligibility",
      "rent_rate": "gov.states.il.dceo.liheap.eligibility.rent_rate"
    },
    "variables": [
      "heat_expense_included_in_rent",
      "rent",
      "irs_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "il_liheap_income_eligible",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Illinois LIHEAP"
  },
  "il_liheap_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dceo/liheap/eligibility/il_liheap_income_eligible.py",
    "parameters": {
      "p_hhs": "gov.hhs",
      "p_il": "gov.states.il.dceo.liheap",
      "smi_limit": "gov.hhs.liheap.smi_limit",
      "fpg_limit": "gov.states.il.dceo.liheap.eligibility.fpg_limit",
      "liheap": "gov.hhs.liheap",
      "eligibility": "gov.states.il.dceo.liheap.eligibility"
    },
    "variables": [
      "hhs_smi",
      "irs_gross_income",
      "spm_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois LIHEAP income eligible"
  },
  "il_liheap_eligible_for_crisis_assistance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dceo/liheap/eligibility/il_liheap_eligible_for_crisis_assistance.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM Unit has utility disconnect notice under Illinois LIHEAP crisis assistance program"
  },
  "il_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/il_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "il_income_tax_before_non_refundable_credits",
      "il_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois income tax before refundable credits"
  },
  "il_use_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/il_use_tax.py",
    "parameters": {
      "p": "gov.states.il.tax.income.use_tax",
      "calc": "gov.states.il.tax.income.use_tax.rate.calc",
      "amount": "gov.states.il.tax.income.use_tax.amount",
      "rate": "gov.states.il.tax.income.use_tax.rate"
    },
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL use tax"
  },
  "il_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/il_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "rate": "gov.states.il.tax.income.rate"
    },
    "variables": [
      "recapture_of_investment_credit",
      "il_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL income tax before credits"
  },
  "il_total_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/il_total_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "il_income_tax_before_refundable_credits",
      "il_use_tax"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois total tax"
  },
  "il_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/il_taxable_income.py",
    "parameters": {},
    "variables": [
      "il_total_exemptions",
      "il_base_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL taxable income"
  },
  "il_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/il_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "il_total_tax"
    ],
    "subtracts": [
      "il_refundable_credits"
    ],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois income tax"
  },
  "il_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/il_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.il.tax.income",
      "personal": "gov.states.il.tax.income.exemption.personal",
      "exemption": "gov.states.il.tax.income.exemption",
      "rate": "gov.states.il.tax.income.rate"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois withheld income tax"
  },
  "il_schedule_m_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/schedule_m/il_schedule_m_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL Schedule M additions"
  },
  "il_schedule_m_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/schedule_m/il_schedule_m_subtractions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL Schedule M deductions"
  },
  "il_base_income_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/base_income/il_base_income_subtractions.py",
    "parameters": {
      "p": "gov.states.il.tax.income.base",
      "subtractions": "gov.states.il.tax.income.base.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL base income subtractions"
  },
  "il_base_income_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/base_income/il_base_income_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_exempt_interest_income",
      "il_schedule_m_additions"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL base income additions",
    "adds_from_parameter": "gov.states.il.tax.income.base.additions"
  },
  "il_base_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/base_income/il_base_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "il_base_income_additions"
    ],
    "subtracts": [
      "il_base_income_subtractions"
    ],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL base income"
  },
  "il_pass_through_entity_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/pass_through/il_pass_through_entity_tax_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL Pass-Through Entity Tax Credit"
  },
  "il_pass_through_withholding": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/pass_through/il_pass_through_withholding.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL Pass-Through Withholding"
  },
  "il_personal_exemption_eligibility_status": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/exemptions/il_personal_exemption_eligibility_status.py",
    "parameters": {
      "personal_eligibility_amount": "gov.states.il.tax.income.exemption.personal"
    },
    "variables": [
      "filing_status",
      "head_is_dependent_elsewhere",
      "spouse_is_dependent_elsewhere",
      "il_base_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "Enum",
    "possible_values": "ILPersonalExemptionEligibilityStatus",
    "enum_options": [
      {
        "key": "BOTH_ELIGIBLE",
        "value": 1
      },
      {
        "key": "PARTIALLY_ELIGIBLE",
        "value": 2
      },
      {
        "key": "NOT_ELIGIBLE",
        "value": 3
      }
    ],
    "label": "Whether The Tax Unit Is Eligible For The Illinois Personal Exemption"
  },
  "il_is_exemption_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/exemptions/il_is_exemption_eligible.py",
    "parameters": {
      "income_limit": "gov.states.il.tax.income.exemption.income_limit"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether this tax unit is eligible for any exemptions"
  },
  "il_aged_blind_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/exemptions/il_aged_blind_exemption.py",
    "parameters": {
      "p": "gov.states.il.tax.income.exemption",
      "aged_and_blind": "gov.states.il.tax.income.exemption.aged_and_blind"
    },
    "variables": [
      "aged_blind_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL aged and blind exemption"
  },
  "il_personal_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/exemptions/il_personal_exemption.py",
    "parameters": {
      "personal_exemption_amount": "gov.states.il.tax.income.exemption.personal"
    },
    "variables": [
      "il_personal_exemption_eligibility_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois personal exemption amount"
  },
  "il_total_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/exemptions/il_total_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "il_personal_exemption",
      "il_aged_blind_exemption",
      "il_dependent_exemption"
    ],
    "subtracts": [],
    "defined_for": "il_is_exemption_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL total exemption allowance"
  },
  "il_dependent_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/exemptions/il_dependent_exemption.py",
    "parameters": {
      "amount": "gov.states.il.tax.income.exemption.dependent"
    },
    "variables": [
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois dependent exemption"
  },
  "il_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/credits/il_eitc.py",
    "parameters": {
      "match": "gov.states.il.tax.income.credits.eitc.match"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "IL EITC"
  },
  "il_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/credits/il_ctc.py",
    "parameters": {
      "p": "gov.states.il.tax.income.credits.ctc",
      "age_limit": "gov.states.il.tax.income.credits.ctc.age_limit",
      "rate": "gov.states.il.tax.income.credits.ctc.rate"
    },
    "variables": [
      "ctc_qualifying_child",
      "age",
      "il_eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Child Tax Credit"
  },
  "il_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/credits/il_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "il_k12_education_expense_credit",
      "il_property_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois non-refundable credits",
    "adds_from_parameter": "gov.states.il.tax.income.credits.non_refundable"
  },
  "il_k12_education_expense_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/credits/il_k12_education_expense_credit.py",
    "parameters": {
      "p": "gov.states.il.tax.income.credits.k12",
      "cap": "gov.states.il.tax.income.credits.k12.cap",
      "reduction": "gov.states.il.tax.income.credits.k12.reduction",
      "rate": "gov.states.il.tax.income.credits.k12.rate"
    },
    "variables": [
      "il_property_tax_credit",
      "k12_tuition_and_fees",
      "il_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "il_is_exemption_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois K-12 Education Expense Credit"
  },
  "il_property_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/credits/il_property_tax_credit.py",
    "parameters": {
      "p": "gov.states.il.tax.income.credits",
      "rate": "gov.states.il.tax.income.credits.property_tax.rate",
      "property_tax": "gov.states.il.tax.income.credits.property_tax"
    },
    "variables": [
      "il_income_tax_before_non_refundable_credits",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "il_is_exemption_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Property Tax Credit"
  },
  "il_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/tax/income/credits/il_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "il_pass_through_withholding",
      "il_pass_through_entity_tax_credit",
      "il_eitc",
      "il_ctc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois refundable credits",
    "adds_from_parameter": "gov.states.il.tax.income.credits.refundable"
  },
  "il_aabd": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/il_aabd.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "il_aabd_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) cash benefit"
  },
  "il_aabd_area": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/il_aabd_area.py",
    "parameters": {
      "p": "gov.states.il.dhs.aabd.payment.area",
      "area_1": "gov.states.il.dhs.aabd.payment.area.area_1",
      "area_2": "gov.states.il.dhs.aabd.payment.area.area_2",
      "area_3": "gov.states.il.dhs.aabd.payment.area.area_3",
      "area_4": "gov.states.il.dhs.aabd.payment.area.area_4",
      "area_5": "gov.states.il.dhs.aabd.payment.area.area_5",
      "area_6": "gov.states.il.dhs.aabd.payment.area.area_6",
      "area_7": "gov.states.il.dhs.aabd.payment.area.area_7",
      "area_8": "gov.states.il.dhs.aabd.payment.area.area_8"
    },
    "variables": [
      "county_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "Enum",
    "possible_values": "IllinoisAABDArea",
    "enum_options": [
      {
        "key": "AREA_1",
        "value": "Area 1"
      },
      {
        "key": "AREA_2",
        "value": "Area 2"
      },
      {
        "key": "AREA_3",
        "value": "Area 3"
      },
      {
        "key": "AREA_4",
        "value": "Area 4"
      },
      {
        "key": "AREA_5",
        "value": "Area 5"
      },
      {
        "key": "AREA_6",
        "value": "Area 6"
      },
      {
        "key": "AREA_7",
        "value": "Area 7"
      },
      {
        "key": "AREA_8",
        "value": "Area 8"
      }
    ],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) area"
  },
  "il_aabd_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/il_aabd_person.py",
    "parameters": {},
    "variables": [
      "il_aabd_countable_income",
      "il_aabd_need_standard_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "il_aabd_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) cash benefit per person"
  },
  "il_aabd_institutional_status": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/il_aabd_institutional_status.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "Enum",
    "possible_values": "IllinoisAABDInstitutionalStatus",
    "enum_options": [
      {
        "key": "A",
        "value": "A"
      },
      {
        "key": "B",
        "value": "B"
      },
      {
        "key": "C",
        "value": "C"
      },
      {
        "key": "D",
        "value": "D"
      },
      {
        "key": "E",
        "value": "E"
      },
      {
        "key": "F",
        "value": "F"
      },
      {
        "key": "G",
        "value": "G"
      },
      {
        "key": "H",
        "value": "H"
      },
      {
        "key": "I",
        "value": "I"
      },
      {
        "key": "NONE",
        "value": "None"
      }
    ],
    "label": "Illinois AABD Institutional Status"
  },
  "il_ccap_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/ccap/il_ccap_countable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income",
      "rental_income",
      "dividend_income",
      "interest_income",
      "pension_income",
      "veterans_benefits",
      "unemployment_compensation"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Child Care Assistance Program (CCAP) countable income",
    "adds_from_parameter": "gov.states.il.dhs.ccap.income.countable_income.sources"
  },
  "il_ccap_enrolled": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/ccap/il_ccap_enrolled.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the family is currently enrolled in Illinois Child Care Assistance Program (CCAP)"
  },
  "il_tanf_payment_level_for_initial_eligibility": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/il_tanf_payment_level_for_initial_eligibility.py",
    "parameters": {
      "p": "gov.states.il.dhs.tanf.payment_level",
      "rate": "gov.states.il.dhs.tanf.payment_level.rate"
    },
    "variables": [
      "il_tanf_assistance_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF) payment level for initial eligibility"
  },
  "il_tanf": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/il_tanf.py",
    "parameters": {},
    "variables": [
      "il_tanf_payment_level_for_grant_calculation",
      "il_tanf_countable_income_for_grant_calculation"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "il_tanf_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF)"
  },
  "il_tanf_payment_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/assistance_unit/il_tanf_payment_eligible_child.py",
    "parameters": {},
    "variables": [
      "il_tanf_payment_eligible_requirements",
      "il_tanf_eligible_child"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible child for Illinois Temporary Assistance for Needy Families (TANF) payment"
  },
  "il_tanf_assistance_unit_size": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/assistance_unit/il_tanf_assistance_unit_size.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "il_tanf_payment_eligible_child",
      "il_tanf_payment_eligible_parent"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF) assistance unit size"
  },
  "il_tanf_payment_eligible_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/assistance_unit/il_tanf_payment_eligible_requirements.py",
    "parameters": {},
    "variables": [
      "il_tanf_immigration_status_eligible_person",
      "ssi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible requirements for Illinois Temporary Assistance for Needy Families (TANF) payment"
  },
  "il_tanf_assistance_unit_fpg": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/assistance_unit/il_tanf_assistance_unit_fpg.py",
    "parameters": {
      "p_fpg": "gov.hhs.fpg",
      "first_person": "gov.hhs.fpg.first_person",
      "additional_person": "gov.hhs.fpg.additional_person"
    },
    "variables": [
      "il_tanf_assistance_unit_size",
      "state_group_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois TANF assistance unit's federal poverty guideline"
  },
  "il_tanf_payment_eligible_parent": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/assistance_unit/il_tanf_payment_eligible_parent.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "il_tanf_payment_eligible_requirements"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible parent for Illinois Temporary Assistance for Needy Families (TANF) payment"
  },
  "il_tanf_countable_income_for_grant_calculation": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/income/il_tanf_countable_income_for_grant_calculation.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "il_tanf_countable_earned_income_for_grant_calculation",
      "il_tanf_countable_unearned_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF) countable income for grant calculation"
  },
  "il_tanf_countable_income_for_initial_eligibility": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/income/il_tanf_countable_income_for_initial_eligibility.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "il_tanf_countable_earned_income_for_initial_eligibility",
      "il_tanf_countable_unearned_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF) countable income at application"
  },
  "il_tanf_demographic_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/eligibility/il_tanf_demographic_eligible_person.py",
    "parameters": {},
    "variables": [
      "is_pregnant",
      "il_tanf_eligible_child"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for Illinois Temporary Assistance for Needy Families (TANF) based on demographics"
  },
  "il_tanf_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/eligibility/il_tanf_income_eligible.py",
    "parameters": {},
    "variables": [
      "il_tanf_payment_level_for_initial_eligibility",
      "il_tanf_countable_income_for_initial_eligibility"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Illinois Temporary Assistance for Needy Families (TANF) due to income"
  },
  "il_tanf_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/eligibility/il_tanf_eligible.py",
    "parameters": {},
    "variables": [
      "il_tanf_non_financial_eligible",
      "il_tanf_income_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Illinois Temporary Assistance for Needy Families (TANF)"
  },
  "il_tanf_immigration_status_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/eligibility/il_tanf_immigration_status_eligible_person.py",
    "parameters": {
      "p": "gov.states.il.dhs.tanf",
      "qualified_noncitizen_status": "gov.states.il.dhs.tanf.qualified_noncitizen_status"
    },
    "variables": [
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Illinois TANF based on immigration status"
  },
  "il_tanf_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/eligibility/il_tanf_eligible_child.py",
    "parameters": {
      "p": "gov.states.il.dhs.tanf.age_threshold",
      "student_dependent": "gov.states.il.dhs.tanf.age_threshold.student_dependent",
      "minor_child": "gov.states.il.dhs.tanf.age_threshold.minor_child"
    },
    "variables": [
      "monthly_age",
      "is_tax_unit_dependent",
      "is_in_secondary_school"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible child for Illinois Temporary Assistance for Needy Families (TANF) based on demographics"
  },
  "il_tanf_non_financial_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/eligibility/il_tanf_non_financial_eligible.py",
    "parameters": {},
    "variables": [
      "il_tanf_immigration_status_eligible_person",
      "il_tanf_demographic_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Illinois Temporary Assistance for Needy Families (TANF) due to non financial requirements"
  },
  "il_tanf_gross_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/income/earned/il_tanf_gross_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income",
      "rental_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF) gross earned income",
    "adds_from_parameter": "gov.states.il.dhs.tanf.income.sources.earned"
  },
  "il_tanf_countable_earned_income_for_grant_calculation": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/income/earned/il_tanf_countable_earned_income_for_grant_calculation.py",
    "parameters": {
      "p": "gov.states.il.dhs.tanf.income.disregard",
      "rate": "gov.states.il.dhs.tanf.income.disregard.rate"
    },
    "variables": [
      "il_tanf_childcare_deduction",
      "il_tanf_countable_gross_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF) countable earned income for grant calculation"
  },
  "il_tanf_countable_earned_income_for_initial_eligibility": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/income/earned/il_tanf_countable_earned_income_for_initial_eligibility.py",
    "parameters": {},
    "variables": [
      "il_tanf_childcare_deduction",
      "il_tanf_countable_gross_earned_income",
      "il_tanf_initial_employment_deduction_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF) countable earned income for initial eligibility"
  },
  "il_tanf_countable_gross_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/income/earned/il_tanf_countable_gross_earned_income.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "il_tanf_gross_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF) countable gross earned income"
  },
  "il_tanf_initial_employment_deduction_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/income/deductions/il_tanf_initial_employment_deduction_person.py",
    "parameters": {
      "p": "gov.states.il.dhs.tanf.income.initial_employment_deduction",
      "rate": "gov.states.il.dhs.tanf.income.initial_employment_deduction.rate"
    },
    "variables": [
      "il_tanf_gross_earned_income",
      "il_tanf_payment_level_for_initial_eligibility",
      "il_tanf_initial_employment_deduction_fpg",
      "is_tax_unit_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF) initial employment deduction per person"
  },
  "il_tanf_initial_employment_deduction_fpg": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/income/deductions/il_tanf_initial_employment_deduction_fpg.py",
    "parameters": {
      "p_fpg": "gov.hhs.fpg",
      "first_person": "gov.hhs.fpg.first_person",
      "additional_person": "gov.hhs.fpg.additional_person"
    },
    "variables": [
      "il_tanf_assistance_unit_size",
      "state_group_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois TANF federal poverty guidelines for the initial employment deduction"
  },
  "il_tanf_childcare_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/income/deductions/il_tanf_childcare_deduction.py",
    "parameters": {
      "p": "gov.states.il.dhs.tanf.income.child_care_deduction",
      "calc": "gov.states.il.dhs.tanf.income.child_care_deduction.calc"
    },
    "variables": [
      "monthly_age",
      "is_tax_unit_dependent",
      "childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF) child care deduction ",
    "bracket_parameters": {
      "p": "gov.states.il.dhs.tanf.income.child_care_deduction"
    },
    "parameter_details": {
      "p": {
        "path": "gov.states.il.dhs.tanf.income.child_care_deduction",
        "type": "bracket",
        "brackets": [
          {
            "threshold": 0,
            "amount": 200
          },
          {
            "threshold": 2,
            "amount": 175
          }
        ],
        "description": "Illinois exempts this amount of child care expenses from the gross earned income under Temporary Assistance for Needy Families program, based on child age."
      }
    }
  },
  "il_tanf_gross_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/income/unearned/il_tanf_gross_unearned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "social_security",
      "disability_benefits",
      "workers_compensation",
      "unemployment_compensation",
      "retirement_distributions",
      "alimony_income",
      "dividend_income",
      "interest_income",
      "farm_income",
      "farm_rent_income",
      "capital_gains",
      "debt_relief",
      "illicit_income",
      "miscellaneous_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF) gross unearned income",
    "adds_from_parameter": "gov.states.il.dhs.tanf.income.sources.unearned"
  },
  "il_tanf_countable_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/tanf/income/unearned/il_tanf_countable_unearned_income.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "il_tanf_gross_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Temporary Assistance for Needy Families (TANF) countable unearned income"
  },
  "il_ccap_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/ccap/eligibility/il_ccap_eligible_child.py",
    "parameters": {
      "p": "gov.states.il.dhs.ccap.age_limit",
      "special_needs_child": "gov.states.il.dhs.ccap.age_limit.special_needs_child",
      "child": "gov.states.il.dhs.ccap.age_limit.child"
    },
    "variables": [
      "monthly_age",
      "is_disabled",
      "il_ccap_immigration_status_eligible_person",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible child for Illinois Child Care Assistance Program (CCAP)"
  },
  "il_ccap_parent_meets_working_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/ccap/eligibility/il_ccap_parent_meets_working_requirements.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "is_full_time_student",
      "employment_income",
      "self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Parent meets Illinois Child Care Assistance Program (CCAP) working requirements"
  },
  "il_ccap_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/ccap/eligibility/il_ccap_income_eligible.py",
    "parameters": {
      "p": "gov.states.il.dhs.ccap.income.income_limit",
      "redetermination_rate": "gov.states.il.dhs.ccap.income.income_limit.redetermination_rate",
      "new_applicants_rate": "gov.states.il.dhs.ccap.income.income_limit.new_applicants_rate"
    },
    "variables": [
      "il_ccap_countable_income",
      "il_ccap_enrolled",
      "spm_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Illinois Child Care Assistance Program (CCAP) due to income"
  },
  "il_ccap_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/ccap/eligibility/il_ccap_eligible.py",
    "parameters": {},
    "variables": [
      "il_ccap_income_eligible",
      "il_ccap_parent_meets_working_requirements",
      "il_ccap_eligible_child"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Illinois Child Care Assistance Program (CCAP)"
  },
  "il_ccap_immigration_status_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/ccap/eligibility/il_ccap_immigration_status_eligible_person.py",
    "parameters": {
      "p": "gov.states.il.dhs.ccap",
      "qualified_alien_statuses": "gov.states.il.dhs.ccap.qualified_alien_statuses"
    },
    "variables": [
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for Illinois Child Care Assistance Program (CCAP) based on immigration status"
  },
  "il_aabd_vehicle_is_essential": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/asset/il_aabd_vehicle_is_essential.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the household has a vehicle which is considered essential under the Illinois Aid to the Aged, Blind or Disabled (AABD)"
  },
  "il_aabd_asset_value_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/asset/il_aabd_asset_value_eligible.py",
    "parameters": {
      "p": "gov.states.il.dhs.aabd.asset.disregard",
      "base": "gov.states.il.dhs.aabd.asset.disregard.base",
      "additional": "gov.states.il.dhs.aabd.asset.disregard.additional"
    },
    "variables": [
      "il_aabd_countable_assets",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Illinois Aid to the Aged, Blind or Disabled (AABD) due to asset"
  },
  "il_aabd_countable_assets": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/asset/il_aabd_countable_assets.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "spm_unit_cash_assets",
      "retirement_distributions",
      "il_aabd_countable_vehicle_value"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) countable assets",
    "adds_from_parameter": "gov.states.il.dhs.aabd.asset.sources"
  },
  "il_aabd_countable_vehicle_value": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/asset/il_aabd_countable_vehicle_value.py",
    "parameters": {
      "p": "gov.states.il.dhs.aabd.asset.vehicle_exemption",
      "amount": "gov.states.il.dhs.aabd.asset.vehicle_exemption.amount"
    },
    "variables": [
      "household_vehicles_owned",
      "il_aabd_vehicle_is_essential",
      "household_vehicles_value"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) countable vehicles value"
  },
  "il_aabd_need_standard_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/payment/il_aabd_need_standard_person.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "il_aabd_grant_amount",
      "il_aabd_utility_allowance_person",
      "il_aabd_personal_allowance",
      "il_aabd_shelter_allowance"
    ],
    "subtracts": [],
    "defined_for": "il_aabd_non_financial_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) need standard for each person"
  },
  "il_aabd_grant_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/payment/il_aabd_grant_amount.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) grant amount",
    "adds_parameter_values": {
      "gov.states.il.dhs.aabd.payment.grant_amount": "$789"
    }
  },
  "il_aabd_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/income/il_aabd_countable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "il_aabd_earned_income_after_exemption_person",
      "il_aabd_countable_unearned_income"
    ],
    "subtracts": [],
    "defined_for": "il_aabd_non_financial_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) countable income"
  },
  "il_aabd_countable_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/income/il_aabd_countable_unearned_income.py",
    "parameters": {
      "p": "gov.states.il.dhs.aabd.income.exemption",
      "flat": "gov.states.il.dhs.aabd.income.exemption.flat"
    },
    "variables": [
      "il_aabd_gross_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) countable unearned income"
  },
  "il_aabd_gross_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/income/il_aabd_gross_unearned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "social_security",
      "ssi",
      "disability_benefits",
      "workers_compensation",
      "unemployment_compensation",
      "retirement_distributions",
      "alimony_income",
      "dividend_income",
      "interest_income",
      "farm_income",
      "farm_rent_income",
      "capital_gains",
      "debt_relief",
      "illicit_income",
      "miscellaneous_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) gross unearned income",
    "adds_from_parameter": "gov.states.il.dhs.aabd.income.sources.unearned"
  },
  "il_aabd_flat_exemption_excess_over_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/income/il_aabd_flat_exemption_excess_over_unearned_income.py",
    "parameters": {
      "p": "gov.states.il.dhs.aabd.income.exemption",
      "flat": "gov.states.il.dhs.aabd.income.exemption.flat"
    },
    "variables": [
      "il_aabd_countable_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) flat exemption excess over unearned income"
  },
  "il_aabd_non_financial_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/eligibility/il_aabd_non_financial_eligible_person.py",
    "parameters": {},
    "variables": [
      "il_aabd_immigration_status_eligible_person",
      "il_aabd_aged_blind_disabled_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for Illinois Aid to the Aged, Blind or Disabled (AABD)"
  },
  "il_aabd_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/eligibility/il_aabd_eligible_person.py",
    "parameters": {},
    "variables": [
      "il_aabd_non_financial_eligible_person",
      "il_aabd_financial_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for Illinois Aid to the Aged, Blind or Disabled (AABD)"
  },
  "il_aabd_financial_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/eligibility/il_aabd_financial_eligible_person.py",
    "parameters": {},
    "variables": [
      "il_aabd_countable_income",
      "il_aabd_need_standard_person",
      "il_aabd_asset_value_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) eligible person due to financial criteria"
  },
  "il_aabd_immigration_status_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/eligibility/il_aabd_immigration_status_eligible_person.py",
    "parameters": {
      "p": "gov.states.il.dhs.aabd",
      "qualified_noncitizen_status": "gov.states.il.dhs.aabd.qualified_noncitizen_status"
    },
    "variables": [
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for Illinois Aid to the Aged, Blind or Disabled (AABD) based on immigration status"
  },
  "il_aabd_aged_blind_disabled_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/eligibility/il_aabd_aged_blind_disabled_person.py",
    "parameters": {
      "p": "gov.states.il.dhs.aabd",
      "aged_age_threshold": "gov.states.il.dhs.aabd.aged_age_threshold"
    },
    "variables": [
      "is_blind",
      "monthly_age",
      "is_ssi_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Aged, blind, or disabled person for Illinois Aid to the Aged, Blind or Disabled (AABD)"
  },
  "il_aabd_earned_income_after_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/income/earned/il_aabd_earned_income_after_exemption_person.py",
    "parameters": {
      "p": "gov.states.il.dhs.aabd.income.exemption",
      "calc": "gov.states.il.dhs.aabd.income.exemption.elderly_or_disabled.calc",
      "blind": "gov.states.il.dhs.aabd.income.exemption.blind",
      "elderly_or_disabled": "gov.states.il.dhs.aabd.income.exemption.elderly_or_disabled"
    },
    "variables": [
      "is_blind",
      "il_aabd_expense_exemption_person",
      "il_aabd_flat_exemption_excess_over_unearned_income",
      "il_aabd_gross_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) earned income after exemption per person"
  },
  "il_aabd_gross_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/income/earned/il_aabd_gross_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income",
      "rental_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) gross earned income",
    "adds_from_parameter": "gov.states.il.dhs.aabd.income.sources.earned"
  },
  "il_aabd_child_care_expense_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/income/expense/il_aabd_child_care_expense_exemption.py",
    "parameters": {
      "p": "gov.states.il.dhs.aabd.income.exemption",
      "calc": "gov.states.il.dhs.aabd.income.exemption.child_care.calc",
      "child_care": "gov.states.il.dhs.aabd.income.exemption.child_care"
    },
    "variables": [
      "monthly_hours_worked",
      "is_married",
      "tax_unit_dependents",
      "is_tax_unit_head_or_spouse",
      "childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) childcare expense exemption"
  },
  "il_aabd_expense_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/income/expense/il_aabd_expense_exemption_person.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "state_withheld_income_tax",
      "employee_social_security_tax",
      "il_aabd_child_care_expense_exemption"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) expense exemption per person",
    "adds_from_parameter": "gov.states.il.dhs.aabd.income.exemption.sources"
  },
  "il_aabd_personal_allowance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/payment/personal_allowance/il_aabd_personal_allowance.py",
    "parameters": {
      "p": "gov.states.il.dhs.aabd.payment.personal_allowance",
      "bedfast": "gov.states.il.dhs.aabd.payment.personal_allowance.bedfast",
      "active": "gov.states.il.dhs.aabd.payment.personal_allowance.active"
    },
    "variables": [
      "il_aabd_is_bedfast",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) personal allowance"
  },
  "il_aabd_is_bedfast": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/payment/personal_allowance/il_aabd_is_bedfast.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the person is a bedfast client under the Illinois Aid to the Aged, Blind or Disabled (AABD)"
  },
  "il_aabd_shelter_allowance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/dhs/aabd/payment/shelter/il_aabd_shelter_allowance.py",
    "parameters": {
      "p": "gov.states.il.dhs.aabd.payment.shelter_allowance",
      "rent": "gov.states.il.dhs.aabd.payment.shelter_allowance.rent",
      "homestead": "gov.states.il.dhs.aabd.payment.shelter_allowance.homestead"
    },
    "variables": [
      "rent",
      "housing_cost",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Aid to the Aged, Blind or Disabled (AABD) shelter allowance"
  },
  "il_cta_benefit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/rta/cta/il_cta_benefit.py",
    "parameters": {},
    "variables": [
      "il_cta_reduced_fare_benefit",
      "il_cta_free_ride_benefit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Chicago Transit Authority benefit amount"
  },
  "il_cta_reduced_fare_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/rta/cta/reduced_fare/il_cta_reduced_fare_eligible.py",
    "parameters": {},
    "variables": [
      "il_cta_children_reduced_fare_eligible",
      "il_cta_rta_reduced_fare_eligible",
      "il_cta_student_reduced_fare_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Illinois Chicago Transit Authority Reduced Fare Program"
  },
  "il_cta_children_reduced_fare_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/rta/cta/reduced_fare/il_cta_children_reduced_fare_eligible.py",
    "parameters": {
      "p": "gov.states.il.rta.cta.reduced_fare_program.age_threshold",
      "calc": "gov.states.il.rta.cta.reduced_fare_program.age_threshold.child.calc",
      "child": "gov.states.il.rta.cta.reduced_fare_program.age_threshold.child"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Illinois Chicago Transit Authority children reduced fare"
  },
  "il_cta_reduced_fare_benefit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/rta/cta/reduced_fare/il_cta_reduced_fare_benefit.py",
    "parameters": {
      "p": "gov.states.il.rta.cta.monthly_pass_cost",
      "full_fare": "gov.states.il.rta.cta.monthly_pass_cost.full_fare",
      "reduced_fare": "gov.states.il.rta.cta.monthly_pass_cost.reduced_fare"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "il_cta_reduced_fare_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Chicago Transit Authority Reduced Fare Program benefit"
  },
  "il_cta_rta_reduced_fare_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/rta/cta/reduced_fare/il_cta_rta_reduced_fare_eligible.py",
    "parameters": {
      "p": "gov.states.il.rta.cta.reduced_fare_program.age_threshold",
      "senior": "gov.states.il.rta.cta.reduced_fare_program.age_threshold.senior"
    },
    "variables": [
      "age",
      "is_disabled",
      "is_medicare_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Illinois Chicago Transit Authority RTA reduced fare"
  },
  "il_cta_student_reduced_fare_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/rta/cta/reduced_fare/il_cta_student_reduced_fare_eligible.py",
    "parameters": {
      "p": "gov.states.il.rta.cta.reduced_fare_program.age_threshold",
      "student": "gov.states.il.rta.cta.reduced_fare_program.age_threshold.student"
    },
    "variables": [
      "age",
      "is_in_secondary_school"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Illinois Chicago Transit Authority student reduced fare"
  },
  "il_cta_free_ride_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/rta/cta/free_ride/il_cta_free_ride_eligible.py",
    "parameters": {
      "p": "gov.states.il.rta.cta.free_ride_program.age_threshold",
      "young_child": "gov.states.il.rta.cta.free_ride_program.age_threshold.young_child"
    },
    "variables": [
      "age",
      "il_cta_military_service_pass_eligible",
      "il_bap_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Illinois Chicago Transit Authority Free Ride Program"
  },
  "il_cta_military_service_pass_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/rta/cta/free_ride/il_cta_military_service_pass_eligible.py",
    "parameters": {},
    "variables": [
      "military_basic_pay",
      "is_fully_disabled_service_connected_veteran"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Illinois Chicago Transit Authority military service pass"
  },
  "il_cta_free_ride_benefit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/il/rta/cta/free_ride/il_cta_free_ride_benefit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "il_cta_free_ride_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Illinois Chicago Transit Authority Free Ride Program benefit",
    "adds_parameter_values": {
      "gov.states.il.rta.cta.monthly_pass_cost.full_fare": "$75"
    }
  },
  "or_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/or_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "or_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "or_refundable_credits"
    ],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR income tax after refundable credits"
  },
  "or_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/or_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "or_additions"
    ],
    "subtracts": [
      "or_income_subtractions"
    ],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oregon adjusted gross income"
  },
  "or_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/or_income_tax_before_credits.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "or_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR income tax before credits"
  },
  "or_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/or_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oregon income additions"
  },
  "or_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/or_taxable_income.py",
    "parameters": {},
    "variables": [
      "or_agi",
      "or_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR taxable income"
  },
  "or_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/or_withheld_income_tax.py",
    "parameters": {},
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oregon withheld income tax"
  },
  "or_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/or_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "or_income_tax_before_credits",
      "or_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR income tax before refundable credits"
  },
  "or_federal_tax_liability_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/subtractions/or_federal_tax_liability_subtraction.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "adjusted_gross_income",
      "eitc",
      "income_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR federal tax liability subtraction"
  },
  "or_income_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/subtractions/or_income_subtractions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR income subtractions"
  },
  "or_federal_pension_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/subtractions/or_federal_pension_subtraction.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oregon Federal Pension Subtraction"
  },
  "or_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/deductions/or_itemized_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "itemized_deductions_less_salt",
      "capped_property_taxes"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR itemized deductions"
  },
  "or_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/deductions/or_deductions.py",
    "parameters": {},
    "variables": [
      "or_standard_deduction",
      "or_itemized_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR deductions"
  },
  "or_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/deductions/or_standard_deduction.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "age_head",
      "age_spouse",
      "blind_spouse",
      "blind_head",
      "tax_unit_earned_income",
      "head_is_dependent_elsewhere"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR standard deduction",
    "description": "Oregon standard deduction, including bonus for aged or blind and special rules for filers who are claimable as dependents."
  },
  "or_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/or_eitc.py",
    "parameters": {},
    "variables": [
      "age",
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR EITC"
  },
  "or_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/or_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "or_eitc",
      "or_kicker",
      "or_working_family_household_and_dependent_care_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oregon refundable tax credits",
    "adds_from_parameter": "gov.states.or.tax.income.credits.refundable"
  },
  "or_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/or_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "or_exemption_credit",
      "or_retirement_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR uncapped non-refundable tax credits",
    "adds_from_parameter": "gov.states.or.tax.income.credits.nonrefundable"
  },
  "or_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/or_ctc.py",
    "parameters": {},
    "variables": [
      "or_agi",
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oregon Child Tax Credit"
  },
  "or_severely_disabled_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/exemption/or_severely_disabled_exemptions.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_dependent",
      "is_severely_disabled",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "OR severely disabled exemptions for tax head or spouse"
  },
  "or_disabled_child_dependent_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/exemption/or_disabled_child_dependent_exemptions.py",
    "parameters": {},
    "variables": [
      "is_disabled",
      "adjusted_gross_income",
      "is_child_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "OR disabled child dependent exemptions"
  },
  "or_exemption_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/exemption/or_exemption_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR exemption credit"
  },
  "or_regular_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/exemption/or_regular_exemptions.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "exemptions_count",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "OR regular exemptions"
  },
  "or_wfhdc_has_qualified_individual_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/wfhdc/or_wfhdc_has_qualified_individual_eligible.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "age",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Check if household has eligible individuals for Oregon Working Family Household and Dependent Care Credit",
    "description": "Oregon Working Family Household and Dependent Care Credit household eligibility"
  },
  "or_wfhdc_income_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/wfhdc/or_wfhdc_income_category.py",
    "parameters": {},
    "variables": [
      "or_wfhdc_household_income",
      "tax_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "or_wfhdc_eligible",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Oregon working family household and dependent care credit percentage table row letter",
    "unit": "/1"
  },
  "or_wfhdc_eligibility_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/wfhdc/or_wfhdc_eligibility_category.py",
    "parameters": {},
    "variables": [
      "age",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "or_wfhdc_eligible",
    "value_type": "Enum",
    "possible_values": "OregonWFHDCEligibilityCategory",
    "enum_options": [
      {
        "key": "YOUNGEST",
        "value": "Youngest"
      },
      {
        "key": "YOUNG",
        "value": "Young"
      },
      {
        "key": "OLD",
        "value": "Old"
      },
      {
        "key": "DISABLED_TEENS",
        "value": "Disabled teenagers"
      },
      {
        "key": "DISABLED_ADULTS",
        "value": "Disabled adults"
      },
      {
        "key": "NONE",
        "value": "None"
      }
    ],
    "label": "Oregon working family household and dependent care credit percentage table column"
  },
  "or_wfhdc_household_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/wfhdc/or_wfhdc_household_income.py",
    "parameters": {},
    "variables": [
      "or_agi",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Household income for the Oregon working family household and dependent care credit",
    "description": "Larger of federal and state AGI"
  },
  "or_working_family_household_and_dependent_care_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/wfhdc/or_working_family_household_and_dependent_care_credit.py",
    "parameters": {},
    "variables": [
      "or_cdcc_relevant_expenses",
      "or_wfhdc_income_category",
      "or_wfhdc_eligibility_category"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "or_wfhdc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oregon working family household and dependent care credit"
  },
  "or_wfhdc_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/wfhdc/or_wfhdc_income_eligible.py",
    "parameters": {},
    "variables": [
      "or_wfhdc_household_income",
      "tax_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Income eligible for the Oregon working family household and dependent care credit",
    "description": "Oregon Working Family Household and Dependent Care Credit household eligibility"
  },
  "or_cdcc_relevant_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/wfhdc/or_cdcc_relevant_expenses.py",
    "parameters": {
      "p_cdcc": "gov.irs.credits.cdcc"
    },
    "variables": [
      "min_head_spouse_earned",
      "capped_count_cdcc_eligible",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oregon working family household and dependent care expenses"
  },
  "or_wfhdc_household_size_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/wfhdc/or_wfhdc_household_size_eligible.py",
    "parameters": {},
    "variables": [
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Household size eligible for the Oregon working family household and dependent care credit",
    "description": "Oregon Working Family Household and Dependent Care Credit household eligibility"
  },
  "or_wfhdc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/wfhdc/or_wfhdc_eligible.py",
    "parameters": {},
    "variables": [
      "or_wfhdc_employment_eligible",
      "or_wfhdc_household_size_eligible",
      "or_wfhdc_income_eligible",
      "or_wfhdc_has_qualified_individual_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Oregon working family household and dependent care credit",
    "description": "Oregon Working Family Household and Dependent Care Credit household eligibility"
  },
  "or_wfhdc_employment_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/wfhdc/or_wfhdc_employment_eligible.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "is_full_time_student",
      "is_in_k12_school",
      "earned_income",
      "is_tax_unit_head_or_spouse",
      "is_tax_unit_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Employment eligible for the Oregon working family household and dependent care credit",
    "description": "Oregon Working Family Household and Dependent Care Credit household eligibility"
  },
  "or_retirement_credit_household_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/retirement_credit/or_retirement_credit_household_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "tax_exempt_interest_income"
    ],
    "subtracts": [
      "taxable_social_security"
    ],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Household income for the Oregon Retirement Income Tax Credit"
  },
  "or_retirement_credit_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/retirement_credit/or_retirement_credit_eligible_person.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "age",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Oregon Retirement Income Tax Credit"
  },
  "or_retirement_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/retirement_credit/or_retirement_credit.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "social_security",
      "or_federal_pension_subtraction",
      "or_retirement_credit_household_income",
      "taxable_pension_income",
      "or_retirement_credit_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oregon Retirement Income Tax Credit"
  },
  "or_kicker": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/kicker/or_kicker.py",
    "parameters": {},
    "variables": [
      "or_tax_before_credits_in_prior_year"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR Kicker"
  },
  "or_tax_before_credits_in_prior_year": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/or/tax/income/credits/kicker/or_tax_before_credits_in_prior_year.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "OR tax before credits in prior year"
  },
  "oh_income_tax_exempt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/oh_income_tax_exempt.py",
    "parameters": {
      "p": "gov.states.oh.tax.income",
      "agi_threshold": "gov.states.oh.tax.income.agi_threshold"
    },
    "variables": [
      "oh_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio income tax exempt"
  },
  "oh_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/oh_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.rates",
      "calc": "gov.states.oh.tax.income.rates.calc"
    },
    "variables": [
      "oh_income_tax_exempt",
      "oh_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio income tax before credits",
    "bracket_parameters": {
      "p": "gov.states.oh.tax.income.rates"
    },
    "parameter_details": {
      "p": {
        "path": "gov.states.oh.tax.income.rates",
        "type": "bracket",
        "brackets": [
          {
            "threshold": 0,
            "amount": null
          },
          {
            "threshold": {
              "2021-01-01": 25000,
              "2022-01-01": 26050,
              "2023-01-01": 26050,
              "2024-01-01": 26050,
              "2025-01-01": 26050,
              "2026-01-01": 26050
            },
            "amount": null
          },
          {
            "threshold": {
              "2021-01-01": 44250,
              "2022-01-01": 46100,
              "2023-01-01": 100000,
              "2026-01-01": Infinity
            },
            "amount": null
          },
          {
            "threshold": {
              "2021-01-01": 88450,
              "2022-01-01": 92150,
              "2023-01-01": 115300,
              "2024-01-01": Infinity
            },
            "amount": null
          },
          {
            "threshold": {
              "2021-01-01": 110650,
              "2022-01-01": 115300,
              "2023-01-01": Infinity
            },
            "amount": null
          }
        ],
        "description": "Ohio limits its tax rate, depending on modified adjusted gross income for the taxable year for trusts and estates."
      }
    }
  },
  "oh_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/oh_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.oh.tax.income",
      "agi_threshold": "gov.states.oh.tax.income.agi_threshold",
      "rates": "gov.states.oh.tax.income.rates",
      "exemptions": "gov.states.oh.tax.income.exemptions",
      "calc": "gov.states.oh.tax.income.rates.calc",
      "amount": "gov.states.oh.tax.income.exemptions.personal.amount",
      "personal": "gov.states.oh.tax.income.exemptions.personal"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio withheld income tax"
  },
  "oh_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/oh_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "oh_eitc",
      "oh_cdcc",
      "oh_senior_citizen_credit",
      "oh_retirement_credit",
      "oh_non_public_school_credits",
      "oh_exemption_credit",
      "oh_joint_filing_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio non-refundable credits",
    "adds_from_parameter": "gov.states.oh.tax.income.credits.non_refundable"
  },
  "oh_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/oh_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "oh_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "oh_refundable_credits"
    ],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio income tax"
  },
  "oh_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/oh_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "oh_income_tax_before_non_refundable_credits",
      "oh_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio income tax before refundable credits"
  },
  "oh_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/oh_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio refundable credits"
  },
  "oh_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/oh_taxable_income.py",
    "parameters": {},
    "variables": [
      "oh_agi",
      "oh_personal_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio taxable income"
  },
  "oh_bonus_depreciation_add_back": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/additions/oh_bonus_depreciation_add_back.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio bonus depreciation add back",
    "description": ""
  },
  "oh_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/additions/oh_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "oh_bonus_depreciation_add_back",
      "oh_other_add_backs"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio additions",
    "adds_from_parameter": "gov.states.oh.tax.income.additions"
  },
  "oh_other_add_backs": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/additions/oh_other_add_backs.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio other add backs",
    "description": ""
  },
  "oh_uniformed_services_retirement_income_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/deductions/oh_uniformed_services_retirement_income_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio Uniformed services retirement income"
  },
  "oh_section_179_expense_add_back": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/deductions/oh_section_179_expense_add_back.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio Section 179 Expense Add Back",
    "description": ""
  },
  "oh_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/deductions/oh_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "oh_section_179_expense_add_back",
      "taxable_social_security",
      "oh_uniformed_services_retirement_income_deduction",
      "oh_529_plan_deduction_person",
      "pell_grant",
      "educator_expense",
      "disability_benefits",
      "oh_unreimbursed_medical_care_expense_deduction_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio deductions",
    "adds_from_parameter": "gov.states.oh.tax.income.deductions.deductions"
  },
  "oh_personal_exemptions_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/exemptions/oh_personal_exemptions_eligible_person.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "claimed_as_dependent_on_another_return",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Ohio Exemption Credit"
  },
  "oh_personal_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/exemptions/oh_personal_exemptions.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.exemptions.personal",
      "calc": "gov.states.oh.tax.income.exemptions.personal.amount.calc",
      "amount": "gov.states.oh.tax.income.exemptions.personal.amount"
    },
    "variables": [
      "oh_agi",
      "oh_personal_exemptions_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio personal exemptions"
  },
  "oh_senior_citizen_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/oh_senior_citizen_credit.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.senior_citizen",
      "age_threshold": "gov.states.oh.tax.income.credits.senior_citizen.age_threshold",
      "amount": "gov.states.oh.tax.income.credits.senior_citizen.amount",
      "calc": "gov.states.oh.tax.income.credits.senior_citizen.amount.calc"
    },
    "variables": [
      "age_head",
      "oh_has_taken_oh_lump_sum_credits",
      "oh_modified_agi",
      "is_tax_unit_head",
      "oh_personal_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio senior citizen credit"
  },
  "oh_exemption_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/oh_exemption_credit.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.exemption",
      "calc": "gov.states.oh.tax.income.credits.exemption.amount.calc",
      "amount": "gov.states.oh.tax.income.credits.exemption.amount"
    },
    "variables": [
      "oh_agi",
      "exemptions_count",
      "oh_personal_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio Exemption Credit"
  },
  "oh_non_public_school_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/oh_non_public_school_credits.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits",
      "calc": "gov.states.oh.tax.income.credits.non_public_tuition.calc",
      "non_public_tuition": "gov.states.oh.tax.income.credits.non_public_tuition"
    },
    "variables": [
      "non_public_school_tuition",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio Nonchartered, Nonpublic, School Tuition Credit AGI Credit"
  },
  "oh_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/oh_eitc.py",
    "parameters": {
      "match": "gov.states.oh.tax.income.credits.eitc.rate"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio Earned Income Credit"
  },
  "oh_adoption_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/oh_adoption_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "oh_adoption_credit_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio adoption credit"
  },
  "oh_has_taken_oh_lump_sum_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/oh_has_taken_oh_lump_sum_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether a person has taken Ohio lump sum credits"
  },
  "oh_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/oh_cdcc.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.cdcc",
      "calc": "gov.states.oh.tax.income.credits.cdcc.match.calc",
      "match": "gov.states.oh.tax.income.credits.cdcc.match"
    },
    "variables": [
      "cdcc",
      "oh_modified_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio child and dependent care credit"
  },
  "oh_adoption_credit_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/oh_adoption_credit_person.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.adoption",
      "age_limit": "gov.states.oh.tax.income.credits.adoption.age_limit",
      "amount": "gov.states.oh.tax.income.credits.adoption.amount",
      "max": "gov.states.oh.tax.income.credits.adoption.amount.max",
      "min": "gov.states.oh.tax.income.credits.adoption.amount.min"
    },
    "variables": [
      "qualified_adoption_assistance_expense",
      "age",
      "adopted_this_year"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio adoption credit for each person"
  },
  "oh_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/adjusted_gross_income/oh_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "oh_agi_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio adjusted gross income"
  },
  "oh_agi_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/adjusted_gross_income/oh_agi_person.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income_person",
      "oh_additions"
    ],
    "subtracts": [
      "oh_deductions"
    ],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio adjusted gross income"
  },
  "oh_lump_sum_distribution_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/lump_sum_distribution/oh_lump_sum_distribution_credit_eligible.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.lump_sum_distribution",
      "income_limit": "gov.states.oh.tax.income.credits.lump_sum_distribution.income_limit"
    },
    "variables": [
      "form_4972_lumpsum_distributions",
      "oh_modified_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Ohio lump sum distribution credit"
  },
  "oh_lump_sum_distribution_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/lump_sum_distribution/oh_lump_sum_distribution_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "oh_lump_sum_distribution_credit_person"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio lump sum distribution credit"
  },
  "oh_lump_sum_distribution_credit_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/lump_sum_distribution/oh_lump_sum_distribution_credit_eligible_person.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.lump_sum_distribution",
      "age_threshold": "gov.states.oh.tax.income.credits.lump_sum_distribution.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Ohio lump sum distribution credit"
  },
  "oh_lump_sum_distribution_credit_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/lump_sum_distribution/oh_lump_sum_distribution_credit_person.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.lump_sum_distribution",
      "base_amount": "gov.states.oh.tax.income.credits.lump_sum_distribution.base_amount",
      "expected_remaining_years": "gov.states.oh.tax.income.credits.lump_sum_distribution.expected_remaining_years",
      "calc": "gov.states.oh.tax.income.credits.lump_sum_distribution.expected_remaining_years.calc"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "oh_lump_sum_distribution_credit_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio lump sum distribution credit"
  },
  "oh_retirement_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/retirement_income/oh_retirement_credit.py",
    "parameters": {},
    "variables": [
      "oh_lump_sum_retirement_credit",
      "oh_pension_based_retirement_income_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio Retirement Income Credit"
  },
  "oh_joint_filing_credit_qualifying_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/joint_filing_credit/oh_joint_filing_credit_qualifying_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "oh_agi_person"
    ],
    "subtracts": [
      "oh_joint_filing_credit_agi_subtractions"
    ],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio qualifying income for the joint filing credit"
  },
  "oh_joint_filing_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/joint_filing_credit/oh_joint_filing_credit_eligible.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.joint_filing",
      "income_threshold": "gov.states.oh.tax.income.credits.joint_filing.income_threshold"
    },
    "variables": [
      "is_tax_unit_head",
      "filing_status",
      "oh_joint_filing_credit_qualifying_income",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Ohio joint filing credit"
  },
  "oh_tax_before_joint_filing_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/joint_filing_credit/oh_tax_before_joint_filing_credit.py",
    "parameters": {},
    "variables": [
      "oh_partial_non_refundable_credits",
      "oh_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio tax liability before the joint filing credit"
  },
  "oh_joint_filing_credit_agi_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/joint_filing_credit/oh_joint_filing_credit_agi_subtractions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "interest_income",
      "dividend_income",
      "capital_gains",
      "rental_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio qualifying income for the joint filing credit",
    "adds_from_parameter": "gov.states.oh.tax.income.credits.joint_filing.agi_subtractions"
  },
  "oh_partial_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/joint_filing_credit/oh_partial_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "oh_cdcc",
      "oh_senior_citizen_credit",
      "oh_retirement_credit",
      "oh_exemption_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio non-refundable credits prior to the joint filing credit",
    "adds_from_parameter": "gov.states.oh.tax.income.credits.joint_filing.other_non_refundable_credits"
  },
  "oh_joint_filing_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/joint_filing_credit/oh_joint_filing_credit.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.joint_filing",
      "calc": "gov.states.oh.tax.income.credits.joint_filing.rate.calc",
      "cap": "gov.states.oh.tax.income.credits.joint_filing.cap",
      "rate": "gov.states.oh.tax.income.credits.joint_filing.rate"
    },
    "variables": [
      "oh_tax_before_joint_filing_credit",
      "oh_modified_agi",
      "oh_personal_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "oh_joint_filing_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio joint filing credit"
  },
  "oh_pension_based_retirement_income_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/retirement_income/pension_based/oh_pension_based_retirement_income_credit_eligible.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.retirement.pension_based",
      "income_limit": "gov.states.oh.tax.income.credits.retirement.pension_based.income_limit"
    },
    "variables": [
      "oh_modified_agi",
      "oh_personal_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Ohio pension based retirement income credit"
  },
  "oh_pension_based_retirement_income_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/retirement_income/pension_based/oh_pension_based_retirement_income_credit.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.retirement.pension_based",
      "calc": "gov.states.oh.tax.income.credits.retirement.pension_based.amount.calc",
      "amount": "gov.states.oh.tax.income.credits.retirement.pension_based.amount"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "taxable_pension_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "oh_pension_based_retirement_income_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio pension based retirement income credit"
  },
  "oh_lump_sum_retirement_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/retirement_income/lump_sum/oh_lump_sum_retirement_credit_eligible.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.retirement.lump_sum",
      "income_limit": "gov.states.oh.tax.income.credits.retirement.lump_sum.income_limit"
    },
    "variables": [
      "form_4972_lumpsum_distributions",
      "oh_modified_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Ohio lump sum retirement income credit"
  },
  "oh_lump_sum_retirement_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/credits/retirement_income/lump_sum/oh_lump_sum_retirement_credit.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.credits.retirement",
      "age_threshold": "gov.states.oh.tax.income.credits.retirement.lump_sum.age_threshold",
      "divisor": "gov.states.oh.tax.income.credits.retirement.lump_sum.divisor",
      "calc": "gov.states.oh.tax.income.credits.retirement.pension_based.amount.calc",
      "lump_sum": "gov.states.oh.tax.income.credits.retirement.lump_sum",
      "pension_based": "gov.states.oh.tax.income.credits.retirement.pension_based",
      "amount": "gov.states.oh.tax.income.credits.retirement.pension_based.amount"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "pension_income",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "oh_lump_sum_retirement_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio Lump Sum Retirement Income Credit"
  },
  "oh_unreimbursed_medical_care_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/deductions/medical_exepenses/oh_unreimbursed_medical_care_expense_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "oh_unreimbursed_medical_care_expense_deduction_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio unreimbursed medical and health care expense deduction"
  },
  "oh_uninsured_unreimbursed_medical_care_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/deductions/medical_exepenses/oh_uninsured_unreimbursed_medical_care_expenses.py",
    "parameters": {},
    "variables": [
      "employer_contribution_to_health_insurance_premiums_category",
      "health_insurance_premiums",
      "is_medicare_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio unreimbursed medical and health care expense deduction for uninsured expenses"
  },
  "oh_unreimbursed_medical_care_expense_deduction_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/deductions/medical_exepenses/oh_unreimbursed_medical_care_expense_deduction_person.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "oh_insured_unreimbursed_medical_care_expenses",
      "oh_uninsured_unreimbursed_medical_care_expenses",
      "long_term_health_insurance_premiums"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio unreimbursed medical and health care expense deduction"
  },
  "oh_529_plan_deduction_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/deductions/529_plan/oh_529_plan_deduction_person.py",
    "parameters": {},
    "variables": [
      "oh_529_plan_deduction",
      "investment_in_529_plan_indv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio deduction for contributions to 529 plans"
  },
  "oh_529_plan_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/deductions/529_plan/oh_529_plan_deduction.py",
    "parameters": {
      "p": "gov.states.oh.tax.income.deductions.plan_529_contributions",
      "cap": "gov.states.oh.tax.income.deductions.plan_529_contributions.cap"
    },
    "variables": [
      "count_529_contribution_beneficiaries",
      "investment_in_529_plan"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio deduction for contributions to 529 plans"
  },
  "oh_insured_unreimbursed_medical_care_expenses_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/deductions/medical_exepenses/insured_unreimbursed_expenses/oh_insured_unreimbursed_medical_care_expenses_person.py",
    "parameters": {},
    "variables": [
      "oh_insured_unreimbursed_medical_care_expenses",
      "oh_insured_unreimbursed_medical_care_expense_amount"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio insured unreimbursed medical and health care expense deduction for each person"
  },
  "oh_insured_unreimbursed_medical_care_expense_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/deductions/medical_exepenses/insured_unreimbursed_expenses/oh_insured_unreimbursed_medical_care_expense_amount.py",
    "parameters": {},
    "variables": [
      "employer_contribution_to_health_insurance_premiums_category",
      "health_insurance_premiums",
      "is_medicare_eligible",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio insured unreimbursed medical and health care expense amount"
  },
  "oh_insured_unreimbursed_medical_care_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/oh/tax/income/deductions/medical_exepenses/insured_unreimbursed_expenses/oh_insured_unreimbursed_medical_care_expenses.py",
    "parameters": {
      "rate": "gov.states.oh.tax.income.deductions.unreimbursed_medical_care_expenses.rate"
    },
    "variables": [
      "oh_insured_unreimbursed_medical_care_expense_amount",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ohio insured unreimbursed medical and health care expense deduction"
  },
  "id_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/id_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "id_income_tax_before_refundable_credits",
      "id_pbf"
    ],
    "subtracts": [
      "id_refundable_credits"
    ],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho income tax"
  },
  "id_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/id_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho additions"
  },
  "id_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/id_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "id_non_refundable_credits",
      "id_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho income tax before refundable credits"
  },
  "id_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/id_taxable_income.py",
    "parameters": {},
    "variables": [
      "id_deductions",
      "id_agi",
      "qualified_business_income_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho taxable income",
    "description": "Idaho taxable income"
  },
  "id_receives_aged_or_disabled_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/id_receives_aged_or_disabled_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Filer receives the Idaho aged or disabled credit over the deduction"
  },
  "id_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/id_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho non-refundable credits"
  },
  "id_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/id_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "rates": "gov.states.id.tax.income.main",
      "calc": "gov.states.id.tax.income.main.head_of_household.calc",
      "main": "gov.states.id.tax.income.main"
    },
    "variables": [
      "id_taxable_income",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho income tax before non-refundable credits"
  },
  "id_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/id_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "id_additions",
      "adjusted_gross_income"
    ],
    "subtracts": [
      "id_subtractions"
    ],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho adjusted gross income"
  },
  "id_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/id_withheld_income_tax.py",
    "parameters": {
      "p_irs": "gov.irs.deductions.standard",
      "p": "gov.states.id.tax.income",
      "amount": "gov.irs.deductions.standard.amount",
      "calc": "gov.states.id.tax.income.main.single.calc",
      "single": "gov.states.id.tax.income.main.single",
      "main": "gov.states.id.tax.income.main"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho withheld income tax"
  },
  "id_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/id_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "id_grocery_credit",
      "id_aged_or_disabled_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho refundable credits",
    "adds_from_parameter": "gov.states.id.tax.income.credits.refundable"
  },
  "id_income_tax_liable": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/id_income_tax_liable.py",
    "parameters": {},
    "variables": [
      "irs_gross_income",
      "standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Liable to pay income taxes in Idaho"
  },
  "id_aged_or_disabled_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/subtractions/id_aged_or_disabled_deduction.py",
    "parameters": {
      "p": "gov.states.id.tax.income.subtractions.aged_or_disabled",
      "person_cap": "gov.states.id.tax.income.subtractions.aged_or_disabled.person_cap",
      "amount": "gov.states.id.tax.income.subtractions.aged_or_disabled.amount"
    },
    "variables": [
      "id_receives_aged_or_disabled_credit",
      "id_aged_or_disabled_deduction_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho aged or disabled deduction"
  },
  "id_aged_or_disabled_deduction_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/subtractions/id_aged_or_disabled_deduction_eligible_person.py",
    "parameters": {
      "p": "gov.states.id.tax.income.subtractions.aged_or_disabled",
      "support_fraction_threshold": "gov.states.id.tax.income.subtractions.aged_or_disabled.support_fraction_threshold",
      "age_threshold": "gov.states.id.tax.income.subtractions.aged_or_disabled.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "share_of_care_and_support_costs_paid_by_tax_filer",
      "age",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Idaho aged or disabled deduction"
  },
  "id_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/subtractions/id_subtractions.py",
    "parameters": {
      "p": "gov.states.id.tax.income.subtractions",
      "subtractions": "gov.states.id.tax.income.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho subtractions"
  },
  "id_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/deductions/id_itemized_deductions.py",
    "parameters": {},
    "variables": [
      "id_salt_deduction",
      "itemized_taxable_income_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho itemized deductions"
  },
  "id_salt_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/deductions/id_salt_deduction.py",
    "parameters": {
      "cap": "gov.irs.deductions.itemized.salt_and_real_estate.cap"
    },
    "variables": [
      "state_and_local_sales_or_income_tax",
      "filing_status",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho SALT deduction"
  },
  "id_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/deductions/id_deductions.py",
    "parameters": {},
    "variables": [
      "id_itemized_deductions",
      "standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho deductions"
  },
  "id_capital_gains_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/deductions/id_capital_gains_deduction.py",
    "parameters": {
      "p": "gov.states.id.tax.income.deductions.capital_gains",
      "percentage": "gov.states.id.tax.income.deductions.capital_gains.percentage"
    },
    "variables": [
      "property_sales_net_capital_gain"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho capital gains deduction"
  },
  "id_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/credits/id_ctc.py",
    "parameters": {
      "p": "gov.states.id.tax.income.credits.ctc",
      "amount": "gov.states.id.tax.income.credits.ctc.amount"
    },
    "variables": [
      "ctc_qualifying_children"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho Child Tax Credit"
  },
  "id_aged_or_disabled_credit_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/credits/id_aged_or_disabled_credit_eligible_person.py",
    "parameters": {
      "p": "gov.states.id.tax.income.subtractions.aged_or_disabled",
      "support_fraction_threshold": "gov.states.id.tax.income.subtractions.aged_or_disabled.support_fraction_threshold",
      "age_threshold": "gov.states.id.tax.income.subtractions.aged_or_disabled.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "share_of_care_and_support_costs_paid_by_tax_filer",
      "age",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Idaho aged or disabled credit"
  },
  "id_aged_or_disabled_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/credits/id_aged_or_disabled_credit.py",
    "parameters": {
      "p": "gov.states.id.tax.income.credits.aged_or_disabled",
      "person_cap": "gov.states.id.tax.income.credits.aged_or_disabled.person_cap",
      "amount": "gov.states.id.tax.income.credits.aged_or_disabled.amount"
    },
    "variables": [
      "id_aged_or_disabled_credit_eligible_person",
      "id_receives_aged_or_disabled_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho aged or disabled credit"
  },
  "id_special_season_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/credits/id_special_season_rebate.py",
    "parameters": {
      "p": "gov.states.id.tax.income.credits.special_seasonal_rebate",
      "floor": "gov.states.id.tax.income.credits.special_seasonal_rebate.floor",
      "rate": "gov.states.id.tax.income.credits.special_seasonal_rebate.rate"
    },
    "variables": [
      "filing_status",
      "id_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho special seasonal rebate"
  },
  "id_grocery_credit_base": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/credits/grocery/id_grocery_credit_base.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho base grocery credit"
  },
  "id_grocery_credit_aged": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/credits/grocery/id_grocery_credit_aged.py",
    "parameters": {
      "p": "gov.states.id.tax.income.credits.grocery.aged",
      "age_threshold": "gov.states.id.tax.income.credits.grocery.aged.age_threshold",
      "amount": "gov.states.id.tax.income.credits.grocery.aged.amount"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho aged grocery credit"
  },
  "id_grocery_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/credits/grocery/id_grocery_credit.py",
    "parameters": {
      "p": "gov.states.id.tax.income.credits.grocery.aged",
      "in_effect": "gov.states.id.tax.income.credits.grocery.aged.in_effect"
    },
    "variables": [
      "id_grocery_credit_base",
      "id_grocery_credit_aged",
      "id_grocery_credit_qualified_months"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho grocery credit"
  },
  "id_2022_rebate_floor": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/credits/2022_rebate/id_2022_rebate_floor.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho 2022 rebate floor",
    "adds_parameter_values": {
      "gov.states.id.tax.income.credits.2022_rebate.floor": "$75"
    }
  },
  "id_2022_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/credits/2022_rebate/id_2022_rebate.py",
    "parameters": {
      "credits": "gov.states.id.tax.income.credits"
    },
    "variables": [
      "id_2022_rebate_floor",
      "id_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho 2022 rebate"
  },
  "id_grocery_credit_qualified_months": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/credits/grocery/eligible/id_grocery_credit_qualified_months.py",
    "parameters": {},
    "variables": [
      "id_grocery_credit_qualifying_month"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Months qualified for the Idaho grocery credit"
  },
  "id_grocery_credit_qualifying_month": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/credits/grocery/eligible/id_grocery_credit_qualifying_month.py",
    "parameters": {},
    "variables": [
      "is_incarcerated",
      "snap"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualifies for the Idaho grocery credit in the given month"
  },
  "id_pbf": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/other_taxes/pbf/id_pbf.py",
    "parameters": {
      "p": "gov.states.id.tax.income.other_taxes.pbf",
      "amount": "gov.states.id.tax.income.other_taxes.pbf.amount"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "id_pbf_liable",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho permanent building tax"
  },
  "id_pbf_liable": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/other_taxes/pbf/id_pbf_liable.py",
    "parameters": {},
    "variables": [
      "tanf",
      "blind_spouse",
      "blind_head",
      "id_income_tax_liable"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Liable for the Idaho permanent building fund tax"
  },
  "id_retirement_benefits_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/deductions/retirement_benefits/id_retirement_benefits_deduction.py",
    "parameters": {
      "p": "gov.states.id.tax.income.deductions.retirement_benefits",
      "cap": "gov.states.id.tax.income.deductions.retirement_benefits.cap"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "filing_status",
      "social_security_retirement",
      "id_retirement_benefits_deduction_relevant_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho retirement benefits deduction"
  },
  "id_retirement_benefits_deduction_relevant_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/deductions/retirement_benefits/id_retirement_benefits_deduction_relevant_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "public_pension_income",
      "military_retirement_pay"
    ],
    "subtracts": [],
    "defined_for": "id_retirement_benefits_deduction_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho retirement benefits deduction income sources",
    "adds_from_parameter": "gov.states.id.tax.income.deductions.retirement_benefits.income_sources"
  },
  "id_cdcc_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/subtractions/household_and_dependent_care/id_cdcc_limit.py",
    "parameters": {
      "p": "gov.irs.credits.cdcc",
      "max": "gov.irs.credits.cdcc.max"
    },
    "variables": [
      "capped_count_cdcc_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal CDCC-relevant care expense limit for Idaho tax purposes"
  },
  "id_household_and_dependent_care_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/id/tax/income/subtractions/household_and_dependent_care/id_household_and_dependent_care_expense_deduction.py",
    "parameters": {
      "p": "gov.states.id.tax.income.deductions.dependent_care_expenses",
      "cap": "gov.states.id.tax.income.deductions.dependent_care_expenses.cap"
    },
    "variables": [
      "min_head_spouse_earned",
      "id_cdcc_limit",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ID",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Idaho household and dependent care expense deduction"
  },
  "ny_drive_clean_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/nyserda/drive_clean/ny_drive_clean_rebate.py",
    "parameters": {
      "p": "gov.states.ny.nyserda.drive_clean",
      "calc": "gov.states.ny.nyserda.drive_clean.amount.calc",
      "msrp_threshold": "gov.states.ny.nyserda.drive_clean.flat_rebate.msrp_threshold",
      "amount": "gov.states.ny.nyserda.drive_clean.amount",
      "flat_rebate": "gov.states.ny.nyserda.drive_clean.flat_rebate"
    },
    "variables": [
      "ny_drive_clean_vehicle_cost",
      "ny_drive_clean_vehicle_electric_range"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York Drive Clean Rebate"
  },
  "ny_drive_clean_purchased_qualifying_vehicle": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/nyserda/drive_clean/ny_drive_clean_purchased_qualifying_vehicle.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Purchased a qualifying new vehicle at an authorized dealership for the New York Drive Clean rebate program"
  },
  "ny_drive_clean_vehicle_cost": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/nyserda/drive_clean/ny_drive_clean_vehicle_cost.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "ny_drive_clean_purchased_qualifying_vehicle",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Price of a qualifying vehicle purchased at an authorized New York dealership considered under the New York Drive Clean rebate program"
  },
  "ny_drive_clean_vehicle_electric_range": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/nyserda/drive_clean/ny_drive_clean_vehicle_electric_range.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York Drive Clean rebate program all-electric vehicle range",
    "unit": "miles"
  },
  "ny_main_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/ny_main_income_tax.py",
    "parameters": {
      "rates": "gov.states.ny.tax.income.main",
      "main": "gov.states.ny.tax.income.main"
    },
    "variables": [
      "filing_status",
      "ny_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY main income tax (before credits and supplemental tax)"
  },
  "ny_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/ny_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ny_income_tax_before_credits",
      "ny_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY income tax"
  },
  "ny_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/ny_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ny.tax.income",
      "amount": "gov.states.ny.tax.income.deductions.standard.amount",
      "calc": "gov.states.ny.tax.income.main.single.calc",
      "standard": "gov.states.ny.tax.income.deductions.standard",
      "single": "gov.states.ny.tax.income.main.single",
      "deductions": "gov.states.ny.tax.income.deductions",
      "main": "gov.states.ny.tax.income.main"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York withheld income tax"
  },
  "ny_supplemental_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/ny_supplemental_tax.py",
    "parameters": {
      "tax": "gov.states.ny.tax.income",
      "supplemental": "gov.states.ny.tax.income.supplemental",
      "main": "gov.states.ny.tax.income.main"
    },
    "variables": [
      "filing_status",
      "ny_main_income_tax",
      "ny_taxable_income",
      "ny_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY supplemental income tax"
  },
  "ny_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/ny_non_refundable_credits.py",
    "parameters": {
      "credits": "gov.states.ny.tax.income.credits.non_refundable"
    },
    "variables": [
      "ny_income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY capped non-refundable tax credits"
  },
  "ny_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/ny_income_tax_before_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ny_main_income_tax",
      "ny_supplemental_tax"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY income tax before credits"
  },
  "ny_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/ny_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ny_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "ny_refundable_credits"
    ],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY income tax"
  },
  "ny_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/ny_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ny_eitc",
      "ny_supplemental_eitc",
      "ny_ctc",
      "ny_cdcc",
      "ny_real_property_tax_credit",
      "ny_college_tuition_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY refundable credits",
    "adds_from_parameter": "gov.states.ny.tax.income.credits.refundable"
  },
  "ny_allowable_college_tuition_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/ny_allowable_college_tuition_expenses.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.college_tuition",
      "cap": "gov.states.ny.tax.income.college_tuition.cap"
    },
    "variables": [
      "qualified_tuition_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York allowable college tuition expenses for the credit and deduction"
  },
  "ny_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/ny_exemptions.py",
    "parameters": {
      "dependent_exemption": "gov.states.ny.tax.income.exemptions.dependent"
    },
    "variables": [
      "tax_unit_child_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY exemptions"
  },
  "ny_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/ny_taxable_income.py",
    "parameters": {},
    "variables": [
      "ny_deductions",
      "ny_exemptions",
      "ny_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY taxable income",
    "description": "NY AGI less taxable income deductions"
  },
  "ny_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/ny_deductions.py",
    "parameters": {},
    "variables": [
      "ny_standard_deduction",
      "ny_itemized_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY income deductions"
  },
  "ny_geothermal_energy_system_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ny_geothermal_energy_system_credit.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.credits.geothermal_energy_system",
      "rate": "gov.states.ny.tax.income.credits.geothermal_energy_system.rate",
      "cap": "gov.states.ny.tax.income.credits.geothermal_energy_system.cap"
    },
    "variables": [
      "ny_qualified_geothermal_energy_system_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York geothermal energy system equipment credit",
    "description": "The tax credit for a qualified purchase or lease of geothermal energy system equipment, with a 5-year carryover."
  },
  "ny_household_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ny_household_credit.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.credits.household_credit",
      "calc": "gov.states.ny.tax.income.credits.household_credit.non_single.additional.calc",
      "single": "gov.states.ny.tax.income.credits.household_credit.single",
      "non_single": "gov.states.ny.tax.income.credits.household_credit.non_single",
      "base": "gov.states.ny.tax.income.credits.household_credit.non_single.base",
      "additional": "gov.states.ny.tax.income.credits.household_credit.non_single.additional"
    },
    "variables": [
      "filing_status",
      "spouse_separate_tax_unit_size",
      "tax_unit_size",
      "adjusted_gross_income",
      "spouse_separate_adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY household credit"
  },
  "ny_qualified_geothermal_energy_system_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ny_qualified_geothermal_energy_system_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified geothermal energy system equipment expenditures",
    "description": "Money spent in the current year for the purchase or lease of geothermal energy system equipment."
  },
  "ny_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ny_eitc.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.credits",
      "match": "gov.states.ny.tax.income.credits.eitc.match",
      "eitc": "gov.states.ny.tax.income.credits.eitc"
    },
    "variables": [
      "ny_income_tax_before_credits",
      "ny_household_credit",
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York EITC"
  },
  "ny_inflation_refund_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ny_inflation_refund_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York 2025 inflation refund credits"
  },
  "ny_supplemental_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ny_supplemental_eitc.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.credits",
      "supplemental_match": "gov.states.ny.tax.income.credits.eitc.supplemental_match",
      "eitc": "gov.states.ny.tax.income.credits.eitc"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY Supplemental EITC"
  },
  "ny_real_property_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ny_real_property_tax_credit.py",
    "parameters": {
      "rptc": "gov.states.ny.tax.income.credits.real_property_tax",
      "real_property_tax": "gov.states.ny.tax.income.credits.real_property_tax",
      "calc": "gov.states.ny.tax.income.credits.real_property_tax.maximum.non_elderly.calc",
      "elderly": "gov.states.ny.tax.income.credits.real_property_tax.maximum.elderly",
      "non_elderly": "gov.states.ny.tax.income.credits.real_property_tax.maximum.non_elderly"
    },
    "variables": [
      "rent",
      "age",
      "is_tax_unit_dependent",
      "real_estate_taxes",
      "adjusted_gross_income",
      "assessed_property_value"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY real property tax credit"
  },
  "ny_pension_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/adjusted_gross_income/ny_pension_exclusion.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.agi.subtractions.pension_exclusion",
      "min_age": "gov.states.ny.tax.income.agi.subtractions.pension_exclusion.min_age",
      "cap": "gov.states.ny.tax.income.agi.subtractions.pension_exclusion.cap"
    },
    "variables": [
      "taxable_pension_income",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York pension exclusion",
    "description": "Exclusion for pension income for eligible individuals."
  },
  "ny_agi_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/adjusted_gross_income/ny_agi_subtractions.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.agi.subtractions",
      "sources": "gov.states.ny.tax.income.agi.subtractions.sources"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York AGI subtractions",
    "description": "Subtractions from NY AGI over federal AGI."
  },
  "ny_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/adjusted_gross_income/ny_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York AGI additions",
    "description": "Additions to NY AGI over federal AGI."
  },
  "ny_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/adjusted_gross_income/ny_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "ny_additions"
    ],
    "subtracts": [
      "ny_agi_subtractions"
    ],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY adjusted gross income"
  },
  "ny_college_tuition_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/college_tuition/ny_college_tuition_credit.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.credits.college_tuition",
      "calc": "gov.states.ny.tax.income.credits.college_tuition.rate.calc",
      "applicable_percentage": "gov.states.ny.tax.income.credits.college_tuition.applicable_percentage",
      "rate": "gov.states.ny.tax.income.credits.college_tuition.rate"
    },
    "variables": [
      "ny_allowable_college_tuition_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ny_college_tuition_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY college tuition credit"
  },
  "ny_college_tuition_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/college_tuition/ny_college_tuition_credit_eligible.py",
    "parameters": {},
    "variables": [
      "ny_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "New York college tuition credit eligible"
  },
  "ny_qualified_solar_energy_systems_equipment_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/solar_energy_systems/ny_qualified_solar_energy_systems_equipment_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified solar energy systems equipment expenditures in New York"
  },
  "ny_solar_energy_systems_equipment_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/solar_energy_systems/ny_solar_energy_systems_equipment_credit.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.credits.solar_energy_systems_equipment",
      "rate": "gov.states.ny.tax.income.credits.solar_energy_systems_equipment.rate",
      "cap": "gov.states.ny.tax.income.credits.solar_energy_systems_equipment.cap"
    },
    "variables": [
      "ny_qualified_solar_energy_systems_equipment_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York solar energy systems equipment credit"
  },
  "ny_ctc_post_2024_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ctc/ny_ctc_post_2024_eligible.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.credits.ctc",
      "in_effect": "gov.states.ny.tax.income.credits.ctc.post_2024.in_effect",
      "amount": "gov.states.ny.tax.income.credits.ctc.post_2024.amount",
      "calc": "gov.states.ny.tax.income.credits.ctc.post_2024.amount.calc",
      "post_2024": "gov.states.ny.tax.income.credits.ctc.post_2024",
      "minimum_age": "gov.states.ny.tax.income.credits.ctc.minimum_age"
    },
    "variables": [
      "ctc_qualifying_child",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "New York CTC post-2024 eligibility",
    "description": "Whether the tax unit is eligible for New York CTC under post-2024 rules"
  },
  "ny_ctc_pre_2024_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ctc/ny_ctc_pre_2024_eligible.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.credits.ctc",
      "in_effect": "gov.states.ny.tax.income.credits.ctc.post_2024.in_effect",
      "post_2024": "gov.states.ny.tax.income.credits.ctc.post_2024",
      "pre_tcja": "gov.states.ny.tax.income.credits.ctc.pre_tcja",
      "minimum_age": "gov.states.ny.tax.income.credits.ctc.minimum_age"
    },
    "variables": [
      "ctc_qualifying_child",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "NY CTC pre-2024 eligibility",
    "description": "Whether the tax unit is eligible for NY CTC under pre-2024 rules"
  },
  "ny_ctc_post_2024_phase_out": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ctc/ny_ctc_post_2024_phase_out.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.credits.ctc",
      "threshold": "gov.states.ny.tax.income.credits.ctc.post_2024.phase_out.threshold",
      "increment": "gov.states.ny.tax.income.credits.ctc.post_2024.phase_out.increment",
      "rate": "gov.states.ny.tax.income.credits.ctc.post_2024.phase_out.rate",
      "phase_out": "gov.states.ny.tax.income.credits.ctc.post_2024.phase_out",
      "post_2024": "gov.states.ny.tax.income.credits.ctc.post_2024"
    },
    "variables": [
      "filing_status",
      "ny_ctc_post_2024_base",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ny_ctc_post_2024_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York CTC post-2024 phase-out amount",
    "description": "Amount by which New York CTC is reduced due to income phase-out under post-2024 rules"
  },
  "ny_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ctc/ny_ctc.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ny_ctc_post_2024",
      "ny_ctc_pre_2024"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY CTC",
    "description": "New York's Empire State Child Credit"
  },
  "ny_additional_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ctc/ny_additional_ctc.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.credits.ctc.additional",
      "calc": "gov.states.ny.tax.income.credits.ctc.additional.amount.calc",
      "min_credit_value": "gov.states.ny.tax.income.credits.ctc.additional.min_credit_value",
      "amount": "gov.states.ny.tax.income.credits.ctc.additional.amount"
    },
    "variables": [
      "ny_ctc",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York additional Empire State Child Credit"
  },
  "ny_ctc_post_2024": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ctc/ny_ctc_post_2024.py",
    "parameters": {},
    "variables": [
      "ny_ctc_post_2024_phase_out",
      "ny_ctc_post_2024_base"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York CTC post-2024",
    "description": "New York's Empire State Child Credit under post-2024 rules (2025-2027)"
  },
  "ny_ctc_post_2024_base": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ctc/ny_ctc_post_2024_base.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.credits.ctc",
      "calc": "gov.states.ny.tax.income.credits.ctc.post_2024.amount.calc",
      "minimum_age": "gov.states.ny.tax.income.credits.ctc.minimum_age",
      "post_2024": "gov.states.ny.tax.income.credits.ctc.post_2024",
      "amount": "gov.states.ny.tax.income.credits.ctc.post_2024.amount"
    },
    "variables": [
      "ctc_qualifying_child",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ny_ctc_post_2024_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York CTC post-2024 base amount",
    "description": "Base New York CTC amount before phase-out under post-2024 rules"
  },
  "ny_ctc_pre_2024": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/ctc/ny_ctc_pre_2024.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.credits.ctc",
      "threshold": "gov.irs.credits.ctc.phase_out.threshold",
      "pre_tcja": "gov.states.ny.tax.income.credits.ctc.pre_tcja",
      "minimum_age": "gov.states.ny.tax.income.credits.ctc.minimum_age",
      "amount": "gov.states.ny.tax.income.credits.ctc.amount",
      "percent": "gov.states.ny.tax.income.credits.ctc.amount.percent",
      "minimum": "gov.states.ny.tax.income.credits.ctc.amount.minimum",
      "phase_out": "gov.irs.credits.ctc.phase_out",
      "ctc": "gov.irs.credits.ctc",
      "credits": "gov.irs.credits",
      "irs": "gov.irs",
      "gov": "gov"
    },
    "variables": [
      "filing_status",
      "age",
      "ctc_qualifying_child",
      "adjusted_gross_income",
      "ctc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ny_ctc_pre_2024_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY CTC pre-2024 rules",
    "description": "New York's Empire State Child Credit under pre-2024 rules (original system)"
  },
  "ny_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/cdcc/ny_cdcc.py",
    "parameters": {},
    "variables": [
      "ny_cdcc_max",
      "cdcc_relevant_expenses",
      "ny_cdcc_rate",
      "cdcc_rate"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY CDCC"
  },
  "ny_cdcc_max": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/cdcc/ny_cdcc_max.py",
    "parameters": {
      "ny_cdcc": "gov.states.ny.tax.income.credits.cdcc",
      "calc": "gov.states.ny.tax.income.credits.cdcc.max.calc",
      "max": "gov.states.ny.tax.income.credits.cdcc.max"
    },
    "variables": [
      "min_head_spouse_earned",
      "count_cdcc_eligible",
      "cdcc_relevant_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maximum NY CDCC"
  },
  "ny_cdcc_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/credits/cdcc/ny_cdcc_rate.py",
    "parameters": {
      "percentage": "gov.states.ny.tax.income.credits.cdcc.percentage",
      "main": "gov.states.ny.tax.income.credits.cdcc.percentage.main",
      "alternate": "gov.states.ny.tax.income.credits.cdcc.percentage.alternate",
      "multiplier": "gov.states.ny.tax.income.credits.cdcc.percentage.multiplier",
      "calc": "gov.states.ny.tax.income.credits.cdcc.percentage.multiplier.calc"
    },
    "variables": [
      "ny_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY CDCC rate"
  },
  "ny_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/deductions/ny_standard_deduction.py",
    "parameters": {
      "standard_deduction": "gov.states.ny.tax.income.deductions.standard",
      "dependent_elsewhere": "gov.states.ny.tax.income.deductions.standard.dependent_elsewhere",
      "amount": "gov.states.ny.tax.income.deductions.standard.amount"
    },
    "variables": [
      "filing_status",
      "head_is_dependent_elsewhere"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY standard deduction"
  },
  "ny_itemizes": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/deductions/itemized/ny_itemizes.py",
    "parameters": {},
    "variables": [
      "ny_itemized_deductions",
      "ny_standard_deduction",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Itemizes New York deductions",
    "description": "Tax units who itemize their federal deductions can opt to itemize their New York deductions. However, if a standard deduction causes a lower tax liability, they must choose that."
  },
  "ny_college_tuition_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/deductions/itemized/ny_college_tuition_deduction.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.deductions.itemized.college_tuition",
      "applicable_percentage": "gov.states.ny.tax.income.deductions.itemized.college_tuition.applicable_percentage"
    },
    "variables": [
      "ny_allowable_college_tuition_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York itemized deduction for college tuition expenses"
  },
  "ny_itemized_deductions_max": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/deductions/itemized/ny_itemized_deductions_max.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "itemized_deductions_less_salt",
      "real_estate_taxes",
      "ny_college_tuition_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY uncapped itemized deductions"
  },
  "ny_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/deductions/itemized/ny_itemized_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ny_itemized_deductions_max"
    ],
    "subtracts": [
      "ny_itemized_deductions_reduction"
    ],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York itemized deductions"
  },
  "ny_itemized_deductions_reduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/deductions/itemized/reduction/ny_itemized_deductions_reduction.py",
    "parameters": {},
    "variables": [
      "ny_itemized_deductions_reduction_based_on_charitable_deduction_applies",
      "ny_itemized_deductions_reduction_based_on_charitable_deduction",
      "ny_itemized_deductions_incremental_reduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ny_itemized_deductions_reduction_applies",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NY itemized deductions reduction"
  },
  "ny_itemized_deductions_reduction_applies": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/deductions/itemized/reduction/ny_itemized_deductions_reduction_applies.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.deductions.itemized.reduction.incremental.lower",
      "income_threshold": "gov.states.ny.tax.income.deductions.itemized.reduction.incremental.lower.income_threshold"
    },
    "variables": [
      "filing_status",
      "ny_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the reduction to the New York itemized deductions applies"
  },
  "ny_itemized_deductions_reduction_based_on_charitable_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/deductions/itemized/reduction/based_on_charitable_deduction/ny_itemized_deductions_reduction_based_on_charitable_deduction.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.deductions.itemized.reduction",
      "calc": "gov.states.ny.tax.income.deductions.itemized.reduction.charitable_deduction_rate.calc",
      "charitable_deduction_rate": "gov.states.ny.tax.income.deductions.itemized.reduction.charitable_deduction_rate"
    },
    "variables": [
      "ny_itemized_deductions_max",
      "charitable_deduction",
      "ny_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ny_itemized_deductions_reduction_based_on_charitable_deduction_applies",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York itemized deductions reduction based on charitable deduction"
  },
  "ny_itemized_deductions_reduction_based_on_charitable_deduction_applies": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/deductions/itemized/reduction/based_on_charitable_deduction/ny_itemized_deductions_reduction_based_on_charitable_deduction_applies.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.deductions.itemized.reduction",
      "thresholds": "gov.states.ny.tax.income.deductions.itemized.reduction.charitable_deduction_rate.thresholds",
      "charitable_deduction_rate": "gov.states.ny.tax.income.deductions.itemized.reduction.charitable_deduction_rate"
    },
    "variables": [
      "ny_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "New York itemized deductions reduction based on charitable deduction"
  },
  "ny_itemized_deductions_incremental_reduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/deductions/itemized/reduction/based_on_charitable_deduction/incremental/ny_itemized_deductions_incremental_reduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ny_itemized_deductions_higher_incremental_reduction",
      "ny_itemized_deductions_lower_incremental_reduction"
    ],
    "subtracts": [],
    "defined_for": "ny_itemized_deductions_reduction_applies",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York itemized deductions incremental reduction"
  },
  "ny_itemized_deductions_lower_incremental_reduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/deductions/itemized/reduction/based_on_charitable_deduction/incremental/ny_itemized_deductions_lower_incremental_reduction.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.deductions.itemized.reduction.incremental.lower",
      "numerator": "gov.states.ny.tax.income.deductions.itemized.reduction.incremental.lower.numerator",
      "denominator": "gov.states.ny.tax.income.deductions.itemized.reduction.incremental.lower.denominator",
      "income_threshold": "gov.states.ny.tax.income.deductions.itemized.reduction.incremental.lower.income_threshold",
      "rate": "gov.states.ny.tax.income.deductions.itemized.reduction.incremental.lower.rate"
    },
    "variables": [
      "ny_itemized_deductions_max",
      "filing_status",
      "ny_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ny_itemized_deductions_reduction_applies",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York itemized deductions lower incremental reduction"
  },
  "ny_itemized_deductions_higher_incremental_reduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/tax/income/taxable_income/deductions/itemized/reduction/based_on_charitable_deduction/incremental/ny_itemized_deductions_higher_incremental_reduction.py",
    "parameters": {
      "p": "gov.states.ny.tax.income.deductions.itemized.reduction.incremental.higher",
      "numerator": "gov.states.ny.tax.income.deductions.itemized.reduction.incremental.higher.numerator",
      "denominator": "gov.states.ny.tax.income.deductions.itemized.reduction.incremental.higher.denominator",
      "income_threshold": "gov.states.ny.tax.income.deductions.itemized.reduction.incremental.higher.income_threshold",
      "rate": "gov.states.ny.tax.income.deductions.itemized.reduction.incremental.higher.rate"
    },
    "variables": [
      "ny_itemized_deductions_max",
      "ny_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ny_itemized_deductions_reduction_applies",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York itemized deductions higher incremental reduction"
  },
  "ny_tanf_grant_standard": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/otda/tanf/ny_tanf_grant_standard.py",
    "parameters": {
      "p": "gov.states.ny.otda.tanf.grant_standard",
      "main": "gov.states.ny.otda.tanf.grant_standard.main",
      "additional": "gov.states.ny.otda.tanf.grant_standard.additional"
    },
    "variables": [
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York TANF grant standard"
  },
  "ny_tanf_need_standard": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/otda/tanf/ny_tanf_need_standard.py",
    "parameters": {
      "p": "gov.states.ny.otda.tanf.need_standard",
      "main": "gov.states.ny.otda.tanf.need_standard.main",
      "additional": "gov.states.ny.otda.tanf.need_standard.additional"
    },
    "variables": [
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York TANF need standard"
  },
  "ny_tanf_countable_resources": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/otda/tanf/ny_tanf_countable_resources.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Countable resources for New York TANF"
  },
  "ny_tanf_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/otda/tanf/ny_tanf_eligible.py",
    "parameters": {},
    "variables": [
      "is_demographic_tanf_eligible",
      "ny_tanf_income_eligible",
      "ny_tanf_resources_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "New York TANF eligible"
  },
  "ny_tanf_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/otda/tanf/ny_tanf_income_eligible.py",
    "parameters": {},
    "variables": [
      "ny_tanf_need_standard",
      "ny_tanf_countable_earned_income",
      "ny_tanf_countable_gross_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "New York TANF income eligible"
  },
  "ny_tanf": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/otda/tanf/ny_tanf.py",
    "parameters": {},
    "variables": [
      "ny_tanf_countable_gross_unearned_income",
      "ny_tanf_countable_earned_income",
      "ny_tanf_grant_standard"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ny_tanf_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York TANF"
  },
  "ny_tanf_resources_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/otda/tanf/ny_tanf_resources_eligible.py",
    "parameters": {
      "p": "gov.states.ny.otda.tanf.eligibility.resources",
      "higher_resource_limit_age_threshold": "gov.states.ny.otda.tanf.eligibility.resources.higher_resource_limit_age_threshold",
      "higher_limit": "gov.states.ny.otda.tanf.eligibility.resources.higher_limit",
      "lower_limit": "gov.states.ny.otda.tanf.eligibility.resources.lower_limit"
    },
    "variables": [
      "ny_tanf_countable_resources",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "New York TANF resources eligible"
  },
  "ny_tanf_gross_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/otda/tanf/income/ny_tanf_gross_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York TANF gross earned income",
    "adds_from_parameter": "gov.states.ny.otda.tanf.income.earned"
  },
  "ny_tanf_countable_gross_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/otda/tanf/income/ny_tanf_countable_gross_unearned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "veterans_benefits",
      "rental_income",
      "alimony_income",
      "dividend_income",
      "interest_income",
      "miscellaneous_income",
      "pension_income",
      "unemployment_compensation",
      "gi_cash_assistance",
      "social_security",
      "ssi"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York TANF countable gross unearned income",
    "adds_from_parameter": "gov.states.ny.otda.tanf.income.unearned"
  },
  "ny_tanf_countable_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ny/otda/tanf/income/ny_tanf_countable_earned_income.py",
    "parameters": {
      "p": "gov.states.ny.otda.tanf.income.earned_income_deduction",
      "flat": "gov.states.ny.otda.tanf.income.earned_income_deduction.flat",
      "percent": "gov.states.ny.otda.tanf.income.earned_income_deduction.percent"
    },
    "variables": [
      "ny_tanf_gross_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New York TANF countable earned income"
  },
  "az_tanf_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/hhs/tanf/eligibility/az_tanf_eligible_child.py",
    "parameters": {
      "p": "gov.states.az.hhs.tanf.eligibility.age_threshold",
      "student": "gov.states.az.hhs.tanf.eligibility.age_threshold.student",
      "non_student": "gov.states.az.hhs.tanf.eligibility.age_threshold.non_student"
    },
    "variables": [
      "is_full_time_student",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible child for the Arizona Cash Assistance"
  },
  "az_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/az_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.az.tax.income",
      "amount": "gov.states.az.tax.income.deductions.standard.amount",
      "calc": "gov.states.az.tax.income.main.single.calc",
      "standard": "gov.states.az.tax.income.deductions.standard",
      "single": "gov.states.az.tax.income.main.single",
      "deductions": "gov.states.az.tax.income.deductions",
      "main": "gov.states.az.tax.income.main"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona withheld income tax"
  },
  "az_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/az_taxable_income.py",
    "parameters": {},
    "variables": [
      "az_agi",
      "az_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona taxable income",
    "description": "https://azdor.gov/sites/default/files/2023-03/FORMS_INDIVIDUAL_2022_140Ai.pdf#page=8https://azdor.gov/sites/default/files/2023-03/FORMS_INDIVIDUAL_2022_140Ai.pdf#page=8"
  },
  "az_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/az_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "az_income_tax_before_non_refundable_credits",
      "az_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona income tax before refundable credits"
  },
  "az_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/az_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "az_charitable_contributions_credit",
      "az_dependent_tax_credit",
      "az_family_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona non-refundable credits",
    "adds_from_parameter": "gov.states.az.tax.income.credits.non_refundable"
  },
  "az_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/az_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "az_increased_excise_tax_credit",
      "az_property_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona refundable credits",
    "adds_from_parameter": "gov.states.az.tax.income.credits.refundable"
  },
  "az_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/az_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "az_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "az_refundable_credits"
    ],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona income tax"
  },
  "az_filing_status": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/az_filing_status.py",
    "parameters": {},
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "Enum",
    "possible_values": "ArizonaFilingStatus",
    "enum_options": [
      {
        "key": "SINGLE",
        "value": "Single"
      },
      {
        "key": "SEPARATE",
        "value": "Separate"
      },
      {
        "key": "HEAD_OF_HOUSEHOLD",
        "value": "Head of household"
      },
      {
        "key": "JOINT",
        "value": "Joint"
      }
    ],
    "description": "https://www.azleg.gov/viewdocument/?docName=https://www.azleg.gov/ars/43/01001.htmhttps://azdor.gov/forms/individual/form-140a-arizona-resident-personal-income-tax-booklet",
    "label": "Arizona filing status"
  },
  "az_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/az_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona additions"
  },
  "az_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/az_subtractions.py",
    "parameters": {
      "p": "gov.states.az.tax.income.subtractions",
      "subtractions": "gov.states.az.tax.income.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona subtractions"
  },
  "az_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/az_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "p": "gov.states.az.tax.income.main",
      "calc": "gov.states.az.tax.income.main.separate.calc",
      "single": "gov.states.az.tax.income.main.single",
      "head_of_household": "gov.states.az.tax.income.main.head_of_household",
      "joint": "gov.states.az.tax.income.main.joint",
      "separate": "gov.states.az.tax.income.main.separate"
    },
    "variables": [
      "az_taxable_income",
      "az_filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona income tax before non-refundable credits"
  },
  "az_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/az_agi.py",
    "parameters": {},
    "variables": [
      "az_additions",
      "az_subtractions",
      "az_exemptions",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona adjusted gross income",
    "description": "https://azdor.gov/sites/default/files/2023-03/FORMS_INDIVIDUAL_2020_140NRBOOKLET.pdf#page=18"
  },
  "az_military_retirement_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/subtractions/az_military_retirement_subtraction.py",
    "parameters": {
      "p": "gov.states.az.tax.income.subtractions.military_retirement",
      "max_amount": "gov.states.az.tax.income.subtractions.military_retirement.max_amount"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "military_retirement_pay"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona military retirement subtraction"
  },
  "az_public_pension_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/subtractions/az_public_pension_exclusion.py",
    "parameters": {
      "p": "gov.states.az.tax.income.subtractions.pension",
      "public_pension_cap": "gov.states.az.tax.income.subtractions.pension.public_pension_cap"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "taxable_public_pension_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona Pension Exclusion"
  },
  "az_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/deductions/az_deductions.py",
    "parameters": {},
    "variables": [
      "az_itemized_deductions",
      "az_standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona deductions"
  },
  "az_aged_exemption_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/exemptions/az_aged_exemption_eligible_person.py",
    "parameters": {},
    "variables": [
      "spouse_is_dependent_elsewhere",
      "az_filing_status",
      "is_tax_unit_head",
      "head_is_dependent_elsewhere",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Arizona aged exemption"
  },
  "az_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/exemptions/az_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "az_aged_exemption",
      "az_blind_exemption",
      "az_parents_grandparents_exemption",
      "az_stillborn_exemption"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona total exemptions"
  },
  "az_parents_grandparents_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/exemptions/az_parents_grandparents_exemption.py",
    "parameters": {
      "p": "gov.states.az.tax.income.exemptions.parent_grandparent",
      "min_age": "gov.states.az.tax.income.exemptions.parent_grandparent.min_age",
      "cost_rate": "gov.states.az.tax.income.exemptions.parent_grandparent.cost_rate",
      "amount": "gov.states.az.tax.income.exemptions.parent_grandparent.amount"
    },
    "variables": [
      "share_of_care_and_support_costs_paid_by_tax_filer",
      "age",
      "is_parent_of_filer_or_spouse",
      "is_grandparent_of_filer_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona parents and grandparents exemption"
  },
  "az_blind_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/exemptions/az_blind_exemption.py",
    "parameters": {
      "p": "gov.states.az.tax.income.exemptions",
      "blind": "gov.states.az.tax.income.exemptions.blind"
    },
    "variables": [
      "blind_spouse",
      "blind_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona blind exemption"
  },
  "az_stillborn_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/exemptions/az_stillborn_exemption.py",
    "parameters": {
      "p": "gov.states.az.tax.income.exemptions",
      "stillborn": "gov.states.az.tax.income.exemptions.stillborn"
    },
    "variables": [
      "tax_unit_stillborn_children"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona stillborn exemption"
  },
  "az_aged_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/exemptions/az_aged_exemption.py",
    "parameters": {
      "p": "gov.states.az.tax.income.exemptions",
      "calc": "gov.states.az.tax.income.exemptions.aged.calc",
      "aged": "gov.states.az.tax.income.exemptions.aged"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "az_aged_exemption_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona aged exemption"
  },
  "az_increased_excise_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/credits/az_increased_excise_tax_credit.py",
    "parameters": {
      "p": "gov.states.az.tax.income.credits.increased_excise",
      "amount": "gov.states.az.tax.income.credits.increased_excise.amount",
      "max_amount": "gov.states.az.tax.income.credits.increased_excise.max_amount"
    },
    "variables": [
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "az_increased_excise_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona Increased Excise Tax Credit"
  },
  "az_increased_excise_tax_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/credits/az_increased_excise_tax_credit_eligible.py",
    "parameters": {
      "p": "gov.states.az.tax.income.credits.increased_excise",
      "income_threshold": "gov.states.az.tax.income.credits.increased_excise.income_threshold"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Arizona Increased Excise Tax Credit"
  },
  "az_charitable_contributions_to_qualifying_foster_care_organizations": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/credits/charitable_contribution/az_charitable_contributions_to_qualifying_foster_care_organizations.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Charitable contributions to qualifying foster care organizations in Arizona"
  },
  "az_charitable_contributions_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/credits/charitable_contribution/az_charitable_contributions_credit.py",
    "parameters": {
      "p": "gov.states.az.tax.income.credits.charitable_contribution.ceiling",
      "qualifying_organization": "gov.states.az.tax.income.credits.charitable_contribution.ceiling.qualifying_organization",
      "qualifying_foster": "gov.states.az.tax.income.credits.charitable_contribution.ceiling.qualifying_foster"
    },
    "variables": [
      "filing_status",
      "az_charitable_contributions_to_qualifying_foster_care_organizations",
      "az_charitable_contributions_to_qualifying_charitable_organizations"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona charitable contributions credit"
  },
  "az_charitable_contributions_to_qualifying_charitable_organizations": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/credits/charitable_contribution/az_charitable_contributions_to_qualifying_charitable_organizations.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Charitable contributions to qualifying charitable organizations in Arizona"
  },
  "az_property_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/credits/property_tax_credit/az_property_tax_credit.py",
    "parameters": {
      "p": "gov.states.az.tax.income.credits.property_tax",
      "calc": "gov.states.az.tax.income.credits.property_tax.amount.living_alone.calc",
      "cohabitating": "gov.states.az.tax.income.credits.property_tax.amount.cohabitating",
      "living_alone": "gov.states.az.tax.income.credits.property_tax.amount.living_alone",
      "amount": "gov.states.az.tax.income.credits.property_tax.amount"
    },
    "variables": [
      "rent",
      "cohabitating_spouses",
      "real_estate_taxes",
      "az_property_tax_credit_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "az_property_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona Property Tax Credit"
  },
  "az_property_tax_credit_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/credits/property_tax_credit/az_property_tax_credit_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "capital_gains_excluded_from_taxable_income",
      "tax_exempt_interest_income",
      "public_pension_income",
      "az_agi"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Income for the Arizona property tax the credit",
    "adds_from_parameter": "gov.states.az.tax.income.credits.property_tax.income_sources"
  },
  "az_property_tax_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/credits/property_tax_credit/az_property_tax_credit_eligible.py",
    "parameters": {
      "p": "gov.states.az.tax.income.credits.property_tax",
      "age_threshold": "gov.states.az.tax.income.credits.property_tax.age_threshold"
    },
    "variables": [
      "rent",
      "age",
      "is_tax_unit_head_or_spouse",
      "ssi",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Arizona Property Tax Credit"
  },
  "az_dependent_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/credits/dependent_credit/az_dependent_tax_credit.py",
    "parameters": {
      "p": "gov.states.az.tax.income.credits.dependent_credit",
      "start": "gov.states.az.tax.income.credits.dependent_credit.reduction.start",
      "increment": "gov.states.az.tax.income.credits.dependent_credit.reduction.increment",
      "percentage": "gov.states.az.tax.income.credits.dependent_credit.reduction.percentage",
      "calc": "gov.states.az.tax.income.credits.dependent_credit.amount.calc",
      "reduction": "gov.states.az.tax.income.credits.dependent_credit.reduction",
      "amount": "gov.states.az.tax.income.credits.dependent_credit.amount"
    },
    "variables": [
      "filing_status",
      "age",
      "is_tax_unit_dependent",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona dependent tax credit",
    "description": "https://www.azleg.gov/viewdocument/?docName=https://www.azleg.gov/ars/43/01073-01.htm"
  },
  "az_family_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/credits/family_tax_credit/az_family_tax_credit.py",
    "parameters": {
      "p": "gov.states.az.tax.income.credits.family_tax_credits.amount",
      "per_person": "gov.states.az.tax.income.credits.family_tax_credits.amount.per_person",
      "cap": "gov.states.az.tax.income.credits.family_tax_credits.amount.cap"
    },
    "variables": [
      "filing_status",
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "az_family_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona Family Tax Credit"
  },
  "az_family_tax_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/credits/family_tax_credit/az_family_tax_credit_eligible.py",
    "parameters": {
      "p": "gov.states.az.tax.income.credits.family_tax_credits",
      "single": "gov.states.az.tax.income.credits.family_tax_credits.income_limit.single",
      "separate": "gov.states.az.tax.income.credits.family_tax_credits.income_limit.separate",
      "joint": "gov.states.az.tax.income.credits.family_tax_credits.income_limit.joint",
      "head_of_household": "gov.states.az.tax.income.credits.family_tax_credits.income_limit.head_of_household",
      "income_limit": "gov.states.az.tax.income.credits.family_tax_credits.income_limit",
      "calc": "gov.states.az.tax.income.credits.family_tax_credits.income_limit.head_of_household.calc"
    },
    "variables": [
      "az_agi",
      "tax_unit_dependents",
      "az_filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Arizona Family Tax Credit"
  },
  "az_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/deductions/itemized/az_itemized_deductions.py",
    "parameters": {
      "p": "gov.irs.deductions",
      "itemized_deductions": "gov.irs.deductions.itemized_deductions"
    },
    "variables": [
      "az_charitable_contributions_credit",
      "charitable_deduction",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona Itemized Deductions",
    "description": "Arizona Form 140 Schedule A"
  },
  "az_base_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/deductions/standard/az_base_standard_deduction.py",
    "parameters": {
      "p": "gov.states.az.tax.income.deductions.standard",
      "amount": "gov.states.az.tax.income.deductions.standard.amount"
    },
    "variables": [
      "az_filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona base standard deduction",
    "description": "https://www.azleg.gov/viewdocument/?docName=https://www.azleg.gov/ars/43/01041.htm"
  },
  "az_increased_standard_deduction_for_charitable_contributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/deductions/standard/az_increased_standard_deduction_for_charitable_contributions.py",
    "parameters": {
      "p": "gov.states.az.tax.income.deductions.standard.increased",
      "rate": "gov.states.az.tax.income.deductions.standard.increased.rate"
    },
    "variables": [
      "az_charitable_contributions_credit",
      "charitable_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona increased standard deduction for charitable contributions",
    "description": "https://www.azleg.gov/viewdocument/?docName=https://www.azleg.gov/ars/43/01041.htm"
  },
  "az_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/deductions/standard/az_standard_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "az_base_standard_deduction",
      "az_increased_standard_deduction_for_charitable_contributions"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona standard deduction",
    "description": "https://www.azleg.gov/viewdocument/?docName=https://www.azleg.gov/ars/43/01041.htm"
  },
  "az_529_college_savings_plan_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/subtractions/college_savings/az_529_college_savings_plan_subtraction.py",
    "parameters": {
      "p": "gov.states.az.tax.income.subtractions.college_savings",
      "cap": "gov.states.az.tax.income.subtractions.college_savings.cap"
    },
    "variables": [
      "count_529_contribution_beneficiaries",
      "investment_in_529_plan",
      "az_filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona 529 college savings plan subtraction",
    "description": "https://azdor.gov/sites/default/files/2023-03/FORMS_INDIVIDUAL_2022_140i.pdf#page=15"
  },
  "az_long_term_capital_gains_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/az/tax/income/subtractions/capital_gains/az_long_term_capital_gains_subtraction.py",
    "parameters": {
      "p": "gov.states.az.tax.income.subtractions.capital_gains",
      "rate": "gov.states.az.tax.income.subtractions.capital_gains.rate"
    },
    "variables": [
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AZ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arizona long-term capital gains subtraction",
    "description": "https://azdor.gov/sites/default/files/2023-03/FORMS_INDIVIDUAL_2022_140i.pdf#page=31"
  },
  "de_taxable_income_indv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_taxable_income_indv.py",
    "parameters": {},
    "variables": [
      "de_agi_indiv",
      "de_deduction_indv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware taxable income when married couples are filing separately"
  },
  "de_income_tax_before_non_refundable_credits_indv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_income_tax_before_non_refundable_credits_indv.py",
    "parameters": {
      "p": "gov.states.de.tax.income",
      "calc": "gov.states.de.tax.income.rate.calc",
      "rate": "gov.states.de.tax.income.rate"
    },
    "variables": [
      "de_taxable_income_indv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware personal income tax before non-refundable credits when married filing separately"
  },
  "de_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "de_cdcc",
      "de_non_refundable_eitc",
      "de_personal_credit",
      "de_aged_personal_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware non-refundable credits",
    "adds_from_parameter": "gov.states.de.tax.income.credits.non_refundable"
  },
  "de_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.de.tax.income",
      "amount": "gov.states.de.tax.income.deductions.standard.amount",
      "calc": "gov.states.de.tax.income.rate.calc",
      "standard": "gov.states.de.tax.income.deductions.standard",
      "rate": "gov.states.de.tax.income.rate",
      "deductions": "gov.states.de.tax.income.deductions"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware withheld income tax"
  },
  "de_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "de_refundable_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware refundable credits",
    "adds_from_parameter": "gov.states.de.tax.income.credits.refundable"
  },
  "de_income_tax_before_non_refundable_credits_unit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_income_tax_before_non_refundable_credits_unit.py",
    "parameters": {},
    "variables": [
      "de_income_tax_before_non_refundable_credits_joint",
      "de_files_separately",
      "de_income_tax_before_non_refundable_credits_indv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware personal income tax before non-refundable credits combined"
  },
  "de_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "de_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "de_refundable_credits"
    ],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware personal income tax"
  },
  "de_agi_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_agi_indiv.py",
    "parameters": {},
    "variables": [
      "de_pre_exclusions_agi",
      "de_elderly_or_disabled_income_exclusion_indiv",
      "is_tax_unit_dependent",
      "is_tax_unit_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware adjusted gross income for each individual when married filing separately"
  },
  "de_taxable_income_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_taxable_income_joint.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "de_deduction_joint",
      "de_agi_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware taxable income when married filing jointly"
  },
  "de_agi_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_agi_joint.py",
    "parameters": {},
    "variables": [
      "de_pre_exclusions_agi",
      "is_tax_unit_head",
      "de_elderly_or_disabled_income_exclusion_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware adjusted gross income for each individual whe married filing jointly"
  },
  "de_income_tax_before_non_refundable_credits_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_income_tax_before_non_refundable_credits_joint.py",
    "parameters": {
      "p": "gov.states.de.tax.income",
      "calc": "gov.states.de.tax.income.rate.calc",
      "rate": "gov.states.de.tax.income.rate"
    },
    "variables": [
      "de_taxable_income_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware personal income tax before non-refundable credits when married filing jointly"
  },
  "de_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "de_non_refundable_credits",
      "de_income_tax_before_non_refundable_credits_unit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware personal income tax before refundable credits"
  },
  "de_files_separately": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_files_separately.py",
    "parameters": {},
    "variables": [
      "de_income_tax_before_non_refundable_credits_joint",
      "de_income_tax_before_non_refundable_credits_indv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "married couple files separately on the Delaware tax return"
  },
  "de_pre_exclusions_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/de_pre_exclusions_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "de_additions",
      "adjusted_gross_income_person"
    ],
    "subtracts": [
      "de_subtractions"
    ],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware individual adjusted gross income before exclusions"
  },
  "de_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/subtractions/de_subtractions.py",
    "parameters": {
      "p": "gov.states.de.tax.income.subtractions",
      "subtractions": "gov.states.de.tax.income.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware subtractions"
  },
  "de_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/additions/de_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware adjusted gross income additions"
  },
  "de_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/deductions/de_deduction_joint.py",
    "parameters": {},
    "variables": [
      "de_itemized_deductions_joint",
      "de_standard_deduction_joint",
      "de_tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware deduction when married filing jointly"
  },
  "de_deduction_indv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/deductions/de_deduction_indv.py",
    "parameters": {},
    "variables": [
      "de_tax_unit_itemizes",
      "de_itemized_deductions_indv",
      "de_standard_deduction_indv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware deduction when married couples are filing separately"
  },
  "de_tax_unit_itemizes": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/deductions/de_tax_unit_itemizes.py",
    "parameters": {},
    "variables": [
      "de_itemized_deductions_unit",
      "de_standard_deduction_indv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the tax unit in Delaware itemizes the deductions"
  },
  "de_personal_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/credits/personal/de_personal_credit.py",
    "parameters": {
      "p": "gov.states.de.tax.income.credits",
      "personal": "gov.states.de.tax.income.credits.personal_credits.personal",
      "personal_credits": "gov.states.de.tax.income.credits.personal_credits"
    },
    "variables": [
      "exemptions_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware personal credit"
  },
  "de_aged_personal_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/credits/personal/de_aged_personal_credit.py",
    "parameters": {
      "p": "gov.states.de.tax.income.credits.personal_credits",
      "calc": "gov.states.de.tax.income.credits.personal_credits.aged.calc",
      "aged": "gov.states.de.tax.income.credits.personal_credits.aged"
    },
    "variables": [
      "age_head",
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware aged personal credit"
  },
  "de_relief_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/credits/relief_rebate/de_relief_rebate.py",
    "parameters": {
      "p": "gov.states.de.tax.income.credits.relief_rebate",
      "amount": "gov.states.de.tax.income.credits.relief_rebate.amount"
    },
    "variables": [
      "head_spouse_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware relief rebate"
  },
  "de_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/credits/cdcc/de_cdcc.py",
    "parameters": {
      "rate": "gov.states.de.tax.income.credits.cdcc.match"
    },
    "variables": [
      "cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware dependent care credit"
  },
  "de_non_refundable_eitc_if_claimed": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/credits/eitc/de_non_refundable_eitc_if_claimed.py",
    "parameters": {
      "p": "gov.states.de.tax.income.credits.eitc",
      "non_refundable": "gov.states.de.tax.income.credits.eitc.non_refundable"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware non-refundable EITC if claimed",
    "description": "Non-refundable EITC credit reducing DE State income tax."
  },
  "de_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/credits/eitc/de_eitc.py",
    "parameters": {},
    "variables": [
      "de_claims_refundable_eitc",
      "de_refundable_eitc",
      "de_non_refundable_eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware EITC",
    "description": "Refundable or non-refundable Delaware EITC"
  },
  "de_non_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/credits/eitc/de_non_refundable_eitc.py",
    "parameters": {},
    "variables": [
      "de_claims_refundable_eitc",
      "de_non_refundable_eitc_if_claimed"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware non-refundable EITC",
    "description": "Non-refundable EITC credit reducing DE State income tax."
  },
  "de_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/credits/eitc/de_refundable_eitc.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "de_refundable_eitc_if_claimed"
    ],
    "subtracts": [],
    "defined_for": "de_claims_refundable_eitc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware refundable EITC",
    "description": "Refundable EITC credit reducing DE State income tax page 8."
  },
  "de_refundable_eitc_if_claimed": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/credits/eitc/de_refundable_eitc_if_claimed.py",
    "parameters": {
      "p": "gov.states.de.tax.income.credits.eitc",
      "refundable": "gov.states.de.tax.income.credits.eitc.refundable"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware refundable EITC if claimed",
    "description": "Refundable EITC credit reducing DE State income tax page 8."
  },
  "de_income_tax_if_claiming_non_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/credits/eitc/refundability_calculation/de_income_tax_if_claiming_non_refundable_eitc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware tax liability if claiming non-refundable Delaware EITC"
  },
  "de_claims_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/credits/eitc/refundability_calculation/de_claims_refundable_eitc.py",
    "parameters": {},
    "variables": [
      "de_income_tax_if_claiming_non_refundable_eitc",
      "de_income_tax_if_claiming_refundable_eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Filer claims refundable Delaware EITC",
    "description": "Whether the filer claims the refundable over the non-refundable Delaware Earned Income Tax Credit."
  },
  "de_income_tax_if_claiming_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/credits/eitc/refundability_calculation/de_income_tax_if_claiming_refundable_eitc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware tax liability if claiming refundable Delaware EITC"
  },
  "de_itemized_deductions_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/deductions/itemized/de_itemized_deductions_joint.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "de_itemized_deductions_unit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware itemized deductions when married filing jointly"
  },
  "de_capped_real_estate_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/deductions/itemized/de_capped_real_estate_tax.py",
    "parameters": {
      "p": "gov.irs.deductions",
      "cap": "gov.irs.deductions.itemized.salt_and_real_estate.cap",
      "salt_and_real_estate": "gov.irs.deductions.itemized.salt_and_real_estate",
      "itemized": "gov.irs.deductions.itemized"
    },
    "variables": [
      "filing_status",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware capped real estate tax"
  },
  "de_itemized_deductions_unit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/deductions/itemized/de_itemized_deductions_unit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "de_capped_real_estate_tax",
      "charitable_deduction",
      "interest_deduction",
      "casualty_loss_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware itemized deductions",
    "adds_from_parameter": "gov.states.de.tax.income.deductions.itemized.sources"
  },
  "de_itemized_deductions_indv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/deductions/itemized/de_itemized_deductions_indv.py",
    "parameters": {},
    "variables": [
      "adjusted_gross_income_person",
      "de_itemized_deductions_unit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware itemized deductions when married couples are filing separately"
  },
  "de_standard_deduction_indv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/deductions/standard/de_standard_deduction_indv.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "de_base_standard_deduction_indv",
      "de_additional_standard_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware standard deduction when married couples are filing separately"
  },
  "de_base_standard_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/deductions/standard/de_base_standard_deduction_joint.py",
    "parameters": {
      "p": "gov.states.de.tax.income.deductions.standard",
      "amount": "gov.states.de.tax.income.deductions.standard.amount"
    },
    "variables": [
      "is_tax_unit_head",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware base standard deduction when married couples are filing jointly"
  },
  "de_base_standard_deduction_indv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/deductions/standard/de_base_standard_deduction_indv.py",
    "parameters": {
      "p": "gov.states.de.tax.income.deductions.standard",
      "amount": "gov.states.de.tax.income.deductions.standard.amount"
    },
    "variables": [
      "state_filing_status_if_married_filing_separately_on_same_return",
      "is_tax_unit_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware base standard deduction when married couples are filing separately"
  },
  "de_additional_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/deductions/standard/de_additional_standard_deduction.py",
    "parameters": {
      "p": "gov.states.de.tax.income.deductions.standard.additional",
      "amount": "gov.states.de.tax.income.deductions.standard.additional.amount",
      "age_threshold": "gov.states.de.tax.income.deductions.standard.additional.age_threshold"
    },
    "variables": [
      "is_blind",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware additional standard deduction"
  },
  "de_standard_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/deductions/standard/de_standard_deduction_joint.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "de_additional_standard_deduction",
      "de_base_standard_deduction_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware standard deduction when married filing jointly"
  },
  "de_elderly_or_disabled_income_exclusion_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/subtractions/exclusions/de_elderly_or_disabled_income_exclusion_eligible_person.py",
    "parameters": {
      "p": "gov.states.de.tax.income.subtractions.exclusions.elderly_or_disabled",
      "earned_income_limit": "gov.states.de.tax.income.subtractions.exclusions.elderly_or_disabled.eligibility.earned_income_limit",
      "age_threshold": "gov.states.de.tax.income.subtractions.exclusions.elderly_or_disabled.eligibility.age_threshold",
      "agi_limit": "gov.states.de.tax.income.subtractions.exclusions.elderly_or_disabled.eligibility.agi_limit",
      "eligibility": "gov.states.de.tax.income.subtractions.exclusions.elderly_or_disabled.eligibility"
    },
    "variables": [
      "de_pre_exclusions_agi",
      "age",
      "state_filing_status_if_married_filing_separately_on_same_return",
      "earned_income",
      "is_tax_unit_head_or_spouse",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Delaware elderly or disabled income exclusion"
  },
  "de_elderly_or_disabled_income_exclusion_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/subtractions/exclusions/de_elderly_or_disabled_income_exclusion_indiv.py",
    "parameters": {
      "p": "gov.states.de.tax.income.subtractions.exclusions.elderly_or_disabled",
      "amount": "gov.states.de.tax.income.subtractions.exclusions.elderly_or_disabled.amount"
    },
    "variables": [
      "state_filing_status_if_married_filing_separately_on_same_return"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "de_elderly_or_disabled_income_exclusion_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware individual aged or disabled exclusion when married filing sepaartely"
  },
  "de_elderly_or_disabled_income_exclusion_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/subtractions/exclusions/de_elderly_or_disabled_income_exclusion_joint.py",
    "parameters": {
      "p": "gov.states.de.tax.income.subtractions.exclusions.elderly_or_disabled",
      "amount": "gov.states.de.tax.income.subtractions.exclusions.elderly_or_disabled.amount"
    },
    "variables": [
      "is_tax_unit_head",
      "filing_status",
      "is_tax_unit_spouse",
      "de_elderly_or_disabled_income_exclusion_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "de_elderly_or_disabled_income_exclusion_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware individual aged or disabled exclusion when married filing jointly"
  },
  "de_pension_exclusion_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/subtractions/pension_exclusion/de_pension_exclusion_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dividend_income",
      "capital_gains",
      "taxable_interest_income",
      "rental_income",
      "taxable_pension_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Income sources for the Delaware pension exclusion",
    "adds_from_parameter": "gov.states.de.tax.income.subtractions.exclusions.pension.income_sources"
  },
  "de_pension_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/de/tax/income/subtractions/pension_exclusion/de_pension_exclusion.py",
    "parameters": {
      "p": "gov.states.de.tax.income.subtractions.exclusions.pension",
      "military_retirement_exclusion_available": "gov.states.de.tax.income.subtractions.exclusions.pension.military_retirement_exclusion_available",
      "age_threshold": "gov.states.de.tax.income.subtractions.exclusions.pension.age_threshold",
      "cap": "gov.states.de.tax.income.subtractions.exclusions.pension.cap",
      "calc": "gov.states.de.tax.income.subtractions.exclusions.pension.age_threshold.calc",
      "amount": "gov.states.de.tax.income.subtractions.exclusions.pension.cap.amount",
      "military": "gov.states.de.tax.income.subtractions.exclusions.pension.cap.military"
    },
    "variables": [
      "military_retirement_pay",
      "age",
      "is_tax_unit_head_or_spouse",
      "taxable_pension_income",
      "de_pension_exclusion_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Delaware individual pension exclusion"
  },
  "hi_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/hi_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "hi_additions",
      "adjusted_gross_income"
    ],
    "subtracts": [
      "hi_subtractions"
    ],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii adjusted gross income"
  },
  "hi_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/hi_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "hi_food_excise_credit",
      "hi_cdcc",
      "hi_tax_credit_for_low_income_household_renters",
      "hi_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii refundable credits",
    "adds_from_parameter": "gov.states.hi.tax.income.credits.refundable"
  },
  "hi_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/hi_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.hi.tax.income",
      "amount": "gov.states.hi.tax.income.deductions.standard.amount",
      "calc": "gov.states.hi.tax.income.rates.single.calc",
      "standard": "gov.states.hi.tax.income.deductions.standard",
      "single": "gov.states.hi.tax.income.rates.single",
      "deductions": "gov.states.hi.tax.income.deductions",
      "rates": "gov.states.hi.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii withheld income tax"
  },
  "hi_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/hi_taxable_income.py",
    "parameters": {},
    "variables": [
      "hi_deductions",
      "hi_agi",
      "hi_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii taxable income"
  },
  "hi_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/hi_subtractions.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.subtractions",
      "subtractions": "gov.states.hi.tax.income.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii subtractions from federal adjusted gross income"
  },
  "hi_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/hi_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "hi_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "hi_refundable_credits"
    ],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii income tax"
  },
  "hi_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/hi_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii additions to federal adjusted gross income"
  },
  "hi_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/hi_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.rates",
      "calc": "gov.states.hi.tax.income.rates.head_of_household.calc",
      "rates": "gov.states.hi.tax.income.rates"
    },
    "variables": [
      "filing_status",
      "hi_alternative_tax_on_capital_gains_eligible",
      "hi_alternative_tax_on_capital_gains",
      "hi_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii income tax before non-refundable credits"
  },
  "hi_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/hi_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii non-refundable credits"
  },
  "hi_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/hi_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "hi_non_refundable_credits",
      "hi_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii income tax before refundable credits"
  },
  "hi_military_pay_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/subtractions/hi_military_pay_exclusion.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.subtractions.military_pay",
      "cap": "gov.states.hi.tax.income.subtractions.military_pay.cap"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "military_service_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii military reserve or national guard duty pay exclusion",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=13"
  },
  "hi_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/deductions/hi_deductions.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.deductions.itemized",
      "deductions": "gov.states.hi.tax.income.deductions.itemized.threshold.deductions",
      "dependent": "gov.states.hi.tax.income.deductions.itemized.threshold.dependent",
      "threshold": "gov.states.hi.tax.income.deductions.itemized.threshold"
    },
    "variables": [
      "filing_status",
      "hi_itemized_deductions",
      "tax_unit_earned_income",
      "head_is_dependent_elsewhere",
      "hi_standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii deductions",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=15https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=20"
  },
  "hi_taxable_income_for_alternative_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/alternative_tax/hi_taxable_income_for_alternative_tax.py",
    "parameters": {
      "p": "gov.states.hi.tax.income",
      "thresholds": "gov.states.hi.tax.income.rates.head_of_household.thresholds",
      "rates": "gov.states.hi.tax.income.rates"
    },
    "variables": [
      "net_capital_gain",
      "filing_status",
      "long_term_capital_gains",
      "hi_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "hi_alternative_tax_on_capital_gains_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii eligible capital gains for the alternative tax capital gains"
  },
  "hi_alternative_tax_on_capital_gains": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/alternative_tax/hi_alternative_tax_on_capital_gains.py",
    "parameters": {
      "p": "gov.states.hi.tax.income",
      "rate": "gov.states.hi.tax.income.alternative_tax.rate",
      "alternative_tax": "gov.states.hi.tax.income.alternative_tax",
      "rates": "gov.states.hi.tax.income.rates",
      "calc": "gov.states.hi.tax.income.rates.head_of_household.calc"
    },
    "variables": [
      "hi_taxable_income_for_alternative_tax",
      "filing_status",
      "hi_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "hi_alternative_tax_on_capital_gains_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii alternative tax on capital gains"
  },
  "hi_alternative_tax_on_capital_gains_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/alternative_tax/hi_alternative_tax_on_capital_gains_eligible.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.alternative_tax",
      "availability": "gov.states.hi.tax.income.alternative_tax.availability"
    },
    "variables": [
      "net_capital_gain"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Hawaii alternative tax on capital gains"
  },
  "hi_disabled_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/exemptions/hi_disabled_exemptions.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.exemptions",
      "base": "gov.states.hi.tax.income.exemptions.base",
      "aged_threshold": "gov.states.hi.tax.income.exemptions.aged_threshold",
      "disabled": "gov.states.hi.tax.income.exemptions.disabled"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age",
      "is_disabled",
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii disabled exemptions",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=20"
  },
  "hi_regular_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/exemptions/hi_regular_exemptions.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.exemptions",
      "aged_threshold": "gov.states.hi.tax.income.exemptions.aged_threshold",
      "base": "gov.states.hi.tax.income.exemptions.base"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age",
      "exemptions_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii regular exemptions",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=20"
  },
  "hi_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/exemptions/hi_exemptions.py",
    "parameters": {},
    "variables": [
      "hi_disabled_exemptions",
      "hi_regular_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii exemptions",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=20"
  },
  "hi_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/credits/hi_eitc.py",
    "parameters": {
      "rate": "gov.states.hi.tax.income.credits.eitc.match"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii earned income tax credit"
  },
  "hi_food_excise_credit_child_receiving_public_support": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/credits/food_excise/hi_food_excise_credit_child_receiving_public_support.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.credits.food_excise_tax",
      "support_proportion_threshold": "gov.states.hi.tax.income.credits.food_excise_tax.minor_child.support_proportion_threshold",
      "minor_child": "gov.states.hi.tax.income.credits.food_excise_tax.minor_child"
    },
    "variables": [
      "tanf_person",
      "child_support_received",
      "social_security_survivors"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Child received support for the hawaii food excise credit"
  },
  "hi_food_excise_exemption_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/credits/food_excise/hi_food_excise_exemption_amount.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.credits.food_excise_tax",
      "in_effect": "gov.states.hi.tax.income.credits.food_excise_tax.minor_child.in_effect",
      "minor_child": "gov.states.hi.tax.income.credits.food_excise_tax.minor_child",
      "amount": "gov.states.hi.tax.income.credits.food_excise_tax.amount",
      "calc": "gov.states.hi.tax.income.credits.food_excise_tax.amount.surviving_spouse.calc"
    },
    "variables": [
      "filing_status",
      "exemptions_count",
      "hi_food_excise_credit_minor_child_count",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Exemption amount for Hawaii Food/Excise Tax Credit"
  },
  "hi_food_excise_credit_minor_child_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/credits/food_excise/hi_food_excise_credit_minor_child_amount.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.credits.food_excise_tax",
      "amount": "gov.states.hi.tax.income.credits.food_excise_tax.minor_child.amount",
      "minor_child": "gov.states.hi.tax.income.credits.food_excise_tax.minor_child"
    },
    "variables": [
      "hi_food_excise_credit_minor_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minor child amount for the Hawaii Food/Excise Tax Credit"
  },
  "hi_food_excise_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/credits/food_excise/hi_food_excise_credit.py",
    "parameters": {},
    "variables": [
      "head_is_dependent_elsewhere",
      "hi_food_excise_credit_minor_child_amount",
      "hi_food_excise_exemption_amount"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii Food/Excise Tax Credit"
  },
  "hi_food_excise_credit_minor_child_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/credits/food_excise/hi_food_excise_credit_minor_child_count.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.credits.food_excise_tax",
      "age_threshold": "gov.states.hi.tax.income.credits.food_excise_tax.minor_child.age_threshold",
      "minor_child": "gov.states.hi.tax.income.credits.food_excise_tax.minor_child"
    },
    "variables": [
      "is_child",
      "age",
      "hi_food_excise_credit_child_receiving_public_support"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minor child's number for the Hawaii Food/Excise Tax Credit"
  },
  "hi_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/credits/cdcc/hi_cdcc.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.credits.cdcc",
      "calc": "gov.states.hi.tax.income.credits.cdcc.rate.calc",
      "rate": "gov.states.hi.tax.income.credits.cdcc.rate"
    },
    "variables": [
      "hi_agi",
      "hi_dependent_care_benefits",
      "hi_cdcc_min_head_spouse_earned"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii child and dependent care credit"
  },
  "hi_tax_credit_for_low_income_household_renters_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/credits/hi_low_income_household_renters/hi_tax_credit_for_low_income_household_renters_eligible.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.credits.lihrtc",
      "rent_threshold": "gov.states.hi.tax.income.credits.lihrtc.eligibility.rent_threshold",
      "agi_limit": "gov.states.hi.tax.income.credits.lihrtc.eligibility.agi_limit",
      "eligibility": "gov.states.hi.tax.income.credits.lihrtc.eligibility"
    },
    "variables": [
      "hi_agi",
      "head_is_dependent_elsewhere",
      "rent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Hawaii low income household renters tax credit"
  },
  "hi_cdcc_min_head_spouse_earned": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/credits/cdcc/dependent_care_benefit/hi_cdcc_min_head_spouse_earned.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.credits.cdcc",
      "calc": "gov.states.hi.tax.income.credits.cdcc.disabled_student_income_floor.calc",
      "disabled_student_income_floor": "gov.states.hi.tax.income.credits.cdcc.disabled_student_income_floor"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "count_cdcc_eligible",
      "earned_income",
      "hi_cdcc_income_floor_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii minimum income between head and spouse for the CDCC"
  },
  "hi_cdcc_income_floor_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/credits/cdcc/dependent_care_benefit/hi_cdcc_income_floor_eligible.py",
    "parameters": {},
    "variables": [
      "is_full_time_student",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii income floor eligible"
  },
  "hi_dependent_care_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/credits/cdcc/dependent_care_benefit/hi_dependent_care_benefits.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.credits.cdcc.dependent_care_benefits",
      "p_irs": "gov.irs.gross_income.dependent_care_assistance_programs",
      "reduction_amount": "gov.irs.gross_income.dependent_care_assistance_programs.reduction_amount",
      "calc": "gov.states.hi.tax.income.credits.cdcc.dependent_care_benefits.expense_floor.calc",
      "expense_floor": "gov.states.hi.tax.income.credits.cdcc.dependent_care_benefits.expense_floor"
    },
    "variables": [
      "filing_status",
      "count_cdcc_eligible",
      "hi_cdcc_min_head_spouse_earned",
      "dependent_care_employer_benefits",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii Dependent Care Benefits"
  },
  "hi_medical_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/deductions/itemized/hi_medical_expense_deduction.py",
    "parameters": {
      "p_deductions": "gov.irs.deductions",
      "floor": "gov.irs.deductions.itemized.medical.floor",
      "medical": "gov.irs.deductions.itemized.medical",
      "itemized": "gov.irs.deductions.itemized"
    },
    "variables": [
      "hi_agi",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii medical expense deduction",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=15https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=32"
  },
  "hi_total_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/deductions/itemized/hi_total_itemized_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "charitable_deduction",
      "hi_medical_expense_deduction",
      "hi_interest_deduction",
      "hi_casualty_loss_deduction",
      "hi_salt_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii total itemized deduction",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=15https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=32",
    "adds_from_parameter": "gov.states.hi.tax.income.deductions.itemized.sources"
  },
  "hi_salt_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/deductions/itemized/hi_salt_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "state_and_local_sales_or_income_tax",
      "real_estate_taxes"
    ],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii state and local tax deduction",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=18https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=32"
  },
  "hi_casualty_loss_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/deductions/itemized/hi_casualty_loss_deduction.py",
    "parameters": {
      "p_deductions": "gov.irs.deductions",
      "floor": "gov.irs.deductions.itemized.casualty.floor",
      "casualty": "gov.irs.deductions.itemized.casualty",
      "itemized": "gov.irs.deductions.itemized"
    },
    "variables": [
      "casualty_loss",
      "hi_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii casualty loss deduction",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=18https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=32"
  },
  "hi_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/deductions/itemized/hi_itemized_deductions.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.reduction",
      "agi_threshold": "gov.irs.deductions.itemized.reduction.agi_threshold"
    },
    "variables": [
      "filing_status",
      "hi_agi",
      "hi_total_itemized_deductions",
      "hi_reduced_itemized_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii itemized deduction",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=15https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=32"
  },
  "hi_reduced_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/deductions/itemized/hi_reduced_itemized_deductions.py",
    "parameters": {
      "p_2017": "gov.irs.deductions.itemized.reduction",
      "p_hi": "gov.states.hi.tax.income.deductions.itemized.threshold",
      "reduction": "gov.states.hi.tax.income.deductions.itemized.threshold.reduction",
      "base": "gov.irs.deductions.itemized.reduction.rate.base",
      "excess_agi": "gov.irs.deductions.itemized.reduction.rate.excess_agi",
      "rate": "gov.irs.deductions.itemized.reduction.rate"
    },
    "variables": [
      "hi_agi",
      "filing_status",
      "investment_interest_expense",
      "hi_medical_expense_deduction",
      "hi_total_itemized_deductions",
      "hi_casualty_loss_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii reduced itemized deduction",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=15https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=32"
  },
  "hi_interest_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/deductions/itemized/hi_interest_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "investment_interest_expense",
      "mortgage_interest"
    ],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii interest deduction",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=17https://files.hawaii.gov/tax/forms/2022/n11ins.pdf#page=32"
  },
  "hi_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/hi/tax/income/deductions/standard/hi_standard_deduction.py",
    "parameters": {
      "p": "gov.states.hi.tax.income.deductions.standard",
      "amount": "gov.states.hi.tax.income.deductions.standard.amount"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.HI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Hawaii standard deduction",
    "description": "https://files.hawaii.gov/tax/forms/2022/n11ins.pdf"
  },
  "ne_dhhs_has_special_needs": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/dhhs/ne_dhhs_has_special_needs.py",
    "parameters": {},
    "variables": [
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Has special needs under Nebraska Department of Health and Human Services",
    "description": "A child has a requirement for extra care because of an acute or chronic physical or mental condition"
  },
  "ne_child_care_subsidies": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/dhhs/ne_child_care_subsidies.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ne_child_care_subsidy"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska child care subsidies"
  },
  "ne_child_care_subsidy_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/dhhs/child_care_subsidy/ne_child_care_subsidy_eligible_child.py",
    "parameters": {
      "p": "gov.states.ne.dhhs.child_care_subsidy.age_threshold",
      "special_needs": "gov.states.ne.dhhs.child_care_subsidy.age_threshold.special_needs",
      "base": "gov.states.ne.dhhs.child_care_subsidy.age_threshold.base"
    },
    "variables": [
      "age",
      "ne_dhhs_has_special_needs"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska Child Care Subsidy program eligible child"
  },
  "ne_child_care_subsidy_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/dhhs/child_care_subsidy/ne_child_care_subsidy_eligible.py",
    "parameters": {
      "p": "gov.states.ne.dhhs.child_care_subsidy"
    },
    "variables": [
      "ne_child_care_subsidy_income_eligible",
      "ne_child_care_subsidy_eligible_child",
      "ne_child_care_subsidy_eligible_parent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Nebraska Child Care Subsidy program"
  },
  "ne_child_care_subsidy_eligible_parent": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/dhhs/child_care_subsidy/ne_child_care_subsidy_eligible_parent.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska Child Care Subsidy program eligible parent",
    "description": "Nebraska Child Care Subsidy eligible program parent must either be working, involved with Employment First as part of the ADC program, going to school or trainings, going to medical or therapy visits for self or child(ren), or ill or hurt (must be confirmed by a doctor)"
  },
  "ne_child_care_subsidy": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/dhhs/child_care_subsidy/ne_child_care_subsidy.py",
    "parameters": {
      "p": "gov.states.ne.dhhs.child_care_subsidy",
      "fee_free_limit": "gov.states.ne.dhhs.child_care_subsidy.fpg_fraction.fee_free_limit",
      "fpg_fraction": "gov.states.ne.dhhs.child_care_subsidy.fpg_fraction",
      "rate": "gov.states.ne.dhhs.child_care_subsidy.rate"
    },
    "variables": [
      "spm_unit_pre_subsidy_childcare_expenses",
      "spm_unit_net_income",
      "spm_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ne_child_care_subsidy_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska Child Care Subsidy"
  },
  "ne_child_care_subsidy_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/dhhs/child_care_subsidy/ne_child_care_subsidy_income_eligible.py",
    "parameters": {
      "p": "gov.states.ne.dhhs.child_care_subsidy.fpg_fraction",
      "initial_eligibility": "gov.states.ne.dhhs.child_care_subsidy.fpg_fraction.initial_eligibility"
    },
    "variables": [
      "spm_unit_fpg",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska Child Care Subsidy program income eligible"
  },
  "ne_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/ne_income_tax_before_refundable_credits.py",
    "parameters": {
      "p": "gov.states.ne.tax.income",
      "nonrefundable_adjust_limit": "gov.states.ne.tax.income.credits.nonrefundable_adjust_limit",
      "credits": "gov.states.ne.tax.income.credits"
    },
    "variables": [
      "ne_agi_subtractions",
      "ne_additions",
      "ne_income_tax_before_credits",
      "income_tax_before_credits",
      "ne_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NE income tax before refundable credits"
  },
  "ne_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/ne_income_tax_before_credits.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.rates",
      "calc": "gov.states.ne.tax.income.rates.head_of_household.calc",
      "rates": "gov.states.ne.tax.income.rates"
    },
    "variables": [
      "filing_status",
      "ne_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NE income tax before credits"
  },
  "ne_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/ne_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ne_exemptions",
      "ne_elderly_disabled_credit",
      "ne_cdcc_nonrefundable"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NE nonrefundable income tax credits",
    "adds_from_parameter": "gov.states.ne.tax.income.credits.nonrefundable"
  },
  "ne_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/ne_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ne_cdcc_refundable",
      "ne_eitc",
      "ne_refundable_ctc",
      "ne_school_readiness_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NE refundable income tax credits",
    "adds_from_parameter": "gov.states.ne.tax.income.credits.refundable"
  },
  "ne_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/ne_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ne.tax.income",
      "base_amount": "gov.states.ne.tax.income.deductions.standard.base_amount",
      "calc": "gov.states.ne.tax.income.rates.single.calc",
      "standard": "gov.states.ne.tax.income.deductions.standard",
      "single": "gov.states.ne.tax.income.rates.single",
      "deductions": "gov.states.ne.tax.income.deductions",
      "rates": "gov.states.ne.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska withheld income tax"
  },
  "ne_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/ne_taxable_income.py",
    "parameters": {},
    "variables": [
      "ne_itemized_deductions",
      "ne_agi",
      "ne_standard_deduction",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NE taxable income"
  },
  "ne_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/ne_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ne_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "ne_refundable_credits"
    ],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NE income tax"
  },
  "ne_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/deductions/ne_itemized_deductions.py",
    "parameters": {},
    "variables": [
      "capped_property_taxes",
      "itemized_deductions_less_salt"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NE itemized deductions"
  },
  "ne_base_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/deductions/ne_base_standard_deduction.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.deductions.standard",
      "base_amount": "gov.states.ne.tax.income.deductions.standard.base_amount"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska standard deduction"
  },
  "ne_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/deductions/ne_standard_deduction.py",
    "parameters": {},
    "variables": [
      "ne_base_standard_deduction",
      "basic_standard_deduction",
      "additional_standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NE standard deduction"
  },
  "ne_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/exemptions/ne_exemptions.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.exemptions",
      "amount": "gov.states.ne.tax.income.exemptions.amount"
    },
    "variables": [
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska exemptions amount"
  },
  "ne_elderly_disabled_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/credits/ne_elderly_disabled_credit.py",
    "parameters": {},
    "variables": [
      "income_tax_before_credits",
      "elderly_disabled_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NE elderly/disabled tax credit"
  },
  "ne_agi_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/adjusted_gross_income/ne_agi_subtractions.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.agi.subtractions",
      "subtractions": "gov.states.ne.tax.income.agi.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska subtractions from federal adjusted gross income"
  },
  "ne_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/adjusted_gross_income/ne_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska AGI additions to federal AGI"
  },
  "ne_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/adjusted_gross_income/ne_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "ne_additions"
    ],
    "subtracts": [
      "ne_agi_subtractions"
    ],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NE AGI"
  },
  "ne_social_security_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/adjusted_gross_income/subtractions/ne_social_security_subtraction.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.agi.subtractions",
      "fraction": "gov.states.ne.tax.income.agi.subtractions.social_security.fraction",
      "threshold": "gov.states.ne.tax.income.agi.subtractions.social_security.threshold",
      "social_security": "gov.states.ne.tax.income.agi.subtractions.social_security"
    },
    "variables": [
      "filing_status",
      "taxable_social_security",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska social security subtraction"
  },
  "ne_school_readiness_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/credits/school_readiness/ne_school_readiness_credit.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.credits.school_readiness",
      "refundable": "gov.states.ne.tax.income.credits.school_readiness.amount.refundable",
      "max_unit_size": "gov.states.ne.tax.income.credits.school_readiness.max_unit_size",
      "amount": "gov.states.ne.tax.income.credits.school_readiness.amount"
    },
    "variables": [
      "ne_school_readiness_credit_child_care_worker_rating"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ne_school_readiness_credit_eligible_worker",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska school readiness tax credit"
  },
  "ne_school_readiness_credit_eligible_worker": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/credits/school_readiness/ne_school_readiness_credit_eligible_worker.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible worker for the Nebraska school readiness refundable tax credit"
  },
  "ne_school_readiness_credit_child_care_worker_rating": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/credits/school_readiness/ne_school_readiness_credit_child_care_worker_rating.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Level of child care worker for the Nebraska school readiness refundable tax credit"
  },
  "ne_cdcc_refundable": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/credits/cdcc/ne_cdcc_refundable.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.credits.cdcc.refundable",
      "match": "gov.states.ne.tax.income.credits.cdcc.refundable.match",
      "reduction": "gov.states.ne.tax.income.credits.cdcc.refundable.reduction",
      "start": "gov.states.ne.tax.income.credits.cdcc.refundable.reduction.start",
      "increment": "gov.states.ne.tax.income.credits.cdcc.refundable.reduction.increment",
      "amount": "gov.states.ne.tax.income.credits.cdcc.refundable.reduction.amount"
    },
    "variables": [
      "adjusted_gross_income",
      "cdcc_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ne_cdcc_refundable_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska refundable cdcc"
  },
  "ne_cdcc_refundable_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/credits/cdcc/ne_cdcc_refundable_eligible.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.credits.cdcc.refundable",
      "income_limit": "gov.states.ne.tax.income.credits.cdcc.refundable.income_limit"
    },
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Nebraska refundable CDCC"
  },
  "ne_cdcc_nonrefundable": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/credits/cdcc/ne_cdcc_nonrefundable.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.credits",
      "fraction": "gov.states.ne.tax.income.credits.cdcc.nonrefundable.fraction",
      "nonrefundable": "gov.states.ne.tax.income.credits.cdcc.nonrefundable",
      "cdcc": "gov.states.ne.tax.income.credits.cdcc"
    },
    "variables": [
      "ne_cdcc_refundable_eligible",
      "cdcc_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska nonrefundable cdcc"
  },
  "ne_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/credits/eitc/ne_eitc.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.credits",
      "fraction": "gov.states.ne.tax.income.credits.eitc.fraction",
      "eitc": "gov.states.ne.tax.income.credits.eitc"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NE EITC amount"
  },
  "ne_refundable_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/credits/ctc/refundable/ne_refundable_ctc.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.credits.ctc.refundable",
      "calc": "gov.states.ne.tax.income.credits.ctc.refundable.amount.calc",
      "amount": "gov.states.ne.tax.income.credits.ctc.refundable.amount"
    },
    "variables": [
      "ne_refundable_ctc_eligible_child",
      "ne_refundable_ctc_total_household_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska refundable Child Tax Credit"
  },
  "ne_refundable_ctc_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/credits/ctc/refundable/ne_refundable_ctc_eligible_child.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.credits.ctc.refundable",
      "age_threshold": "gov.states.ne.tax.income.credits.ctc.refundable.age_threshold"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent",
      "pre_subsidy_childcare_expenses",
      "ne_refundable_ctc_income_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska refundable Child Tax Credit eligible child"
  },
  "ne_refundable_ctc_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/credits/ctc/refundable/ne_refundable_ctc_income_eligible.py",
    "parameters": {
      "p": "gov.states.ne.tax.income.credits.ctc.refundable",
      "fpg_fraction": "gov.states.ne.tax.income.credits.ctc.refundable.fpg_fraction"
    },
    "variables": [
      "ne_refundable_ctc_total_household_income",
      "tax_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska refundable Child Tax Credit total household income eligible child"
  },
  "ne_refundable_ctc_total_household_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ne/tax/income/credits/ctc/refundable/ne_refundable_ctc_total_household_income.py",
    "parameters": {},
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NE",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nebraska refundable Child Tax Credit total household income"
  },
  "ks_agi_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/ks_agi_subtractions.py",
    "parameters": {
      "p": "gov.states.ks.tax.income.agi.subtractions",
      "agi_limit": "gov.states.ks.tax.income.agi.subtractions.oasdi.agi_limit",
      "oasdi": "gov.states.ks.tax.income.agi.subtractions.oasdi"
    },
    "variables": [
      "taxable_social_security",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas AGI subtractions from federal AGI"
  },
  "ks_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/ks_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas AGI additions to federal AGI"
  },
  "ks_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/ks_taxable_income.py",
    "parameters": {},
    "variables": [
      "ks_standard_deduction",
      "ks_itemized_deductions",
      "ks_agi",
      "ks_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas taxable income"
  },
  "ks_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/ks_income_tax_before_credits.py",
    "parameters": {
      "p": "gov.states.ks.tax.income.rates",
      "zero_tax_threshold": "gov.states.ks.tax.income.rates.zero_tax_threshold",
      "joint": "gov.states.ks.tax.income.rates.joint",
      "other": "gov.states.ks.tax.income.rates.other",
      "calc": "gov.states.ks.tax.income.rates.other.calc"
    },
    "variables": [
      "filing_status",
      "ks_taxable_income",
      "ks_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas income tax before credits"
  },
  "ks_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/ks_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "ks_additions"
    ],
    "subtracts": [
      "ks_agi_subtractions"
    ],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas AGI"
  },
  "ks_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/ks_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ks.tax.income",
      "base_amount": "gov.states.ks.tax.income.deductions.standard.base_amount",
      "calc": "gov.states.ks.tax.income.rates.other.calc",
      "standard": "gov.states.ks.tax.income.deductions.standard",
      "other": "gov.states.ks.tax.income.rates.other",
      "deductions": "gov.states.ks.tax.income.deductions",
      "rates": "gov.states.ks.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas withheld income tax"
  },
  "ks_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/ks_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ks_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "ks_refundable_credits"
    ],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas income tax"
  },
  "ks_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/ks_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ks_income_tax_before_credits",
      "ks_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas income tax before refundable credits"
  },
  "ks_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/deductions/ks_standard_deduction.py",
    "parameters": {
      "p": "gov.states.ks.tax.income.deductions.standard",
      "base_amount": "gov.states.ks.tax.income.deductions.standard.base_amount",
      "extra_amount": "gov.states.ks.tax.income.deductions.standard.extra_amount"
    },
    "variables": [
      "filing_status",
      "aged_blind_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas standard deduction"
  },
  "ks_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/deductions/ks_itemized_deductions.py",
    "parameters": {},
    "variables": [
      "real_estate_taxes",
      "itemized_deductions_less_salt"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas itemized deductions"
  },
  "ks_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/exemptions/ks_exemptions.py",
    "parameters": {
      "p": "gov.states.ks.tax.income.exemptions",
      "in_effect": "gov.states.ks.tax.income.exemptions.by_filing_status.in_effect",
      "dependent": "gov.states.ks.tax.income.exemptions.by_filing_status.dependent",
      "hoh_additional_amount": "gov.states.ks.tax.income.exemptions.by_filing_status.hoh_additional_amount",
      "base": "gov.states.ks.tax.income.exemptions.disabled_veteran.base",
      "by_filing_status": "gov.states.ks.tax.income.exemptions.by_filing_status",
      "disabled_veteran": "gov.states.ks.tax.income.exemptions.disabled_veteran",
      "consolidated": "gov.states.ks.tax.income.exemptions.consolidated",
      "amount": "gov.states.ks.tax.income.exemptions.consolidated.amount"
    },
    "variables": [
      "ks_disabled_veteran_exemptions_eligible_person",
      "filing_status",
      "ks_count_exemptions",
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas exemptions amount"
  },
  "ks_count_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/exemptions/ks_count_exemptions.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "number of KS exemptions"
  },
  "ks_fstc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/credits/ks_fstc.py",
    "parameters": {
      "p": "gov.states.ks.tax.income.credits",
      "child_age": "gov.states.ks.tax.income.credits.food_sales_tax.child_age",
      "min_adult_age": "gov.states.ks.tax.income.credits.food_sales_tax.min_adult_age",
      "agi_limit": "gov.states.ks.tax.income.credits.food_sales_tax.agi_limit",
      "amount": "gov.states.ks.tax.income.credits.food_sales_tax.amount",
      "food_sales_tax": "gov.states.ks.tax.income.credits.food_sales_tax"
    },
    "variables": [
      "age_head",
      "age",
      "head_is_disabled",
      "age_spouse",
      "is_tax_unit_dependent",
      "spouse_is_disabled",
      "tax_unit_dependents",
      "blind_head",
      "adjusted_gross_income",
      "blind_spouse",
      "ks_count_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas food sales tax credit"
  },
  "ks_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/credits/ks_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ks_refundable_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas refundable income tax credits",
    "adds_from_parameter": "gov.states.ks.tax.income.credits.refundable"
  },
  "ks_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/credits/ks_cdcc.py",
    "parameters": {
      "p": "gov.states.ks.tax.income.credits",
      "cdcc_fraction": "gov.states.ks.tax.income.credits.cdcc_fraction"
    },
    "variables": [
      "cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas child and dependent care expenses credit"
  },
  "ks_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/credits/ks_non_refundable_credits.py",
    "parameters": {
      "p": "gov.states.ks.tax.income",
      "nonrefundable_after_eitc": "gov.states.ks.tax.income.credits.nonrefundable_after_eitc",
      "nonrefundable_before_eitc": "gov.states.ks.tax.income.credits.nonrefundable_before_eitc",
      "credits": "gov.states.ks.tax.income.credits"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas nonrefundable income tax credits"
  },
  "ks_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/credits/eitc/ks_refundable_eitc.py",
    "parameters": {},
    "variables": [
      "ks_total_eitc",
      "ks_nonrefundable_eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas refundable EITC amount"
  },
  "ks_nonrefundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/credits/eitc/ks_nonrefundable_eitc.py",
    "parameters": {
      "p": "gov.states.ks.tax.income",
      "nonrefundable_before_eitc": "gov.states.ks.tax.income.credits.nonrefundable_before_eitc",
      "credits": "gov.states.ks.tax.income.credits"
    },
    "variables": [
      "ks_income_tax_before_credits",
      "ks_total_eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas EITC nonrefundable amount"
  },
  "ks_total_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ks/tax/income/credits/eitc/ks_total_eitc.py",
    "parameters": {
      "p": "gov.states.ks.tax.income.credits",
      "eitc_fraction": "gov.states.ks.tax.income.credits.eitc_fraction"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kansas total EITC amount (both nonrefundable and refundable)"
  },
  "md_tanf_count_children": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tanf/md_tanf_count_children.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland TANF number of children"
  },
  "md_tanf_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tanf/md_tanf_eligible.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland TANF eligible"
  },
  "md_tanf_maximum_benefit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tanf/md_tanf_maximum_benefit.py",
    "parameters": {
      "p": "gov.states.md.tanf.maximum_benefit",
      "main": "gov.states.md.tanf.maximum_benefit.main",
      "additional": "gov.states.md.tanf.maximum_benefit.additional"
    },
    "variables": [
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "md_tanf_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland TANF maximum benefit"
  },
  "md_tanf_gross_earned_income_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tanf/income/earned/md_tanf_gross_earned_income_deduction.py",
    "parameters": {
      "p": "gov.states.md.tanf.income.deductions.earned",
      "new": "gov.states.md.tanf.income.deductions.earned.new",
      "self_employed": "gov.states.md.tanf.income.deductions.earned.self_employed",
      "not_self_employed": "gov.states.md.tanf.income.deductions.earned.not_self_employed"
    },
    "variables": [
      "earned_income",
      "is_tanf_enrolled",
      "self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland TANF earned income deduction"
  },
  "md_snap_elderly_present": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/usda/snap/min_allotment/md_snap_elderly_present.py",
    "parameters": {},
    "variables": [
      "md_snap_is_elderly"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Elderly person is present for the Maryland SNAP minimum allotment"
  },
  "md_snap_is_elderly": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/usda/snap/min_allotment/md_snap_is_elderly.py",
    "parameters": {
      "p": "gov.states.md.usda.snap.min_allotment",
      "age_threshold": "gov.states.md.usda.snap.min_allotment.age_threshold"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is an elderly person for Maryland SNAP minimum allotment"
  },
  "md_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/md_income_tax_before_credits.py",
    "parameters": {
      "p": "gov.states.md.tax.income",
      "surtax_applies": "gov.states.md.tax.income.capital_gains.surtax_applies",
      "capital_gains": "gov.states.md.tax.income.capital_gains",
      "rates": "gov.states.md.tax.income.rates",
      "calc": "gov.states.md.tax.income.rates.surviving_spouse.calc"
    },
    "variables": [
      "filing_status",
      "md_capital_gains_surtax",
      "md_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD income tax before credits"
  },
  "md_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/md_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "md_non_refundable_credits",
      "md_income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD income tax after non-refundable credits"
  },
  "md_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/md_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "md_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "md_refundable_credits"
    ],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD income tax"
  },
  "md_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/md_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.md.tax.income",
      "max": "gov.states.md.tax.income.deductions.standard.max",
      "calc": "gov.states.md.tax.income.rates.single.calc",
      "standard": "gov.states.md.tax.income.deductions.standard",
      "single": "gov.states.md.tax.income.rates.single",
      "deductions": "gov.states.md.tax.income.deductions",
      "rates": "gov.states.md.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland withheld income tax"
  },
  "md_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/md_taxable_income.py",
    "parameters": {},
    "variables": [
      "md_exemptions",
      "md_deductions",
      "md_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD taxable income"
  },
  "md_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/agi/md_agi.py",
    "parameters": {},
    "variables": [
      "md_total_additions",
      "md_total_subtractions",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD AGI"
  },
  "md_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/deductions/md_deductions.py",
    "parameters": {},
    "variables": [
      "md_itemized_deductions",
      "md_standard_deduction",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD deductions"
  },
  "md_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/deductions/md_itemized_deductions.py",
    "parameters": {
      "p": "gov.states.md.tax.income.deductions.itemized",
      "applies": "gov.states.md.tax.income.deductions.itemized.phase_out.applies",
      "rate": "gov.states.md.tax.income.deductions.itemized.phase_out.rate",
      "threshold": "gov.states.md.tax.income.deductions.itemized.phase_out.threshold",
      "phase_out": "gov.states.md.tax.income.deductions.itemized.phase_out"
    },
    "variables": [
      "filing_status",
      "capped_property_taxes",
      "adjusted_gross_income",
      "itemized_deductions_less_salt"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland itemized deductions"
  },
  "md_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/deductions/md_standard_deduction.py",
    "parameters": {
      "p": "gov.states.md.tax.income.deductions.standard",
      "applies": "gov.states.md.tax.income.deductions.standard.flat_deduction.applies",
      "amount": "gov.states.md.tax.income.deductions.standard.flat_deduction.amount",
      "flat_deduction": "gov.states.md.tax.income.deductions.standard.flat_deduction",
      "min": "gov.states.md.tax.income.deductions.standard.min",
      "max": "gov.states.md.tax.income.deductions.standard.max",
      "rate": "gov.states.md.tax.income.deductions.standard.rate"
    },
    "variables": [
      "filing_status",
      "md_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD standard deduction"
  },
  "md_local_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/local/md_local_income_tax_before_credits.py",
    "parameters": {
      "rates": "gov.local.tax.income.flat_tax_rate"
    },
    "variables": [
      "state_code_str",
      "county_str",
      "md_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD local income tax before credits"
  },
  "md_capital_gains_surtax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/capital_gains/md_capital_gains_surtax.py",
    "parameters": {
      "p": "gov.states.md.tax.income.capital_gains",
      "surtax_rate": "gov.states.md.tax.income.capital_gains.surtax_rate"
    },
    "variables": [
      "short_term_capital_gains",
      "long_term_capital_gains",
      "limited_capital_loss"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "md_capital_gains_surtax_applies",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland capital gains surtax"
  },
  "md_capital_gains_surtax_applies": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/capital_gains/md_capital_gains_surtax_applies.py",
    "parameters": {
      "p": "gov.states.md.tax.income.capital_gains",
      "surtax_applies": "gov.states.md.tax.income.capital_gains.surtax_applies",
      "surtax_threshold": "gov.states.md.tax.income.capital_gains.surtax_threshold"
    },
    "variables": [
      "md_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland capital gains surtax applies"
  },
  "md_aged_dependent_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/exemptions/md_aged_dependent_exemption.py",
    "parameters": {
      "p": "gov.states.md.tax.income.exemptions.aged",
      "age": "gov.states.md.tax.income.exemptions.aged.age",
      "aged_dependent": "gov.states.md.tax.income.exemptions.aged.aged_dependent"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD aged dependent exemption"
  },
  "md_aged_blind_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/exemptions/md_aged_blind_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "md_aged_dependent_exemption",
      "md_aged_exemption",
      "md_blind_exemption"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD aged blind exemptions"
  },
  "md_aged_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/exemptions/md_aged_exemption.py",
    "parameters": {
      "p": "gov.states.md.tax.income.exemptions.aged",
      "amount": "gov.states.md.tax.income.exemptions.aged.amount",
      "age": "gov.states.md.tax.income.exemptions.aged.age"
    },
    "variables": [
      "age_head",
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD aged exemption"
  },
  "md_blind_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/exemptions/md_blind_exemption.py",
    "parameters": {
      "amount": "gov.states.md.tax.income.exemptions.blind"
    },
    "variables": [
      "blind_spouse",
      "blind_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD blind exemption"
  },
  "md_personal_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/exemptions/md_personal_exemption.py",
    "parameters": {
      "p": "gov.states.md.tax.income.exemptions.personal",
      "calc": "gov.states.md.tax.income.exemptions.personal.surviving_spouse.calc",
      "personal": "gov.states.md.tax.income.exemptions.personal"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD value per personal exemption"
  },
  "md_total_personal_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/exemptions/md_total_personal_exemptions.py",
    "parameters": {},
    "variables": [
      "md_personal_exemption",
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD total personal exemptions"
  },
  "md_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/exemptions/md_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "md_total_personal_exemptions",
      "md_aged_blind_exemptions"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD exemptions"
  },
  "md_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/md_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "md_cdcc",
      "md_non_refundable_eitc",
      "md_poverty_line_credit",
      "md_senior_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD non-refundable credits",
    "description": "Maryland non-refundable tax credits",
    "adds_from_parameter": "gov.states.md.tax.income.credits.non_refundable"
  },
  "md_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/md_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "md_refundable_cdcc",
      "md_refundable_eitc",
      "md_montgomery_eitc",
      "md_ctc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD refundable credits",
    "description": "Maryland refundable tax credits",
    "adds_from_parameter": "gov.states.md.tax.income.credits.refundable"
  },
  "md_tax_unit_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/income_sources/md_tax_unit_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD tax unit earned income"
  },
  "md_poverty_line_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/poverty_line/md_poverty_line_credit.py",
    "parameters": {
      "p": "gov.states.md.tax.income.credits.poverty_line",
      "earned_income_share": "gov.states.md.tax.income.credits.poverty_line.earned_income_share"
    },
    "variables": [
      "tax_unit_earned_income",
      "md_income_tax_before_credits",
      "md_married_or_has_child_non_refundable_eitc",
      "is_eligible_md_poverty_line_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD Poverty Line Credit"
  },
  "is_eligible_md_poverty_line_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/poverty_line/is_eligible_md_poverty_line_credit.py",
    "parameters": {},
    "variables": [
      "md_income_tax_before_credits",
      "tax_unit_fpg",
      "md_total_additions",
      "adjusted_gross_income",
      "tax_unit_earned_income",
      "md_married_or_has_child_non_refundable_eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for MD Poverty Line Credit"
  },
  "md_ctc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/ctc/md_ctc_eligible.py",
    "parameters": {
      "p": "gov.states.md.tax.income.credits.ctc",
      "applies": "gov.states.md.tax.income.credits.ctc.phase_out.applies",
      "phase_out": "gov.states.md.tax.income.credits.ctc.phase_out",
      "agi_cap": "gov.states.md.tax.income.credits.ctc.agi_cap",
      "age_threshold": "gov.states.md.tax.income.credits.ctc.age_threshold",
      "disabled": "gov.states.md.tax.income.credits.ctc.age_threshold.disabled",
      "main": "gov.states.md.tax.income.credits.ctc.age_threshold.main"
    },
    "variables": [
      "is_disabled",
      "age",
      "is_tax_unit_dependent",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Maryland Child Tax Credit"
  },
  "md_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/ctc/md_ctc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "md_ctc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland Child Tax Credit"
  },
  "md_refundable_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/cdcc/md_refundable_cdcc.py",
    "parameters": {
      "p": "gov.states.md.tax.income.credits.cdcc",
      "refundable_agi_cap": "gov.states.md.tax.income.credits.cdcc.eligibility.refundable_agi_cap",
      "eligibility": "gov.states.md.tax.income.credits.cdcc.eligibility"
    },
    "variables": [
      "md_income_tax_before_credits",
      "filing_status",
      "md_cdcc",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD refundable CDCC",
    "description": "Maryland refundable Child and Dependent Care Tax Credit"
  },
  "md_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/cdcc/md_cdcc.py",
    "parameters": {
      "p": "gov.states.md.tax.income.credits.cdcc",
      "start": "gov.states.md.tax.income.credits.cdcc.phase_out.start",
      "increment": "gov.states.md.tax.income.credits.cdcc.phase_out.increment",
      "percent": "gov.states.md.tax.income.credits.cdcc.phase_out.percent",
      "agi_cap": "gov.states.md.tax.income.credits.cdcc.eligibility.agi_cap",
      "phase_out": "gov.states.md.tax.income.credits.cdcc.phase_out",
      "eligibility": "gov.states.md.tax.income.credits.cdcc.eligibility"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income",
      "cdcc_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD CDCC",
    "description": "Maryland Child and Dependent Care Tax Credit"
  },
  "md_senior_tax_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/senior_tax/md_senior_tax_credit_eligible.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Maryland Senior Tax Credit"
  },
  "md_senior_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/senior_tax/md_senior_tax_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "md_senior_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland Senior Tax Credit"
  },
  "md_qualifies_for_unmarried_childless_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/eitc/md_qualifies_for_unmarried_childless_eitc.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualifies for the MD unmarried childless EITC"
  },
  "federal_eitc_without_age_minimum": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/eitc/federal_eitc_without_age_minimum.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal EITC without age minimum",
    "description": "The federal EITC with the minimum age condition ignored."
  },
  "md_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/eitc/md_eitc.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "md_non_refundable_eitc",
      "md_refundable_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD total EITC",
    "description": "Refundable and non-refundable Maryland EITC"
  },
  "md_unmarried_childless_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/eitc/refundable/md_unmarried_childless_refundable_eitc.py",
    "parameters": {},
    "variables": [
      "md_unmarried_childless_non_refundable_eitc",
      "md_income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "md_qualifies_for_unmarried_childless_eitc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland unmarried childless refundable EITC"
  },
  "md_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/eitc/refundable/md_refundable_eitc.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "md_married_or_has_child_refundable_eitc",
      "md_unmarried_childless_refundable_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD EITC refundable State tax credit",
    "description": "Refundable EITC credit reducing MD State income tax."
  },
  "md_married_or_has_child_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/eitc/refundable/md_married_or_has_child_refundable_eitc.py",
    "parameters": {
      "p": "gov.states.md.tax.income.credits.eitc.refundable.married_or_has_child",
      "match": "gov.states.md.tax.income.credits.eitc.refundable.married_or_has_child.match"
    },
    "variables": [
      "md_income_tax_before_credits",
      "md_qualifies_for_unmarried_childless_eitc",
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland refundable EITC for filers who are married or have qualifying child"
  },
  "md_non_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/eitc/non_refundable/md_non_refundable_eitc.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "md_married_or_has_child_non_refundable_eitc",
      "md_unmarried_childless_non_refundable_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD EITC non-refundable State tax credit",
    "description": "Non-refundable EITC credit reducing MD State income tax."
  },
  "md_married_or_has_child_non_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/eitc/non_refundable/md_married_or_has_child_non_refundable_eitc.py",
    "parameters": {
      "p": "gov.states.md.tax.income.credits.eitc.non_refundable.married_or_has_child",
      "match": "gov.states.md.tax.income.credits.eitc.non_refundable.married_or_has_child.match"
    },
    "variables": [
      "md_qualifies_for_unmarried_childless_eitc",
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland non-refundable EITC for filers who are married or have qualifying child"
  },
  "md_unmarried_childless_non_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/credits/eitc/non_refundable/md_unmarried_childless_non_refundable_eitc.py",
    "parameters": {
      "p": "gov.states.md.tax.income.credits.eitc.non_refundable.unmarried_childless",
      "max_amount": "gov.states.md.tax.income.credits.eitc.non_refundable.unmarried_childless.max_amount",
      "match": "gov.states.md.tax.income.credits.eitc.non_refundable.unmarried_childless.match"
    },
    "variables": [
      "federal_eitc_without_age_minimum"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "md_qualifies_for_unmarried_childless_eitc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland unmarried childless non-refundable EITC"
  },
  "md_socsec_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/agi/subtractions/md_socsec_subtraction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "md_socsec_subtraction_amount"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD social security subtraction from AGI"
  },
  "md_pension_subtraction_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/agi/subtractions/md_pension_subtraction_amount.py",
    "parameters": {
      "p": "gov.states.md.tax.income.agi.subtractions",
      "min_age": "gov.states.md.tax.income.agi.subtractions.pension.min_age",
      "max_amount": "gov.states.md.tax.income.agi.subtractions.pension.max_amount",
      "pension": "gov.states.md.tax.income.agi.subtractions.pension"
    },
    "variables": [
      "age",
      "social_security",
      "is_tax_unit_dependent",
      "taxable_pension_income",
      "has_disabled_spouse",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD pension subtraction from AGI"
  },
  "md_dependent_care_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/agi/subtractions/md_dependent_care_subtraction.py",
    "parameters": {
      "md_p": "gov.states.md.tax.income.agi.subtractions",
      "md_max_care_expense": "gov.irs.credits.cdcc.max",
      "max_eligibles": "gov.irs.credits.cdcc.eligibility.max",
      "max_care_expense_year_offset": "gov.states.md.tax.income.agi.subtractions.max_care_expense_year_offset"
    },
    "variables": [
      "cdcc_relevant_expenses",
      "count_cdcc_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD depdendent care subtraction from AGI"
  },
  "md_pension_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/agi/subtractions/md_pension_subtraction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "md_pension_subtraction_amount"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD pension subtraction from AGI"
  },
  "md_total_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/agi/subtractions/md_total_subtractions.py",
    "parameters": {
      "p": "gov.states.md.tax.income.agi.subtractions",
      "sources": "gov.states.md.tax.income.agi.subtractions.sources"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD total subtractions from AGI"
  },
  "md_two_income_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/agi/subtractions/md_two_income_subtraction.py",
    "parameters": {
      "p": "gov.states.md.tax.income.agi.subtractions",
      "sources": "gov.states.md.tax.income.agi.subtractions.sources",
      "max_two_income_subtraction": "gov.states.md.tax.income.agi.subtractions.max_two_income_subtraction"
    },
    "variables": [
      "irs_gross_income",
      "filing_status",
      "md_total_additions",
      "adjusted_gross_income",
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD two-income married couple subtraction from AGI"
  },
  "md_socsec_subtraction_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/agi/subtractions/md_socsec_subtraction_amount.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "taxable_social_security"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD social security subtraction from AGI"
  },
  "md_total_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/agi/additions/md_total_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MD total additions to AGI"
  },
  "md_hundred_year_subtraction_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/agi/subtractions/hundred_year/md_hundred_year_subtraction_eligible.py",
    "parameters": {
      "p": "gov.states.md.tax.income.agi.subtractions.hundred_year",
      "age_threshold": "gov.states.md.tax.income.agi.subtractions.hundred_year.age_threshold"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MD",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Maryland hundred year subtraction"
  },
  "md_hundred_year_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/agi/subtractions/hundred_year/md_hundred_year_subtraction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "md_hundred_year_subtraction_person"
    ],
    "subtracts": [],
    "defined_for": "md_hundred_year_subtraction_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland hundred year subtraction"
  },
  "md_hundred_year_subtraction_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/md/tax/income/agi/subtractions/hundred_year/md_hundred_year_subtraction_person.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "md_hundred_year_subtraction_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maryland hundred year subtraction per person"
  },
  "dc_pap_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/dc_pap_eligible_child.py",
    "parameters": {
      "p": "gov.states.dc.dhs.tanf.age_threshold",
      "student_dependent": "gov.states.dc.dhs.tanf.age_threshold.student_dependent",
      "minor_child": "gov.states.dc.dhs.tanf.age_threshold.minor_child"
    },
    "variables": [
      "monthly_age",
      "is_tax_unit_dependent",
      "is_in_secondary_school"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "dc_tanf_immigration_status_eligible_person",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible child for DC Public Assistance Programs based on demographics"
  },
  "dc_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/dc_withheld_income_tax.py",
    "parameters": {
      "p_irs": "gov.irs.deductions.standard",
      "p": "gov.states.dc.tax.income",
      "amount": "gov.irs.deductions.standard.amount",
      "calc": "gov.states.dc.tax.income.rates.calc",
      "rates": "gov.states.dc.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC withheld income tax"
  },
  "dc_snap_temporary_local_benefit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/dc_snap_temporary_local_benefit.py",
    "parameters": {
      "p": "gov.states.dc.tax.income.snap.temporary_local_benefit",
      "rate": "gov.states.dc.tax.income.snap.temporary_local_benefit.rate"
    },
    "variables": [
      "is_snap_eligible",
      "snap_max_allotment"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "DC temporary SNAP benefit amount",
    "label": "DC temporary local SNAP benefit amount"
  },
  "dc_taxable_income_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/dc_taxable_income_indiv.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dc_agi"
    ],
    "subtracts": [
      "dc_deduction_indiv"
    ],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC taxable income (can be negative) when married couple files separately"
  },
  "dc_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/dc_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dc_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "dc_refundable_credits"
    ],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC income tax"
  },
  "dc_taxable_income_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/dc_taxable_income_joint.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dc_taxable_income_indiv"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC taxable income (can be negative) when married couple files jointly"
  },
  "dc_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/dc_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "dc_non_refundable_credits",
      "dc_income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC income tax before refundable credits"
  },
  "dc_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/dc_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income_person",
      "dc_additions"
    ],
    "subtracts": [
      "dc_income_subtractions"
    ],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC AGI (adjusted gross income) for each person in tax unit"
  },
  "dc_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/dc_income_tax_before_credits.py",
    "parameters": {},
    "variables": [
      "dc_income_tax_before_credits_indiv",
      "dc_income_tax_before_credits_joint",
      "dc_files_separately"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC income tax before credits"
  },
  "dc_income_tax_before_credits_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/dc_income_tax_before_credits_joint.py",
    "parameters": {
      "p": "gov.states",
      "calc": "gov.states.dc.tax.income.rates.calc",
      "rates": "gov.states.dc.tax.income.rates",
      "income": "gov.states.dc.tax.income",
      "tax": "gov.states.dc.tax",
      "dc": "gov.states.dc"
    },
    "variables": [
      "dc_taxable_income_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC income tax before credits when married couples file jointly"
  },
  "dc_income_tax_before_credits_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/dc_income_tax_before_credits_indiv.py",
    "parameters": {
      "p": "gov.states",
      "calc": "gov.states.dc.tax.income.rates.calc",
      "rates": "gov.states.dc.tax.income.rates",
      "income": "gov.states.dc.tax.income",
      "tax": "gov.states.dc.tax",
      "dc": "gov.states.dc"
    },
    "variables": [
      "dc_taxable_income_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC income tax before credits when married couples file separately"
  },
  "dc_files_separately": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/dc_files_separately.py",
    "parameters": {},
    "variables": [
      "dc_income_tax_before_credits_indiv",
      "dc_income_tax_before_credits_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Married couple files separately on DC tax return"
  },
  "dc_income_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/subtractions/dc_income_subtractions.py",
    "parameters": {
      "p": "gov.states.dc.tax.income.subtractions",
      "sources": "gov.states.dc.tax.income.subtractions.sources"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC subtractions from federal adjusted gross income"
  },
  "dc_disability_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/subtractions/dc_disability_exclusion.py",
    "parameters": {
      "p": "gov.irs.income.disability_income_exclusion",
      "cap": "gov.irs.income.disability_income_exclusion.cap",
      "amount": "gov.irs.income.disability_income_exclusion.amount"
    },
    "variables": [
      "tax_unit_taxable_social_security",
      "total_disability_payments",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC disability exclusion"
  },
  "dc_disabled_exclusion_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/subtractions/dc_disabled_exclusion_subtraction.py",
    "parameters": {
      "p": "gov.states.dc.tax.income.subtractions.disabled_exclusion",
      "income_limit": "gov.states.dc.tax.income.subtractions.disabled_exclusion.income_limit",
      "amount": "gov.states.dc.tax.income.subtractions.disabled_exclusion.amount"
    },
    "variables": [
      "irs_gross_income",
      "social_security_disability",
      "ssi",
      "adjusted_gross_income",
      "is_permanently_and_totally_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC disabled exclusion subtraction"
  },
  "dc_self_employment_loss_addition": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/additions/dc_self_employment_loss_addition.py",
    "parameters": {
      "p": "gov.states.dc.tax.income.additions",
      "threshold": "gov.states.dc.tax.income.additions.self_employment_loss.threshold",
      "self_employment_loss": "gov.states.dc.tax.income.additions.self_employment_loss"
    },
    "variables": [
      "is_tax_unit_head",
      "filing_status",
      "is_tax_unit_spouse",
      "self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC excess self-employment loss addition"
  },
  "dc_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/additions/dc_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dc_self_employment_loss_addition"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC additions to federal adjusted gross income",
    "adds_from_parameter": "gov.states.dc.tax.income.additions.sources"
  },
  "dc_deduction_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/deductions/dc_deduction_indiv.py",
    "parameters": {},
    "variables": [
      "dc_agi",
      "dc_deduction_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC deduction for each person in tax unit"
  },
  "dc_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/deductions/dc_deduction_joint.py",
    "parameters": {},
    "variables": [
      "dc_standard_deduction",
      "dc_itemized_deductions",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC deduction for each tax unit"
  },
  "dc_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/deductions/dc_itemized_deductions.py",
    "parameters": {
      "p": "gov.states.dc.tax.income.deductions",
      "start": "gov.states.dc.tax.income.deductions.itemized.phase_out.start",
      "rate": "gov.states.dc.tax.income.deductions.itemized.phase_out.rate",
      "phase_out": "gov.states.dc.tax.income.deductions.itemized.phase_out",
      "itemized": "gov.states.dc.tax.income.deductions.itemized"
    },
    "variables": [
      "filing_status",
      "medical_expense_deduction",
      "real_estate_taxes",
      "itemized_deductions_less_salt",
      "dc_agi",
      "casualty_loss_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC itemized deductions"
  },
  "dc_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/deductions/dc_standard_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "basic_standard_deduction",
      "additional_standard_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC standard deduction"
  },
  "dc_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/credits/dc_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dc_eitc",
      "dc_ptc",
      "dc_kccatc",
      "dc_ctc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC refundable credits",
    "adds_from_parameter": "gov.states.dc.tax.income.credits.refundable"
  },
  "dc_ptc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/credits/dc_ptc.py",
    "parameters": {
      "p_dc": "gov.states.dc.tax.income.credits",
      "ptc": "gov.states.dc.tax.income.credits.ptc",
      "calc": "gov.states.dc.tax.income.credits.ptc.fraction_nonelderly.calc"
    },
    "variables": [
      "rent",
      "age_head",
      "age_spouse",
      "real_estate_taxes",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "takes_up_dc_ptc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC property tax credit"
  },
  "takes_up_dc_ptc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/credits/takes_up_dc_ptc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Takes up the DC property tax credit"
  },
  "dc_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/credits/dc_cdcc.py",
    "parameters": {
      "p_dc": "gov.states.dc.tax.income.credits",
      "match": "gov.states.dc.tax.income.credits.cdcc.match",
      "cdcc": "gov.states.dc.tax.income.credits.cdcc"
    },
    "variables": [
      "cdcc_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC child and dependent care credit"
  },
  "dc_kccatc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/credits/dc_kccatc.py",
    "parameters": {
      "p": "gov.states.dc.tax.income.credits",
      "cdcc": "gov.irs.credits.cdcc.eligibility",
      "income_limit": "gov.states.dc.tax.income.credits.kccatc.income_limit",
      "max_amount": "gov.states.dc.tax.income.credits.kccatc.max_amount",
      "max_age": "gov.states.dc.tax.income.credits.kccatc.max_age",
      "child_age": "gov.irs.credits.cdcc.eligibility.child_age",
      "kccatc": "gov.states.dc.tax.income.credits.kccatc"
    },
    "variables": [
      "filing_status",
      "age",
      "is_tax_unit_dependent",
      "dc_taxable_income_joint",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC keep child care affordable tax credit"
  },
  "dc_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/credits/dc_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dc_cdcc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC non-refundable credits",
    "adds_from_parameter": "gov.states.dc.tax.income.credits.non_refundable"
  },
  "dc_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/credits/ctc/dc_ctc.py",
    "parameters": {
      "p": "gov.states.dc.tax.income.credits.ctc",
      "income_threshold": "gov.states.dc.tax.income.credits.ctc.income_threshold",
      "amount": "gov.states.dc.tax.income.credits.ctc.amount",
      "phase_out": "gov.states.dc.tax.income.credits.ctc.phase_out",
      "increment": "gov.states.dc.tax.income.credits.ctc.phase_out.increment"
    },
    "variables": [
      "dc_ctc_capped_children",
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Child Tax Credit"
  },
  "dc_ctc_capped_children": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/credits/ctc/dc_ctc_capped_children.py",
    "parameters": {
      "p": "gov.states.dc.tax.income.credits.ctc.child",
      "child_cap": "gov.states.dc.tax.income.credits.ctc.child.child_cap"
    },
    "variables": [
      "dc_ctc_eligible_child"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped number of DC CTC eligible children"
  },
  "dc_ctc_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/credits/ctc/dc_ctc_eligible_child.py",
    "parameters": {
      "p": "gov.states.dc.tax.income.credits.ctc.child",
      "age_threshold": "gov.states.dc.tax.income.credits.ctc.child.age_threshold"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_tax_unit_dependent",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the child is eligible for the DC CTC"
  },
  "dc_eitc_with_qualifying_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/credits/eitc/dc_eitc_with_qualifying_child.py",
    "parameters": {
      "p": "gov.states.dc.tax.income.credits",
      "match": "gov.states.dc.tax.income.credits.eitc.with_children.match",
      "with_children": "gov.states.dc.tax.income.credits.eitc.with_children",
      "eitc": "gov.states.dc.tax.income.credits.eitc"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC EITC with qualifying children"
  },
  "dc_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/credits/eitc/dc_eitc.py",
    "parameters": {},
    "variables": [
      "dc_eitc_with_qualifying_child",
      "eitc_child_count",
      "dc_eitc_without_qualifying_child"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC EITC"
  },
  "dc_eitc_without_qualifying_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/tax/income/credits/eitc/dc_eitc_without_qualifying_child.py",
    "parameters": {
      "dc": "gov.states.dc.tax.income.credits",
      "rate": "gov.states.dc.tax.income.credits.eitc.without_children.phase_out.rate",
      "start": "gov.states.dc.tax.income.credits.eitc.without_children.phase_out.start",
      "phase_out": "gov.states.dc.tax.income.credits.eitc.without_children.phase_out",
      "without_children": "gov.states.dc.tax.income.credits.eitc.without_children",
      "eitc": "gov.states.dc.tax.income.credits.eitc"
    },
    "variables": [
      "tax_unit_earned_income",
      "eitc_phased_in",
      "adjusted_gross_income",
      "eitc_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC EITC without qualifying children"
  },
  "dc_liheap_housing_type": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/doee/liheap/dc_liheap_housing_type.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "DCLIHEAPHousingType",
    "enum_options": [
      {
        "key": "SINGLE_FAMILY",
        "value": "Single Family"
      },
      {
        "key": "MULTI_FAMILY",
        "value": "Multi Family"
      }
    ],
    "label": "Housing type for DC LIHEAP"
  },
  "dc_liheap_income_level": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/doee/liheap/dc_liheap_income_level.py",
    "parameters": {
      "p": "gov.states.dc.doee.liheap",
      "income_level_increment": "gov.states.dc.doee.liheap.income_level_increment"
    },
    "variables": [
      "irs_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Income level for DC LIHEAP payment"
  },
  "dc_liheap_heating_type": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/doee/liheap/dc_liheap_heating_type.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "DCLIHEAPHeatingType",
    "enum_options": [
      {
        "key": "ELECTRICITY",
        "value": "Electricity"
      },
      {
        "key": "GAS",
        "value": "Gas"
      },
      {
        "key": "HEAT_IN_RENT",
        "value": "Heat in Rent"
      },
      {
        "key": "OIL",
        "value": "Oil"
      }
    ],
    "label": "Household heating types for DC LIHEAP"
  },
  "dc_liheap_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/doee/liheap/dc_liheap_payment.py",
    "parameters": {
      "p": "gov.states.dc.doee.liheap.payment",
      "electricity": "gov.states.dc.doee.liheap.payment.electricity",
      "gas": "gov.states.dc.doee.liheap.payment.gas",
      "oil": "gov.states.dc.doee.liheap.payment.oil",
      "heat_in_rent": "gov.states.dc.doee.liheap.payment.heat_in_rent"
    },
    "variables": [
      "pre_subsidy_electricity_expense",
      "dc_liheap_income_level",
      "gas_expense",
      "spm_unit_size",
      "fuel_oil_expense",
      "dc_liheap_heating_type",
      "dc_liheap_housing_type"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "dc_liheap_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC LIHEAP payment"
  },
  "dc_liheap_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/doee/liheap/dc_liheap_eligible.py",
    "parameters": {
      "p": "gov.hhs.liheap",
      "smi_limit": "gov.hhs.liheap.smi_limit"
    },
    "variables": [
      "hhs_smi",
      "irs_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the DC LIHEAP"
  },
  "dc_power_head_or_spouse_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/power/dc_power_head_or_spouse_eligible.py",
    "parameters": {
      "p": "gov.states.dc.dhs.power.age_threshold",
      "younger": "gov.states.dc.dhs.power.age_threshold.younger",
      "older": "gov.states.dc.dhs.power.age_threshold.older"
    },
    "variables": [
      "monthly_age",
      "is_parent",
      "dc_pap_eligible_child",
      "is_pregnant",
      "is_incapable_of_self_care"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_tax_unit_head_or_spouse",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC Program on Work, Employment, and Responsibility (POWER)"
  },
  "dc_power": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/power/dc_power.py",
    "parameters": {},
    "variables": [
      "dc_tanf_countable_income",
      "dc_tanf_standard_payment"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "dc_power_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Program on Work, Employment, and Responsibility (POWER)"
  },
  "dc_power_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/power/dc_power_eligible.py",
    "parameters": {},
    "variables": [
      "dc_tanf_basic_eligibility_requirements",
      "dc_power_head_or_spouse_eligible",
      "dc_power_has_disqualifying_benefits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC Program on Work, Employment, and Responsibility (POWER)"
  },
  "dc_ccsp_enrolled": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/dc_ccsp_enrolled.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the family is currently enrolled in DC Child Care Subsidy Program (CCSP)"
  },
  "dc_ccsp_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/dc_ccsp_countable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income",
      "dividend_income",
      "interest_income",
      "rental_income",
      "pension_income",
      "veterans_benefits",
      "military_retirement_pay",
      "alimony_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Child Care Subsidy Program (CCSP) countable income",
    "adds_from_parameter": "gov.states.dc.dhs.ccsp.income.countable_income.sources"
  },
  "dc_ccsp_assets": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/dc_ccsp_assets.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "spm_unit_cash_assets",
      "assessed_property_value"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Child Care Subsidy Program (CCSP) asset",
    "adds_from_parameter": "gov.states.dc.dhs.ccsp.assets.sources"
  },
  "dc_ccsp": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/dc_ccsp.py",
    "parameters": {},
    "variables": [
      "spm_unit_pre_subsidy_childcare_expenses",
      "dc_ccsp_maximum_subsidy_amount",
      "dc_ccsp_copay"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "dc_ccsp_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Child Care Subsidy Program (CCSP) benefit amount"
  },
  "dc_gac_standard_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/gac/dc_gac_standard_payment.py",
    "parameters": {
      "p": "gov.states.dc.dhs.tanf.standard_payment",
      "amount": "gov.states.dc.dhs.tanf.standard_payment.amount",
      "max_unit_size": "gov.states.dc.dhs.tanf.standard_payment.max_unit_size"
    },
    "variables": [
      "dc_gac_assistance_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC General Assistance for Children (GAC) standard payment"
  },
  "dc_gac": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/gac/dc_gac.py",
    "parameters": {},
    "variables": [
      "dc_gac_countable_income",
      "dc_gac_standard_payment"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "dc_gac_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC General Assistance for Children (GAC)"
  },
  "dc_gac_assistance_unit_size": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/gac/dc_gac_assistance_unit_size.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dc_gac_eligible_child"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "DC General Assistance for Children (GAC) assistance unit size"
  },
  "dc_tanf_countable_resources": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/dc_tanf_countable_resources.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Temporary Assistance for Needy Families (TANF) countable resources"
  },
  "dc_tanf": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/dc_tanf.py",
    "parameters": {},
    "variables": [
      "dc_tanf_countable_income",
      "dc_tanf_standard_payment"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "dc_tanf_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Temporary Assistance for Needy Families (TANF)"
  },
  "dc_tanf_assistance_unit_size": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/dc_tanf_assistance_unit_size.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "spm_unit_size"
    ],
    "subtracts": [
      "dc_gac_assistance_unit_size"
    ],
    "defined_for": "StateCode.DC",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Temporary Assistance for Needy Families (TANF) assistance unit size"
  },
  "dc_tanf_standard_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/dc_tanf_standard_payment.py",
    "parameters": {
      "p": "gov.states.dc.dhs.tanf.standard_payment",
      "amount": "gov.states.dc.dhs.tanf.standard_payment.amount",
      "max_unit_size": "gov.states.dc.dhs.tanf.standard_payment.max_unit_size"
    },
    "variables": [
      "dc_tanf_assistance_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Temporary Assistance for Needy Families (TANF) standard payment"
  },
  "dc_tanf_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/income/dc_tanf_countable_income.py",
    "parameters": {},
    "variables": [
      "dc_tanf_childcare_deduction",
      "dc_tanf_countable_unearned_income",
      "dc_tanf_countable_earned_income",
      "dc_gac_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Temporary Assistance for Needy Families (TANF) countable income"
  },
  "dc_tanf_demographic_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/eligibility/dc_tanf_demographic_eligible_person.py",
    "parameters": {},
    "variables": [
      "dc_tanf_immigration_status_eligible_person",
      "is_pregnant",
      "dc_pap_eligible_child",
      "is_related_to_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for DC Temporary Assistance for Needy Families (TANF) based on demographics"
  },
  "dc_tanf_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/eligibility/dc_tanf_income_eligible.py",
    "parameters": {},
    "variables": [
      "dc_tanf_countable_income",
      "dc_tanf_standard_payment"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC Temporary Assistance for Needy Families (TANF) due to income"
  },
  "dc_tanf_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/eligibility/dc_tanf_eligible.py",
    "parameters": {},
    "variables": [
      "dc_tanf_basic_eligibility_requirements",
      "dc_tanf_meets_work_requirements"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC Temporary Assistance for Needy Families (TANF)"
  },
  "dc_tanf_resources_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/eligibility/dc_tanf_resources_eligible.py",
    "parameters": {
      "p": "gov.states.dc.dhs.tanf.resource_limit",
      "amount": "gov.states.dc.dhs.tanf.resource_limit.lower.amount",
      "age_threshold": "gov.states.dc.dhs.tanf.resource_limit.higher.age_threshold",
      "higher": "gov.states.dc.dhs.tanf.resource_limit.higher",
      "lower": "gov.states.dc.dhs.tanf.resource_limit.lower"
    },
    "variables": [
      "monthly_age",
      "is_disabled",
      "dc_tanf_countable_resources"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC Temporary Assistance for Needy Families (TANF) due to resources"
  },
  "dc_tanf_basic_eligibility_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/eligibility/dc_tanf_basic_eligibility_requirements.py",
    "parameters": {},
    "variables": [
      "dc_tanf_demographic_eligible_person",
      "dc_tanf_income_eligible",
      "dc_tanf_resources_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Basic eligibility requirements for DC Temporary Assistance for Needy Families (TANF)"
  },
  "dc_tanf_immigration_status_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/eligibility/dc_tanf_immigration_status_eligible_person.py",
    "parameters": {
      "p": "gov.states.dc.dhs",
      "qualified_noncitizen_statuses": "gov.states.dc.dhs.qualified_noncitizen_statuses"
    },
    "variables": [
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for DC Temporary Assistance for Needy Families (TANF) based on immigration status"
  },
  "dc_tanf_work_requirement_exempt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/work_requirement/dc_tanf_work_requirement_exempt.py",
    "parameters": {
      "p": "gov.states.dc.dhs.tanf.work_requirement.work_exempted",
      "elderly_age_threshold": "gov.states.dc.dhs.tanf.work_requirement.work_exempted.elderly_age_threshold",
      "infant_age_threshold": "gov.states.dc.dhs.tanf.work_requirement.work_exempted.infant_age_threshold"
    },
    "variables": [
      "monthly_age",
      "filing_status",
      "dc_pap_eligible_child",
      "is_full_time_college_student",
      "is_tax_unit_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Exempted from working requirement for DC Temporary Assistance for Needy Families (TANF)"
  },
  "dc_tanf_is_working": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/work_requirement/dc_tanf_is_working.py",
    "parameters": {
      "p": "gov.states.dc.dhs.tanf.work_requirement.required_hours",
      "amount": "gov.states.dc.dhs.tanf.work_requirement.required_hours.single_parent.amount",
      "calc": "gov.states.dc.dhs.tanf.work_requirement.required_hours.single_parent.amount.calc",
      "two_parents": "gov.states.dc.dhs.tanf.work_requirement.required_hours.two_parents",
      "single_parent": "gov.states.dc.dhs.tanf.work_requirement.required_hours.single_parent"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "monthly_age",
      "weekly_hours_worked"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is working under the work requirement for DC Temporary Assistance for Needy Families (TANF)"
  },
  "dc_tanf_meets_work_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/work_requirement/dc_tanf_meets_work_requirements.py",
    "parameters": {},
    "variables": [
      "dc_tanf_work_requirement_exempt",
      "dc_tanf_is_working"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Work requirement satisfied for DC Temporary Assistance for Needy Families (TANF)"
  },
  "dc_tanf_earned_income_after_disregard_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/income/earned/dc_tanf_earned_income_after_disregard_person.py",
    "parameters": {
      "p": "gov.states.dc.dhs.tanf.income.deductions",
      "percentage": "gov.states.dc.dhs.tanf.income.deductions.earned_income_disregard.percentage",
      "amount": "gov.states.dc.dhs.tanf.income.deductions.work_related_expense.amount",
      "earned_income_disregard": "gov.states.dc.dhs.tanf.income.deductions.earned_income_disregard",
      "work_related_expense": "gov.states.dc.dhs.tanf.income.deductions.work_related_expense"
    },
    "variables": [
      "is_tanf_enrolled",
      "dc_tanf_gross_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Temporary Assistance for Needy Families (TANF) earned income after disregard per person"
  },
  "dc_tanf_gross_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/income/earned/dc_tanf_gross_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Temporary Assistance for Needy Families (TANF) gross earned income",
    "adds_from_parameter": "gov.states.dc.dhs.tanf.income.sources.earned"
  },
  "dc_tanf_countable_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/income/earned/dc_tanf_countable_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dc_tanf_earned_income_after_disregard_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Temporary Assistance for Needy Families (TANF) countable earned income"
  },
  "dc_tanf_childcare_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/income/deductions/dc_tanf_childcare_deduction.py",
    "parameters": {
      "p": "gov.states.dc.dhs.tanf.income.deductions.child_care",
      "calc": "gov.states.dc.dhs.tanf.income.deductions.child_care.amount.calc",
      "amount": "gov.states.dc.dhs.tanf.income.deductions.child_care.amount"
    },
    "variables": [
      "monthly_age",
      "is_tax_unit_dependent",
      "childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Temporary Assistance for Needy Families (TANF) child care deduction "
  },
  "dc_tanf_gross_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/income/unearned/dc_tanf_gross_unearned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "veterans_benefits",
      "rental_income",
      "child_support_received",
      "alimony_income",
      "dividend_income",
      "interest_income",
      "miscellaneous_income",
      "pension_income",
      "unemployment_compensation",
      "gi_cash_assistance",
      "social_security"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Temporary Assistance for Needy Families (TANF) gross unearned income",
    "adds_from_parameter": "gov.states.dc.dhs.tanf.income.sources.unearned"
  },
  "dc_tanf_countable_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/tanf/income/unearned/dc_tanf_countable_unearned_income.py",
    "parameters": {
      "p": "gov.states.dc.dhs.tanf.income",
      "child_support": "gov.states.dc.dhs.tanf.income.deductions.child_support",
      "deductions": "gov.states.dc.dhs.tanf.income.deductions"
    },
    "variables": [
      "child_support_received",
      "dc_tanf_gross_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Temporary Assistance for Needy Families (TANF) countable unearned income"
  },
  "dc_gac_countable_unearned_income_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/gac/income/dc_gac_countable_unearned_income_person.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dc_tanf_gross_unearned_income"
    ],
    "subtracts": [],
    "defined_for": "dc_gac_eligible_child",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC General Assistance for Children (GAC) unearned income per person"
  },
  "dc_gac_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/gac/income/dc_gac_countable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dc_gac_earned_income_after_disregard_person",
      "dc_gac_countable_unearned_income_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC General Assistance for Children (GAC) countable income"
  },
  "dc_gac_earned_income_after_disregard_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/gac/income/dc_gac_earned_income_after_disregard_person.py",
    "parameters": {
      "p": "gov.states.dc.dhs",
      "amount": "gov.states.dc.dhs.gac.income_disregard.amount",
      "higher": "gov.states.dc.dhs.tanf.work_requirement.required_hours.single_parent.higher",
      "income_disregard": "gov.states.dc.dhs.gac.income_disregard",
      "single_parent": "gov.states.dc.dhs.tanf.work_requirement.required_hours.single_parent",
      "gac": "gov.states.dc.dhs.gac",
      "tanf": "gov.states.dc.dhs.tanf",
      "required_hours": "gov.states.dc.dhs.tanf.work_requirement.required_hours",
      "work_requirement": "gov.states.dc.dhs.tanf.work_requirement"
    },
    "variables": [
      "monthly_hours_worked",
      "is_full_time_student",
      "dc_tanf_gross_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "dc_gac_eligible_child",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC General Assistance for Children (GAC) earned income after disregard per person"
  },
  "dc_gac_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/gac/eligibility/dc_gac_eligible_child.py",
    "parameters": {},
    "variables": [
      "is_related_to_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "dc_pap_eligible_child",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible child for DC General Assistance for Children (GAC) based on demographics"
  },
  "dc_gac_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/gac/eligibility/dc_gac_income_eligible.py",
    "parameters": {},
    "variables": [
      "dc_gac_countable_income",
      "dc_gac_standard_payment"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC General Assistance for Children (GAC) due to income"
  },
  "dc_gac_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/gac/eligibility/dc_gac_eligible.py",
    "parameters": {},
    "variables": [
      "dc_gac_eligible_child",
      "dc_tanf_resources_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "dc_gac_income_eligible",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC General Assistance for Children (GAC)"
  },
  "dc_ccsp_childcare_provider_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/payment/dc_ccsp_childcare_provider_category.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "Enum",
    "possible_values": "DCCCSPChildCareProviderCategory",
    "enum_options": [
      {
        "key": "CHILD_CENTER",
        "value": "Child Center"
      },
      {
        "key": "CHILD_HOME_AND_EXPANDED_HOME",
        "value": "Child Home and Expanded Home"
      },
      {
        "key": "IN_HOME_CHILD_CARE",
        "value": "In-Home Child Care"
      }
    ],
    "label": "DC Child Care Subsidy Program (CCSP) child care provider category"
  },
  "dc_ccsp_attending_days_per_month": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/payment/dc_ccsp_attending_days_per_month.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Child Care Subsidy Program (CCSP) attending days per month"
  },
  "dc_ccsp_child_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/payment/dc_ccsp_child_category.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "Enum",
    "possible_values": "DCCCSPChildCategory",
    "enum_options": [
      {
        "key": "INFANT_AND_TODDLER",
        "value": "Infant and Toddler"
      },
      {
        "key": "INFANT_AND_TODDLER_SPECIAL_NEEDS",
        "value": "Infant and Toddler Special Needs"
      },
      {
        "key": "PRESCHOOL",
        "value": "Preschool"
      },
      {
        "key": "PRESCHOOL_BEFORE_AND_AFTER",
        "value": "Preschool Before and After"
      },
      {
        "key": "SCHOOL_AGE_BEFORE_AND_AFTER",
        "value": "School-Age Before and After"
      },
      {
        "key": "SCHOOL_AGE_BEFORE_OR_AFTER",
        "value": "School-Age Before or After"
      },
      {
        "key": "PRESCHOOL_AND_SCHOOL_AGE_SPECIAL_NEEDS",
        "value": "Preschool and School-Age Special Needs"
      }
    ],
    "label": "DC Child Care Subsidy Program (CCSP) child category"
  },
  "dc_ccsp_maximum_subsidy_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/payment/dc_ccsp_maximum_subsidy_amount.py",
    "parameters": {
      "p": "gov.states.dc.dhs.ccsp.reimbursement_rates"
    },
    "variables": [
      "dc_ccsp_attending_days_per_month",
      "dc_ccsp_child_category",
      "dc_ccsp_childcare_provider_category",
      "dc_ccsp_schedule_type"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Child Care Subsidy Program (CCSP) maximum subsidy amount per child"
  },
  "dc_ccsp_schedule_type": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/payment/dc_ccsp_schedule_type.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "Enum",
    "possible_values": "DCCCSPSCHEDULETYPE",
    "enum_options": [
      {
        "key": "FULL_TIME_TRADITIONAL",
        "value": "Full-Time Traditional"
      },
      {
        "key": "PART_TIME_TRADITIONAL",
        "value": "Part-Time Traditional"
      },
      {
        "key": "EXTENDED_DAY_FULL_TIME",
        "value": "Extended Day Full-Time"
      },
      {
        "key": "EXTENDED_DAY_PART_TIME",
        "value": "Extended Day Part-Time"
      },
      {
        "key": "FULL_TIME_NONTRADITIONAL",
        "value": "Full-Time Nontraditional"
      },
      {
        "key": "PART_TIME_NONTRADITIONAL",
        "value": "Part-Time Nontraditional"
      }
    ],
    "label": "DC Child Care Subsidy Program (CCSP) schedule type"
  },
  "dc_ccsp_is_youngest_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/copay/dc_ccsp_is_youngest_child.py",
    "parameters": {},
    "variables": [
      "monthly_age",
      "dc_ccsp_eligible_child"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is the youngest child for DC Child Care Subsidy Program (CCSP) "
  },
  "dc_ccsp_is_full_time": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/copay/dc_ccsp_is_full_time.py",
    "parameters": {
      "p": "gov.states.dc.dhs.ccsp",
      "full_time_schedule_types": "gov.states.dc.dhs.ccsp.full_time_schedule_types"
    },
    "variables": [
      "dc_ccsp_schedule_type"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is attending full time day care under DC Child Care Subsidy Program (CCSP)"
  },
  "dc_ccsp_first_child_copay": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/copay/dc_ccsp_first_child_copay.py",
    "parameters": {
      "p": "gov.states.dc.dhs.ccsp.copay.first_child",
      "calc": "gov.states.dc.dhs.ccsp.copay.first_child.part_time.calc",
      "full_time": "gov.states.dc.dhs.ccsp.copay.first_child.full_time",
      "part_time": "gov.states.dc.dhs.ccsp.copay.first_child.part_time"
    },
    "variables": [
      "dc_ccsp_attending_days_per_month",
      "spm_unit_fpg",
      "dc_ccsp_is_full_time",
      "dc_ccsp_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "dc_ccsp_is_youngest_child",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Child Care Subsidy Program (CCSP) fist child copay amount"
  },
  "dc_ccsp_second_child_copay": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/copay/dc_ccsp_second_child_copay.py",
    "parameters": {
      "p": "gov.states.dc.dhs.ccsp.copay.second_child",
      "calc": "gov.states.dc.dhs.ccsp.copay.second_child.part_time.calc",
      "full_time": "gov.states.dc.dhs.ccsp.copay.second_child.full_time",
      "part_time": "gov.states.dc.dhs.ccsp.copay.second_child.part_time"
    },
    "variables": [
      "dc_ccsp_attending_days_per_month",
      "spm_unit_fpg",
      "dc_ccsp_is_full_time",
      "dc_ccsp_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "dc_ccsp_is_second_youngest_child",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Child Care Subsidy Program (CCSP) second child copay amount"
  },
  "dc_ccsp_is_second_youngest_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/copay/dc_ccsp_is_second_youngest_child.py",
    "parameters": {},
    "variables": [
      "monthly_age",
      "dc_ccsp_eligible_child"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is the second youngest child for DC Child Care Subsidy Program (CCSP) "
  },
  "dc_ccsp_copay": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/copay/dc_ccsp_copay.py",
    "parameters": {
      "p": "gov.states.dc.dhs.ccsp.copay",
      "exempted_rate": "gov.states.dc.dhs.ccsp.copay.exempted_rate"
    },
    "variables": [
      "spm_unit_fpg",
      "dc_ccsp_second_child_copay",
      "dc_ccsp_countable_income",
      "dc_ccsp_first_child_copay",
      "dc_ccsp_qualified_need_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "DC Child Care Subsidy Program (CCSP) copay"
  },
  "dc_ccsp_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/eligibility/dc_ccsp_eligible.py",
    "parameters": {},
    "variables": [
      "dc_ccsp_asset_eligible",
      "dc_ccsp_income_eligible",
      "dc_ccsp_eligible_child",
      "dc_ccsp_qualified_activity_or_need_eligible",
      "dc_ccsp_income_test_waived"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC Child Care Subsidy Program (CCSP)"
  },
  "dc_ccsp_asset_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/eligibility/dc_ccsp_asset_eligible.py",
    "parameters": {
      "p": "gov.states.dc.dhs.ccsp.assets",
      "limit": "gov.states.dc.dhs.ccsp.assets.limit"
    },
    "variables": [
      "dc_ccsp_assets"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC Child Care Subsidy Program (CCSP) due to income"
  },
  "dc_ccsp_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/eligibility/dc_ccsp_income_eligible.py",
    "parameters": {
      "p": "gov.states.dc.dhs.ccsp.income.income_limit",
      "new_applicants_rate": "gov.states.dc.dhs.ccsp.income.income_limit.new_applicants_rate",
      "redetermination_rate": "gov.states.dc.dhs.ccsp.income.income_limit.redetermination_rate"
    },
    "variables": [
      "hhs_smi",
      "spm_unit_fpg",
      "dc_ccsp_countable_income",
      "dc_ccsp_enrolled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC Child Care Subsidy Program (CCSP) due to income"
  },
  "dc_ccsp_immigration_status_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/eligibility/dc_ccsp_immigration_status_eligible_person.py",
    "parameters": {
      "p": "gov.states.dc.dhs.ccsp",
      "qualified_immigration_statuses": "gov.states.dc.dhs.ccsp.qualified_immigration_statuses"
    },
    "variables": [
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for DC Child Care Subsidy Program (CCSP) based on immigration status"
  },
  "dc_ccsp_income_test_waived": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/eligibility/dc_ccsp_income_test_waived.py",
    "parameters": {
      "p": "gov.states.dc.dhs.ccsp.age_threshold",
      "teen_parent": "gov.states.dc.dhs.ccsp.age_threshold.teen_parent"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "monthly_age",
      "is_homeless",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Income test exemption under DC Child Care Subsidy Program (CCSP)"
  },
  "dc_ccsp_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/eligibility/dc_ccsp_eligible_child.py",
    "parameters": {
      "p": "gov.states.dc.dhs.ccsp.age_threshold",
      "disabled_child": "gov.states.dc.dhs.ccsp.age_threshold.disabled_child",
      "child": "gov.states.dc.dhs.ccsp.age_threshold.child"
    },
    "variables": [
      "monthly_age",
      "dc_ccsp_immigration_status_eligible_person",
      "is_disabled",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible child for DC Child Care Subsidy Program (CCSP)"
  },
  "dc_ccsp_qualified_need_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/eligibility/qualified_activity_or_need/dc_ccsp_qualified_need_eligible.py",
    "parameters": {
      "p": "gov.states.dc.dhs.ccsp.age_threshold",
      "disabled_child": "gov.states.dc.dhs.ccsp.age_threshold.disabled_child",
      "elderly": "gov.states.dc.dhs.ccsp.age_threshold.elderly"
    },
    "variables": [
      "monthly_age",
      "is_tax_unit_dependent",
      "is_tax_unit_head_or_spouse",
      "social_security_disability",
      "ssi",
      "is_disabled",
      "dc_ccsp_income_test_waived"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC Child Care Subsidy Program (CCSP) due to qualified need"
  },
  "dc_ccsp_qualified_activity_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/eligibility/qualified_activity_or_need/dc_ccsp_qualified_activity_eligible.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "is_full_time_student",
      "employment_income",
      "self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC Child Care Subsidy Program (CCSP) due to qualified activity"
  },
  "dc_ccsp_qualified_activity_or_need_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/dc/dhs/ccsp/eligibility/qualified_activity_or_need/dc_ccsp_qualified_activity_or_need_eligible.py",
    "parameters": {},
    "variables": [
      "dc_ccsp_qualified_need_eligible",
      "dc_ccsp_qualified_activity_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.DC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for DC Child Care Subsidy Program (CCSP) due to qualified activity or need"
  },
  "ar_taxable_income_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_taxable_income_joint.py",
    "parameters": {},
    "variables": [
      "ar_agi_joint",
      "is_tax_unit_head",
      "ar_deduction_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas taxable income when married filing jointly"
  },
  "ar_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ar_non_refundable_credits",
      "ar_income_tax_before_non_refundable_credits_unit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas income tax before refundable credits"
  },
  "ar_taxable_income_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_taxable_income_indiv.py",
    "parameters": {},
    "variables": [
      "ar_deduction_indiv",
      "ar_agi_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas taxable income when married couples are filing separately"
  },
  "ar_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ar_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "ar_refundable_credits"
    ],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas income tax"
  },
  "ar_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ar.tax.income",
      "standard": "gov.states.ar.tax.income.deductions.standard",
      "calc": "gov.states.ar.tax.income.rates.main.rate.calc",
      "deductions": "gov.states.ar.tax.income.deductions",
      "rates": "gov.states.ar.tax.income.rates",
      "rate": "gov.states.ar.tax.income.rates.main.rate",
      "main": "gov.states.ar.tax.income.rates.main"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas withheld income tax"
  },
  "ar_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas refundable credits"
  },
  "ar_income_tax_before_non_refundable_credits_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_income_tax_before_non_refundable_credits_indiv.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.rates.main",
      "calc": "gov.states.ar.tax.income.rates.main.reduction.calc",
      "rate": "gov.states.ar.tax.income.rates.main.rate",
      "reduction": "gov.states.ar.tax.income.rates.main.reduction"
    },
    "variables": [
      "ar_taxable_income_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas income tax before non refundable credits when married couples are filing separately"
  },
  "ar_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ar_personal_credits",
      "ar_cdcc",
      "ar_additional_tax_credit_for_qualified_individuals"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas non-refundable credits",
    "adds_from_parameter": "gov.states.ar.tax.income.credits.non_refundable"
  },
  "ar_taxable_capital_gains_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_taxable_capital_gains_joint.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.gross_income.capital_gains",
      "loss_cap": "gov.states.ar.tax.income.gross_income.capital_gains.loss_cap",
      "exempt": "gov.states.ar.tax.income.gross_income.capital_gains.exempt",
      "cap": "gov.states.ar.tax.income.gross_income.capital_gains.exempt.cap",
      "rate": "gov.states.ar.tax.income.gross_income.capital_gains.exempt.rate"
    },
    "variables": [
      "short_term_capital_gains",
      "filing_status",
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas taxable capital gains when married filing jointly"
  },
  "ar_income_tax_before_non_refundable_credits_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_income_tax_before_non_refundable_credits_joint.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.rates.main",
      "calc": "gov.states.ar.tax.income.rates.main.reduction.calc",
      "rate": "gov.states.ar.tax.income.rates.main.rate",
      "reduction": "gov.states.ar.tax.income.rates.main.reduction"
    },
    "variables": [
      "ar_low_income_tax_joint",
      "ar_taxable_income_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas income tax before non refundable credits when married filing jointly"
  },
  "ar_taxable_capital_gains_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_taxable_capital_gains_indiv.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.gross_income.capital_gains",
      "loss_cap": "gov.states.ar.tax.income.gross_income.capital_gains.loss_cap",
      "exempt": "gov.states.ar.tax.income.gross_income.capital_gains.exempt",
      "cap": "gov.states.ar.tax.income.gross_income.capital_gains.exempt.cap",
      "rate": "gov.states.ar.tax.income.gross_income.capital_gains.exempt.rate"
    },
    "variables": [
      "state_filing_status_if_married_filing_separately_on_same_return",
      "short_term_capital_gains",
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas taxable capital gains when married filing separately"
  },
  "ar_gross_income_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_gross_income_indiv.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "irs_employment_income",
      "self_employment_income",
      "military_service_income",
      "interest_income",
      "dividend_income",
      "alimony_income",
      "ar_taxable_capital_gains_indiv",
      "taxable_ira_distributions",
      "military_retirement_pay",
      "taxable_pension_income",
      "disability_benefits",
      "rental_income",
      "farm_rent_income",
      "unemployment_compensation"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas gross income when married filing separately",
    "adds_from_parameter": "gov.states.ar.tax.income.gross_income.sources.individual"
  },
  "ar_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ar_capped_retirement_or_disability_benefits_exemption_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas exemptions from income tax for each individual",
    "adds_from_parameter": "gov.states.ar.tax.income.exemptions.exemptions"
  },
  "ar_gross_income_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_gross_income_joint.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "irs_employment_income",
      "self_employment_income",
      "military_service_income",
      "interest_income",
      "dividend_income",
      "alimony_income",
      "ar_taxable_capital_gains_joint",
      "taxable_ira_distributions",
      "military_retirement_pay",
      "taxable_pension_income",
      "disability_benefits",
      "rental_income",
      "farm_rent_income",
      "unemployment_compensation"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas gross income when married filing jointly",
    "adds_from_parameter": "gov.states.ar.tax.income.gross_income.sources.joint"
  },
  "ar_agi_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_agi_joint.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "is_tax_unit_dependent",
      "ar_exemptions",
      "ar_gross_income_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas adjusted gross income for each individual"
  },
  "ar_income_tax_before_non_refundable_credits_unit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_income_tax_before_non_refundable_credits_unit.py",
    "parameters": {},
    "variables": [
      "ar_income_tax_before_non_refundable_credits_joint",
      "ar_income_tax_before_non_refundable_credits_indiv",
      "ar_files_separately"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas income tax before non refundable credits combined"
  },
  "ar_agi_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_agi_indiv.py",
    "parameters": {},
    "variables": [
      "ar_gross_income_indiv",
      "is_tax_unit_dependent",
      "ar_exemptions",
      "is_tax_unit_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas adjusted gross income for each individual"
  },
  "ar_files_separately": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/ar_files_separately.py",
    "parameters": {},
    "variables": [
      "ar_income_tax_before_non_refundable_credits_joint",
      "ar_income_tax_before_non_refundable_credits_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "married couple files separately on the Arkansas tax return"
  },
  "ar_deduction_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/ar_deduction_indiv.py",
    "parameters": {},
    "variables": [
      "ar_itemized_deductions_indiv",
      "ar_standard_deduction_indiv",
      "ar_tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas deduction when married couples are filing separately"
  },
  "ar_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/ar_deduction_joint.py",
    "parameters": {},
    "variables": [
      "ar_itemized_deductions_joint",
      "ar_standard_deduction_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas deduction when married filing jointly"
  },
  "ar_tax_unit_itemizes": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/ar_tax_unit_itemizes.py",
    "parameters": {},
    "variables": [
      "ar_itemized_deductions_indiv",
      "ar_standard_deduction_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the tax unit in Arkansas itemizes the deductions when married filing separately"
  },
  "ar_low_income_tax_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/low_income/ar_low_income_tax_joint.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.rates.low_income_tax_tables",
      "calc": "gov.states.ar.tax.income.rates.low_income_tax_tables.joint.two_or_more_dependents.calc",
      "single": "gov.states.ar.tax.income.rates.low_income_tax_tables.single",
      "head_of_household": "gov.states.ar.tax.income.rates.low_income_tax_tables.head_of_household",
      "surviving_spouse": "gov.states.ar.tax.income.rates.low_income_tax_tables.surviving_spouse",
      "joint": "gov.states.ar.tax.income.rates.low_income_tax_tables.joint",
      "no_or_one_dependent": "gov.states.ar.tax.income.rates.low_income_tax_tables.joint.no_or_one_dependent",
      "two_or_more_dependents": "gov.states.ar.tax.income.rates.low_income_tax_tables.joint.two_or_more_dependents"
    },
    "variables": [
      "ar_agi_joint",
      "is_tax_unit_head",
      "filing_status",
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas low income tax when married couples are filing separately"
  },
  "ar_retirement_or_disability_benefits_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/exemptions/ar_retirement_or_disability_benefits_exemption_person.py",
    "parameters": {
      "p": "gov.irs.income.exemption.traditional_distribution",
      "age_threshold": "gov.irs.income.exemption.traditional_distribution.age_threshold"
    },
    "variables": [
      "age",
      "disability_benefits",
      "is_tax_unit_head_or_spouse",
      "taxable_pension_income",
      "taxable_ira_distributions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas individual retirement or disability benefits exemption"
  },
  "ar_retirement_or_disability_benefits_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/exemptions/ar_retirement_or_disability_benefits_exemption.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ar_capped_retirement_or_disability_benefits_exemption_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas retirement or disability benefits exemption"
  },
  "ar_capped_retirement_or_disability_benefits_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/exemptions/ar_capped_retirement_or_disability_benefits_exemption_person.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.exemptions.retirement_or_disability_benefits",
      "cap": "gov.states.ar.tax.income.exemptions.retirement_or_disability_benefits.cap"
    },
    "variables": [
      "ar_military_retirement_income_person",
      "ar_retirement_or_disability_benefits_exemption_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ar_retirement_or_disability_benefits_exemption_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas capped individual retirement or disability benefits exemption"
  },
  "ar_military_retirement_income_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/exemptions/ar_military_retirement_income_person.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "military_retirement_pay"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas military retirement income for each person"
  },
  "ar_additional_tax_credit_for_qualified_individuals": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/credits/ar_additional_tax_credit_for_qualified_individuals.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ar_additional_tax_credit_for_qualified_individuals_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas additional tax credit for qualified individuals"
  },
  "ar_inflation_relief_credit_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/credits/ar_inflation_relief_credit_person.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.credits.inflationary_relief",
      "max_amount": "gov.states.ar.tax.income.credits.inflationary_relief.max_amount",
      "reduction": "gov.states.ar.tax.income.credits.inflationary_relief.reduction",
      "start": "gov.states.ar.tax.income.credits.inflationary_relief.reduction.start",
      "increment": "gov.states.ar.tax.income.credits.inflationary_relief.reduction.increment",
      "amount": "gov.states.ar.tax.income.credits.inflationary_relief.reduction.amount"
    },
    "variables": [
      "ar_taxable_income_joint",
      "filing_status",
      "ar_taxable_income_indiv",
      "ar_files_separately"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas inflation relief income-tax credit for each individual"
  },
  "ar_additional_tax_credit_for_qualified_individuals_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/credits/ar_additional_tax_credit_for_qualified_individuals_person.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.credits.additional_tax_credit_for_qualified_individuals",
      "joint_multiplier": "gov.states.ar.tax.income.credits.additional_tax_credit_for_qualified_individuals.joint_multiplier",
      "max_amount": "gov.states.ar.tax.income.credits.additional_tax_credit_for_qualified_individuals.max_amount",
      "reduction": "gov.states.ar.tax.income.credits.additional_tax_credit_for_qualified_individuals.reduction",
      "amount": "gov.states.ar.tax.income.credits.additional_tax_credit_for_qualified_individuals.reduction.amount",
      "start": "gov.states.ar.tax.income.credits.additional_tax_credit_for_qualified_individuals.reduction.start",
      "increment": "gov.states.ar.tax.income.credits.additional_tax_credit_for_qualified_individuals.reduction.increment"
    },
    "variables": [
      "filing_status",
      "is_tax_unit_head_or_spouse",
      "ar_files_separately",
      "ar_taxable_income_indiv",
      "ar_taxable_income_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas additional tax credit for qualified individuals for each individual"
  },
  "ar_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/credits/ar_cdcc.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.credits.cdcc",
      "match": "gov.states.ar.tax.income.credits.cdcc.match"
    },
    "variables": [
      "cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas Child and Dependent Care Credit",
    "description": "https://codes.findlaw.com/ar/title-26-taxation/ar-code-sect-26-51-502/"
  },
  "ar_personal_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/credits/personal/ar_personal_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ar_personal_credit_dependent",
      "ar_personal_credits_base",
      "ar_personal_credit_disabled_dependent"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas personal credits"
  },
  "ar_personal_credit_dependent": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/credits/personal/ar_personal_credit_dependent.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.credits.personal.amount",
      "base": "gov.states.ar.tax.income.credits.personal.amount.base"
    },
    "variables": [
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas personal tax credit dependent amount"
  },
  "ar_personal_credits_base": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/credits/personal/ar_personal_credits_base.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.credits.personal",
      "age_threshold": "gov.states.ar.tax.income.credits.personal.age_threshold",
      "amount": "gov.states.ar.tax.income.credits.personal.amount",
      "base": "gov.states.ar.tax.income.credits.personal.amount.base"
    },
    "variables": [
      "is_blind",
      "filing_status",
      "age",
      "ar_retirement_or_disability_benefits_exemption_person",
      "is_tax_unit_head_or_spouse",
      "is_deaf"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas base personal credits"
  },
  "ar_personal_credit_disabled_dependent": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/credits/personal/ar_personal_credit_disabled_dependent.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.credits.personal.amount",
      "disabled_dependent": "gov.states.ar.tax.income.credits.personal.amount.disabled_dependent"
    },
    "variables": [
      "is_disabled",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas disabled dependent personal tax credit amount"
  },
  "ar_medical_expense_deduction_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/itemized/ar_medical_expense_deduction_indiv.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.medical",
      "floor": "gov.irs.deductions.itemized.medical.floor"
    },
    "variables": [
      "medical_out_of_pocket_expenses",
      "ar_agi_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas medical and dental expense deduction when married filing separately"
  },
  "ar_misc_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/itemized/ar_misc_deduction_joint.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.misc",
      "floor": "gov.irs.deductions.itemized.misc.floor"
    },
    "variables": [
      "ar_agi_joint",
      "misc_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas miscellaneous deduction when married filing jointly"
  },
  "ar_misc_deduction_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/itemized/ar_misc_deduction_indiv.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.misc",
      "floor": "gov.irs.deductions.itemized.misc.floor"
    },
    "variables": [
      "ar_agi_indiv",
      "misc_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas miscellaneous deduction when married filing separately"
  },
  "ar_medical_expense_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/itemized/ar_medical_expense_deduction_joint.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.medical",
      "floor": "gov.irs.deductions.itemized.medical.floor"
    },
    "variables": [
      "ar_agi_joint",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas medical and dental expense deduction when married filing jointly"
  },
  "ar_itemized_deductions_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/itemized/ar_itemized_deductions_joint.py",
    "parameters": {
      "deductions": "gov.states.ar.tax.income.deductions.itemized.sources.joint"
    },
    "variables": [
      "is_tax_unit_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas itemized deductions when married filing jointly"
  },
  "ar_itemized_deductions_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/itemized/ar_itemized_deductions_indiv.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.deductions.itemized.sources",
      "individual": "gov.states.ar.tax.income.deductions.itemized.sources.individual"
    },
    "variables": [
      "ar_agi_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas itemized deductions when married couples are filing separately"
  },
  "ar_standard_deduction_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/standard/ar_standard_deduction_indiv.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.deductions",
      "standard": "gov.states.ar.tax.income.deductions.standard"
    },
    "variables": [
      "state_filing_status_if_married_filing_separately_on_same_return",
      "is_tax_unit_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas standard deduction when married couples are filing separately"
  },
  "ar_standard_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/standard/ar_standard_deduction_joint.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.deductions",
      "standard": "gov.states.ar.tax.income.deductions.standard"
    },
    "variables": [
      "is_tax_unit_head",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas standard deduction when married filing jointly"
  },
  "ar_post_secondary_education_tuition_deduction_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/itemized/post_secondary_education/ar_post_secondary_education_tuition_deduction_person.py",
    "parameters": {
      "p": "gov.states.ar.tax.income.deductions.itemized.tuition",
      "rate": "gov.states.ar.tax.income.deductions.itemized.tuition.rate",
      "weighted_average_tuition": "gov.states.ar.tax.income.deductions.itemized.tuition.weighted_average_tuition",
      "technical_institutes": "gov.states.ar.tax.income.deductions.itemized.tuition.weighted_average_tuition.technical_institutes",
      "four_year_college": "gov.states.ar.tax.income.deductions.itemized.tuition.weighted_average_tuition.four_year_college",
      "two_year_college": "gov.states.ar.tax.income.deductions.itemized.tuition.weighted_average_tuition.two_year_college"
    },
    "variables": [
      "technical_institution_student",
      "four_year_college_student",
      "qualified_tuition_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas person post-secondary education tuition deduction"
  },
  "ar_post_secondary_education_tuition_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ar/tax/income/deductions/itemized/post_secondary_education/ar_post_secondary_education_tuition_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ar_post_secondary_education_tuition_deduction_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Arkansas post-secondary education tuition deduction"
  },
  "me_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/me_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "me_non_refundable_credits",
      "me_income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine income tax"
  },
  "me_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/me_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "me_refundable_child_care_credit",
      "me_eitc",
      "me_sales_tax_fairness_credit",
      "me_property_tax_fairness_credit",
      "me_dependent_exemption_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine refundable credits",
    "adds_from_parameter": "gov.states.me.tax.income.credits.refundable"
  },
  "me_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/me_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "me_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "me_refundable_credits"
    ],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine income tax"
  },
  "me_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/me_withheld_income_tax.py",
    "parameters": {
      "p_irs": "gov.irs.deductions.standard",
      "p": "gov.states.me.tax.income",
      "amount": "gov.irs.deductions.standard.amount",
      "calc": "gov.states.me.tax.income.main.single.calc",
      "single": "gov.states.me.tax.income.main.single",
      "main": "gov.states.me.tax.income.main"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine withheld income tax"
  },
  "me_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/me_income_tax_before_credits.py",
    "parameters": {
      "p": "gov.states.me.tax.income.main",
      "calc": "gov.states.me.tax.income.main.separate.calc",
      "main": "gov.states.me.tax.income.main"
    },
    "variables": [
      "me_taxable_income",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine main income tax (before credits and supplemental tax)"
  },
  "me_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/me_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "me_non_refundable_child_care_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine non refundable credits",
    "adds_from_parameter": "gov.states.me.tax.income.credits.non_refundable"
  },
  "me_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/taxable_income/me_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "me_personal_exemption_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine income exemptions"
  },
  "me_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/taxable_income/me_taxable_income.py",
    "parameters": {},
    "variables": [
      "me_deductions",
      "me_exemptions",
      "me_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine taxable income",
    "description": "ME AGI less taxable income deductions"
  },
  "me_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/taxable_income/me_deductions.py",
    "parameters": {},
    "variables": [
      "me_itemized_deductions_pre_phaseout",
      "me_deduction_phaseout_percentage",
      "standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine income deductions"
  },
  "me_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/me_eitc.py",
    "parameters": {
      "p": "gov.states.me.tax.income.credits.eitc",
      "with_qualifying_child": "gov.states.me.tax.income.credits.eitc.rate.with_qualifying_child",
      "no_qualifying_child": "gov.states.me.tax.income.credits.eitc.rate.no_qualifying_child",
      "rate": "gov.states.me.tax.income.credits.eitc.rate"
    },
    "variables": [
      "eitc_child_count",
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine EITC"
  },
  "me_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/adjusted_gross_income/me_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine AGI additions",
    "description": "Additions to ME AGI over federal AGI."
  },
  "me_pension_income_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/adjusted_gross_income/me_pension_income_deduction.py",
    "parameters": {
      "deduction_cap": "gov.states.me.tax.income.agi.subtractions.pension_exclusion.cap"
    },
    "variables": [
      "military_retirement_pay",
      "filing_status",
      "social_security",
      "is_tax_unit_head",
      "pension_income",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine pension income deduction",
    "description": "Maine pension income deduction, which subtracts from federal AGI to compute Maine AGI."
  },
  "me_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/adjusted_gross_income/me_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "me_additions"
    ],
    "subtracts": [
      "me_agi_subtractions"
    ],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine adjusted gross income"
  },
  "me_agi_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/adjusted_gross_income/me_agi_subtractions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_unit_taxable_social_security",
      "us_govt_interest",
      "me_pension_income_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "ME AGI subtractions",
    "description": "Subtractions from ME AGI over federal AGI."
  },
  "me_step_4_share_of_child_care_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/child_care_credit/me_step_4_share_of_child_care_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine step 4 share of child care expenses",
    "description": "Share of child care expenses that are from programs classified as Step 4 in Maine"
  },
  "me_refundable_child_care_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/child_care_credit/me_refundable_child_care_credit.py",
    "parameters": {
      "p": "gov.states.me.tax.income.credits.child_care",
      "max_amount": "gov.states.me.tax.income.credits.child_care.max_amount"
    },
    "variables": [
      "me_child_care_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine refundable child care credit",
    "description": "Refundable portion of the Maine child care credit"
  },
  "me_child_care_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/child_care_credit/me_child_care_credit.py",
    "parameters": {
      "p": "gov.states.me.tax.income.credits.child_care",
      "non_step_4": "gov.states.me.tax.income.credits.child_care.share_of_federal_credit.non_step_4",
      "step_4": "gov.states.me.tax.income.credits.child_care.share_of_federal_credit.step_4",
      "share_of_federal_credit": "gov.states.me.tax.income.credits.child_care.share_of_federal_credit"
    },
    "variables": [
      "me_step_4_share_of_child_care_expenses",
      "cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine child care credit"
  },
  "me_non_refundable_child_care_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/child_care_credit/me_non_refundable_child_care_credit.py",
    "parameters": {},
    "variables": [
      "me_child_care_credit",
      "me_refundable_child_care_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine non-refundable child care credit",
    "description": "The portion of the Maine Child Care Credit that is non-refundable."
  },
  "me_sales_and_property_tax_fairness_credit_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/fairness/me_sales_and_property_tax_fairness_credit_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "irs_gross_income",
      "tax_exempt_social_security",
      "tax_exempt_interest_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine sales and property tax fairness credit total income",
    "adds_from_parameter": "gov.states.me.tax.income.credits.fairness.income_sources"
  },
  "me_dependent_exemption_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/dependent_exemption/me_dependent_exemption_credit.py",
    "parameters": {
      "p": "gov.states.me.tax.income.credits.dependent_exemption",
      "start": "gov.states.me.tax.income.credits.dependent_exemption.phase_out.start",
      "step": "gov.states.me.tax.income.credits.dependent_exemption.phase_out.step",
      "increment": "gov.states.me.tax.income.credits.dependent_exemption.phase_out.increment",
      "phase_out": "gov.states.me.tax.income.credits.dependent_exemption.phase_out"
    },
    "variables": [
      "me_dependent_exemption_credit_amount_person",
      "filing_status",
      "me_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine dependent exemption credit"
  },
  "me_dependent_exemption_credit_amount_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/dependent_exemption/me_dependent_exemption_credit_amount_person.py",
    "parameters": {
      "p": "gov.states.me.tax.income.credits.dependent_exemption",
      "calc": "gov.states.me.tax.income.credits.dependent_exemption.multiplier.calc",
      "amount": "gov.states.me.tax.income.credits.dependent_exemption.amount",
      "multiplier": "gov.states.me.tax.income.credits.dependent_exemption.multiplier"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ctc_qualifying_child",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine dependent exemption credit amount for each person"
  },
  "me_property_tax_fairness_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/fairness/property_tax_fairness_credit/me_property_tax_fairness_credit_eligible.py",
    "parameters": {},
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the maine property tax fairness credit"
  },
  "me_property_tax_fairness_credit_countable_rent_property_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/fairness/property_tax_fairness_credit/me_property_tax_fairness_credit_countable_rent_property_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "me_property_tax_fairness_credit_countable_rent",
      "real_estate_taxes"
    ],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Countable rent and property tax for Maine property tax fairness credit"
  },
  "me_property_tax_fairness_credit_base_cap": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/fairness/property_tax_fairness_credit/me_property_tax_fairness_credit_base_cap.py",
    "parameters": {
      "p": "gov.states.me.tax.income.credits.fairness.property_tax",
      "calc": "gov.states.me.tax.income.credits.fairness.property_tax.cap.calc",
      "income": "gov.states.me.tax.income.credits.fairness.property_tax.rate.income",
      "senior": "gov.states.me.tax.income.credits.fairness.property_tax.benefit_base.senior",
      "rate": "gov.states.me.tax.income.credits.fairness.property_tax.rate",
      "cap": "gov.states.me.tax.income.credits.fairness.property_tax.cap",
      "benefit_base": "gov.states.me.tax.income.credits.fairness.property_tax.benefit_base"
    },
    "variables": [
      "me_property_tax_fairness_credit_countable_rent_property_tax",
      "me_sales_and_property_tax_fairness_credit_income",
      "me_property_tax_fairness_credit_benefit_base",
      "greater_age_head_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine property tax fairness credit base cap"
  },
  "me_property_tax_fairness_credit_veterans_cap": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/fairness/property_tax_fairness_credit/me_property_tax_fairness_credit_veterans_cap.py",
    "parameters": {
      "p": "gov.states.me.tax.income.credits.fairness.property_tax",
      "veterans_matched": "gov.states.me.tax.income.credits.fairness.property_tax.veterans_matched"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "me_property_tax_fairness_credit_base_cap",
      "is_veteran"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Veterans cap for Maine property tax fairness credit"
  },
  "me_property_tax_fairness_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/fairness/property_tax_fairness_credit/me_property_tax_fairness_credit.py",
    "parameters": {},
    "variables": [
      "me_property_tax_fairness_credit_cap",
      "me_property_tax_fairness_credit_countable_rent_property_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "me_property_tax_fairness_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine property tax fairness credit"
  },
  "me_property_tax_fairness_credit_cap": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/fairness/property_tax_fairness_credit/me_property_tax_fairness_credit_cap.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "me_property_tax_fairness_credit_base_cap",
      "me_property_tax_fairness_credit_veterans_cap"
    ],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine property tax fairness credit cap"
  },
  "me_property_tax_fairness_credit_benefit_base": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/fairness/property_tax_fairness_credit/me_property_tax_fairness_credit_benefit_base.py",
    "parameters": {
      "p": "gov.states.me.tax.income.credits.fairness.property_tax",
      "dependent_count_threshold": "gov.states.me.tax.income.credits.fairness.property_tax.dependent_count_threshold",
      "benefit_base": "gov.states.me.tax.income.credits.fairness.property_tax.benefit_base",
      "single": "gov.states.me.tax.income.credits.fairness.property_tax.benefit_base.single",
      "head_of_household_one_child": "gov.states.me.tax.income.credits.fairness.property_tax.benefit_base.head_of_household_one_child",
      "joint_or_head_of_household_multiple_children": "gov.states.me.tax.income.credits.fairness.property_tax.benefit_base.joint_or_head_of_household_multiple_children"
    },
    "variables": [
      "filing_status",
      "ctc_qualifying_children"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine property tax fairness credit benefit base"
  },
  "me_property_tax_fairness_credit_countable_rent": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/fairness/property_tax_fairness_credit/me_property_tax_fairness_credit_countable_rent.py",
    "parameters": {
      "p": "gov.states.me.tax.income.credits.fairness.property_tax",
      "rent": "gov.states.me.tax.income.credits.fairness.property_tax.rate.rent",
      "rate": "gov.states.me.tax.income.credits.fairness.property_tax.rate"
    },
    "variables": [
      "rent",
      "utilities_included_in_rent",
      "utility_expense"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Countable rent for Maine property tax fairness credit"
  },
  "me_sales_tax_fairness_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/fairness/sales_tax_fairness_credit/me_sales_tax_fairness_credit.py",
    "parameters": {
      "p": "gov.states.me.tax.income.credits.fairness.sales_tax",
      "base": "gov.states.me.tax.income.credits.fairness.sales_tax.amount.base",
      "additional": "gov.states.me.tax.income.credits.fairness.sales_tax.amount.additional",
      "start": "gov.states.me.tax.income.credits.fairness.sales_tax.reduction.start",
      "increment": "gov.states.me.tax.income.credits.fairness.sales_tax.reduction.increment",
      "amount": "gov.states.me.tax.income.credits.fairness.sales_tax.amount",
      "reduction": "gov.states.me.tax.income.credits.fairness.sales_tax.reduction",
      "calc": "gov.states.me.tax.income.credits.fairness.sales_tax.amount.additional.surviving_spouse.calc",
      "joint": "gov.states.me.tax.income.credits.fairness.sales_tax.amount.additional.joint",
      "head_of_household": "gov.states.me.tax.income.credits.fairness.sales_tax.amount.additional.head_of_household",
      "surviving_spouse": "gov.states.me.tax.income.credits.fairness.sales_tax.amount.additional.surviving_spouse"
    },
    "variables": [
      "filing_status",
      "me_sales_and_property_tax_fairness_credit_income",
      "ctc_qualifying_children"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "me_sales_tax_fairness_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine sales tax fairness credit"
  },
  "me_sales_tax_fairness_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/credits/fairness/sales_tax_fairness_credit/me_sales_tax_fairness_credit_eligible.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "head_is_dependent_elsewhere"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Maine sales tax fairness credit"
  },
  "me_deduction_phaseout_percentage": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/taxable_income/deductions/me_deduction_phaseout_percentage.py",
    "parameters": {
      "p": "gov.states.me.tax.income.deductions.phase_out",
      "start": "gov.states.me.tax.income.deductions.phase_out.start",
      "width": "gov.states.me.tax.income.deductions.phase_out.width"
    },
    "variables": [
      "filing_status",
      "me_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine deduction phaseout percentage"
  },
  "me_itemized_deductions_pre_phaseout": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/taxable_income/deductions/me_itemized_deductions_pre_phaseout.py",
    "parameters": {
      "p": "gov.states.me.tax.income.deductions.itemized",
      "cap": "gov.states.me.tax.income.deductions.itemized.cap"
    },
    "variables": [
      "medical_expense_deduction",
      "real_estate_taxes",
      "tax_unit_itemizes",
      "itemized_deductions_less_salt"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine itemized deductions before phaseout"
  },
  "me_personal_exemption_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/me/tax/income/taxable_income/deductions/personal_exemption/me_personal_exemption_deduction.py",
    "parameters": {
      "p": "gov.states.me.tax.income.deductions.personal_exemption",
      "start": "gov.states.me.tax.income.deductions.personal_exemption.phaseout.start",
      "width": "gov.states.me.tax.income.deductions.personal_exemption.phaseout.width",
      "amount": "gov.states.me.tax.income.deductions.personal_exemption.amount",
      "phaseout": "gov.states.me.tax.income.deductions.personal_exemption.phaseout"
    },
    "variables": [
      "filing_status",
      "head_spouse_count",
      "me_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ME",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maine personal exemption deduction"
  },
  "nj_tanf_maximum_allowable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/njdhs/tanf/nj_tanf_maximum_allowable_income.py",
    "parameters": {
      "p": "gov.states.nj.njdhs.tanf.maximum_allowable_income",
      "main": "gov.states.nj.njdhs.tanf.maximum_allowable_income.main",
      "additional": "gov.states.nj.njdhs.tanf.maximum_allowable_income.additional"
    },
    "variables": [
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey TANF maximum allowable income"
  },
  "nj_tanf_countable_resources": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/njdhs/tanf/nj_tanf_countable_resources.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Countable resources for New Jersey TANF"
  },
  "nj_tanf_resources_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/njdhs/tanf/nj_tanf_resources_eligible.py",
    "parameters": {
      "p": "gov.states.nj.njdhs.tanf.eligibility.resources",
      "limit": "gov.states.nj.njdhs.tanf.eligibility.resources.limit"
    },
    "variables": [
      "nj_tanf_countable_resources"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey TANF resources eligible"
  },
  "nj_tanf_maximum_benefit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/njdhs/tanf/nj_tanf_maximum_benefit.py",
    "parameters": {
      "p": "gov.states.nj.njdhs.tanf.maximum_benefit",
      "main": "gov.states.nj.njdhs.tanf.maximum_benefit.main",
      "additional": "gov.states.nj.njdhs.tanf.maximum_benefit.additional"
    },
    "variables": [
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey TANF maximum benefit"
  },
  "nj_tanf_countable_gross_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/njdhs/tanf/income/nj_tanf_countable_gross_unearned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "veterans_benefits",
      "rental_income",
      "alimony_income",
      "dividend_income",
      "interest_income",
      "pension_income",
      "unemployment_compensation",
      "gi_cash_assistance",
      "social_security"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey TANF countable gross unearned income",
    "adds_from_parameter": "gov.states.nj.njdhs.tanf.income.unearned"
  },
  "nj_tanf_gross_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/njdhs/tanf/income/nj_tanf_gross_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey TANF gross earned income",
    "adds_from_parameter": "gov.states.nj.njdhs.tanf.income.earned"
  },
  "nj_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/nj_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "nj_non_refundable_credits",
      "nj_main_income_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey income tax"
  },
  "nj_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/nj_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey non-refundable credits"
  },
  "nj_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/nj_income_tax.py",
    "parameters": {
      "p": "gov.states.nj.tax.income",
      "filing_threshold": "gov.states.nj.tax.income.filing_threshold"
    },
    "variables": [
      "nj_income_tax_before_refundable_credits",
      "filing_status",
      "nj_refundable_credits",
      "nj_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey income tax"
  },
  "nj_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/nj_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nj_property_tax_credit",
      "nj_eitc",
      "nj_cdcc",
      "nj_ctc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey refundable credits"
  },
  "nj_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/nj_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.nj.tax.income",
      "amount": "gov.states.nj.tax.income.exemptions.regular.amount",
      "calc": "gov.states.nj.tax.income.main.single.calc",
      "regular": "gov.states.nj.tax.income.exemptions.regular",
      "single": "gov.states.nj.tax.income.main.single",
      "exemptions": "gov.states.nj.tax.income.exemptions",
      "main": "gov.states.nj.tax.income.main"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey withheld income tax"
  },
  "nj_main_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/nj_main_income_tax.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.main",
      "calc": "gov.states.nj.tax.income.main.separate.calc",
      "main": "gov.states.nj.tax.income.main"
    },
    "variables": [
      "filing_status",
      "nj_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey income tax"
  },
  "nj_taxable_income_before_property_tax_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/taxable_income/nj_taxable_income_before_property_tax_deduction.py",
    "parameters": {},
    "variables": [
      "nj_total_exemptions",
      "nj_total_deductions",
      "nj_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey taxable income before property tax deduction",
    "description": "NJ AGI less taxable income deductions, before property tax deduction (Line 39)"
  },
  "nj_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/taxable_income/nj_taxable_income.py",
    "parameters": {},
    "variables": [
      "nj_property_tax_deduction",
      "nj_taxable_income_before_property_tax_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey taxable income",
    "description": "NJ AGI less taxable income deductions (Line 42)"
  },
  "nj_medical_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/deductions/nj_medical_expense_deduction.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.deductions.medical_expenses",
      "rate": "gov.states.nj.tax.income.deductions.medical_expenses.rate"
    },
    "variables": [
      "nj_agi",
      "self_employed_health_insurance_ald",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey medical expense deduction"
  },
  "nj_total_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/deductions/nj_total_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nj_medical_expense_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey total deductions to income"
  },
  "nj_retirement_exclusion_fraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/exclusions/nj_retirement_exclusion_fraction.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.exclusions.retirement.pension",
      "calc": "gov.states.nj.tax.income.exclusions.retirement.pension.percentage.separate.calc",
      "percentage": "gov.states.nj.tax.income.exclusions.retirement.pension.percentage"
    },
    "variables": [
      "filing_status",
      "nj_total_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey retirement exclusion fraction based on total income"
  },
  "nj_other_retirement_special_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/exclusions/nj_other_retirement_special_exclusion.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.exclusions.retirement",
      "amount": "gov.states.nj.tax.income.exclusions.retirement.special_exclusion.amount",
      "special_exclusion": "gov.states.nj.tax.income.exclusions.retirement.special_exclusion"
    },
    "variables": [
      "never_eligible_for_social_security_benefits",
      "is_tax_unit_head",
      "filing_status",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey Other Retirement Special Exclusion",
    "description": "New Jersey other retirement special exclusion"
  },
  "nj_eligible_pension_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/exclusions/nj_eligible_pension_income.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.exclusions.retirement",
      "age_threshold": "gov.states.nj.tax.income.exclusions.retirement.age_threshold"
    },
    "variables": [
      "is_blind",
      "age",
      "taxable_pension_income",
      "is_tax_unit_head",
      "is_disabled",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey pension income eligible for pension exclusion",
    "description": "New Jersey pension income eligible for pension exclusion"
  },
  "nj_other_retirement_income_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/exclusions/nj_other_retirement_income_exclusion.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.exclusions.retirement",
      "max_amount": "gov.states.nj.tax.income.exclusions.retirement.max_amount",
      "age_threshold": "gov.states.nj.tax.income.exclusions.retirement.age_threshold",
      "other_retirement_income": "gov.states.nj.tax.income.exclusions.retirement.other_retirement_income",
      "earned_income_threshold": "gov.states.nj.tax.income.exclusions.retirement.other_retirement_income.earned_income_threshold"
    },
    "variables": [
      "filing_status",
      "age",
      "nj_retirement_exclusion_fraction",
      "earned_income",
      "nj_total_income",
      "is_tax_unit_head",
      "is_tax_unit_spouse",
      "nj_eligible_pension_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey Other Retirement Income Exclusion",
    "description": "New Jersey other retirement income exclusion"
  },
  "nj_pension_retirement_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/exclusions/nj_pension_retirement_exclusion.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.exclusions.retirement",
      "max_amount": "gov.states.nj.tax.income.exclusions.retirement.max_amount"
    },
    "variables": [
      "nj_retirement_exclusion_fraction",
      "filing_status",
      "nj_eligible_pension_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey Pension/Retirement Exclusion",
    "description": "New Jersey pension and retirement excludable amount if eligible (Line 28a)"
  },
  "nj_property_tax_deduction_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/property_tax/nj_property_tax_deduction_eligible.py",
    "parameters": {
      "p": "gov.states.nj.tax.income",
      "filing_threshold": "gov.states.nj.tax.income.filing_threshold"
    },
    "variables": [
      "filing_status",
      "rents",
      "nj_agi",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey property tax deduction eligibility"
  },
  "nj_property_tax_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/property_tax/nj_property_tax_deduction.py",
    "parameters": {},
    "variables": [
      "nj_potential_property_tax_deduction",
      "nj_taking_property_tax_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nj_taking_property_tax_deduction",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey property tax deduction"
  },
  "nj_taking_property_tax_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/property_tax/nj_taking_property_tax_deduction.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.main",
      "credit_amount": "gov.states.nj.tax.income.credits.property_tax.amount",
      "calc": "gov.states.nj.tax.income.main.separate.calc",
      "main": "gov.states.nj.tax.income.main"
    },
    "variables": [
      "nj_potential_property_tax_deduction",
      "filing_status",
      "cohabitating_spouses",
      "nj_taxable_income_before_property_tax_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nj_property_tax_deduction_eligible",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Household taking New Jersey property tax deduction"
  },
  "nj_potential_property_tax_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/property_tax/nj_potential_property_tax_deduction.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.deductions.property_tax",
      "limit": "gov.states.nj.tax.income.deductions.property_tax.limit",
      "qualifying_rent_fraction": "gov.states.nj.tax.income.deductions.property_tax.qualifying_rent_fraction"
    },
    "variables": [
      "rent",
      "filing_status",
      "real_estate_taxes",
      "cohabitating_spouses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nj_property_tax_deduction_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey potential property tax deduction"
  },
  "nj_dependents_attending_college_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/exemptions/nj_dependents_attending_college_exemption.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.exemptions.dependents_attending_college",
      "age_threshold": "gov.states.nj.tax.income.exemptions.dependents_attending_college.age_threshold",
      "amount": "gov.states.nj.tax.income.exemptions.dependents_attending_college.amount"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent",
      "is_full_time_college_student"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey dependents attending college exemption"
  },
  "nj_total_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/exemptions/nj_total_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nj_regular_exemption",
      "nj_senior_exemption",
      "nj_dependents_exemption",
      "nj_blind_or_disabled_exemption",
      "nj_dependents_attending_college_exemption"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey total exemption allowance"
  },
  "nj_blind_or_disabled_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/exemptions/nj_blind_or_disabled_exemption.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.exemptions.blind_or_disabled",
      "amount": "gov.states.nj.tax.income.exemptions.blind_or_disabled.amount"
    },
    "variables": [
      "filing_status",
      "disabled_spouse",
      "blind_head",
      "blind_spouse",
      "disabled_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey blind or disabled exemption"
  },
  "nj_senior_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/exemptions/nj_senior_exemption.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.exemptions.senior",
      "amount": "gov.states.nj.tax.income.exemptions.senior.amount",
      "age_threshold": "gov.states.nj.tax.income.exemptions.senior.age_threshold"
    },
    "variables": [
      "age_head",
      "filing_status",
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey senior exemption"
  },
  "nj_regular_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/exemptions/nj_regular_exemption.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.exemptions",
      "amount": "gov.states.nj.tax.income.exemptions.regular.amount",
      "regular": "gov.states.nj.tax.income.exemptions.regular"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey regular exemption"
  },
  "nj_dependents_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/exemptions/nj_dependents_exemption.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.exemptions.dependents",
      "amount": "gov.states.nj.tax.income.exemptions.dependents.amount"
    },
    "variables": [
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey qualified and other dependent children exemption"
  },
  "nj_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/adjusted_gross_income/nj_agi.py",
    "parameters": {
      "p": "gov.states.nj.tax.income",
      "all_exclusions": "gov.states.nj.tax.income.all_exclusions"
    },
    "variables": [
      "nj_total_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey adjusted gross income"
  },
  "nj_agi_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/adjusted_gross_income/nj_agi_subtractions.py",
    "parameters": {
      "p": "gov.states.nj.tax.income",
      "subtractions": "gov.states.nj.tax.income.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey subtractions from federal AGI by person",
    "description": "Subtractions from federal AGI to get NJ total income."
  },
  "nj_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/adjusted_gross_income/nj_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey additions to federal AGI by person",
    "description": "Additions to federal AGI to get NJ total income."
  },
  "nj_total_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/adjusted_gross_income/nj_total_income.py",
    "parameters": {},
    "variables": [
      "nj_agi_subtractions",
      "adjusted_gross_income_person",
      "nj_additions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey total income by person"
  },
  "nj_property_tax_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/credits/property_tax_credit/nj_property_tax_credit_eligible.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.credits.property_tax",
      "age_threshold": "gov.states.nj.tax.income.credits.property_tax.age_threshold"
    },
    "variables": [
      "greater_age_head_spouse",
      "disabled_spouse",
      "nj_property_tax_deduction_eligible",
      "blind_head",
      "real_estate_taxes",
      "blind_spouse",
      "rents",
      "disabled_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey property tax credit eligibility"
  },
  "nj_property_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/credits/property_tax_credit/nj_property_tax_credit.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.credits.property_tax",
      "amount": "gov.states.nj.tax.income.credits.property_tax.amount"
    },
    "variables": [
      "nj_taking_property_tax_deduction",
      "filing_status",
      "cohabitating_spouses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nj_property_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey property tax credit"
  },
  "nj_ctc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/credits/ctc/nj_ctc_eligible.py",
    "parameters": {},
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the New Jersey child tax credit"
  },
  "nj_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/credits/ctc/nj_ctc.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.credits.ctc",
      "calc": "gov.states.nj.tax.income.credits.ctc.amount.calc",
      "age_limit": "gov.states.nj.tax.income.credits.ctc.age_limit",
      "amount": "gov.states.nj.tax.income.credits.ctc.amount"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent",
      "nj_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nj_ctc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey Child Tax Credit"
  },
  "nj_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/credits/cdcc/nj_cdcc.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.credits.cdcc.rate",
      "calc": "gov.states.nj.tax.income.credits.cdcc.rate.calc"
    },
    "variables": [
      "cdcc_potential",
      "nj_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey CDCC",
    "description": "New Jersey Child and Dependent Care Credit",
    "bracket_parameters": {
      "p": "gov.states.nj.tax.income.credits.cdcc.rate"
    },
    "parameter_details": {
      "p": {
        "path": "gov.states.nj.tax.income.credits.cdcc.rate",
        "type": "bracket",
        "brackets": [
          {
            "threshold": -Infinity,
            "amount": 0.5
          },
          {
            "threshold": 30000,
            "amount": 0.4
          },
          {
            "threshold": 60000,
            "amount": 0.3
          },
          {
            "threshold": 90000,
            "amount": 0.2
          },
          {
            "threshold": 120000,
            "amount": 0.1
          },
          {
            "threshold": 150000,
            "amount": 0
          }
        ],
        "description": "New Jersey matches this share of the federal Child and Dependent Care Credit, depending on taxable income."
      }
    }
  },
  "nj_childless_eitc_age_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/credits/eitc/nj_childless_eitc_age_eligible.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.credits.eitc",
      "min": "gov.states.nj.tax.income.credits.eitc.eligibility.age.min",
      "age": "gov.states.nj.tax.income.credits.eitc.eligibility.age",
      "eligibility": "gov.states.nj.tax.income.credits.eitc.eligibility"
    },
    "variables": [
      "nj_eitc_income_eligible",
      "filing_status",
      "age",
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey Eligible for EITC"
  },
  "nj_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/credits/eitc/nj_eitc.py",
    "parameters": {
      "p": "gov.states.nj.tax.income.credits.eitc",
      "p_fed": "gov.irs.credits.eitc",
      "match": "gov.states.nj.tax.income.credits.eitc.match",
      "calc": "gov.irs.credits.eitc.max.calc",
      "max": "gov.irs.credits.eitc.max"
    },
    "variables": [
      "nj_childless_eitc_age_eligible",
      "eitc_reduction",
      "eitc_eligible",
      "eitc",
      "eitc_phased_in",
      "takes_up_eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey EITC"
  },
  "nj_eitc_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nj/tax/income/credits/eitc/nj_eitc_income_eligible.py",
    "parameters": {
      "p": "gov.irs.credits.eitc",
      "max_investment_income": "gov.irs.credits.eitc.phase_out.max_investment_income",
      "joint_bonus": "gov.irs.credits.eitc.phase_out.joint_bonus",
      "rate": "gov.irs.credits.eitc.phase_out.rate",
      "start": "gov.irs.credits.eitc.phase_out.start",
      "calc": "gov.irs.credits.eitc.phase_out.start.calc",
      "phase_out": "gov.irs.credits.eitc.phase_out",
      "max": "gov.irs.credits.eitc.max"
    },
    "variables": [
      "net_investment_income",
      "tax_exempt_interest_income",
      "tax_unit_is_joint",
      "adjusted_gross_income",
      "net_capital_gains",
      "loss_limited_net_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NJ",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "New Jersey Eligible for EITC"
  },
  "nm_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/nm_taxable_income.py",
    "parameters": {},
    "variables": [
      "nm_exemptions",
      "nm_other_deductions_and_exemptions",
      "adjusted_gross_income",
      "nm_additions",
      "nm_salt_add_back",
      "nm_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico taxable income"
  },
  "nm_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/nm_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nm_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "nm_refundable_credits"
    ],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico income tax"
  },
  "nm_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/nm_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico non-refundable credits"
  },
  "nm_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/nm_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "nm_income_tax_before_non_refundable_credits",
      "nm_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico income tax before refundable credits"
  },
  "nm_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/nm_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nm_cdcc",
      "nm_ctc",
      "nm_medical_expense_credit",
      "nm_eitc",
      "nm_low_income_comprehensive_tax_rebate",
      "nm_property_tax_rebate"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico refundable credits",
    "adds_from_parameter": "gov.states.nm.tax.income.credits.refundable"
  },
  "nm_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/nm_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico additions to federal AGI"
  },
  "nm_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/nm_withheld_income_tax.py",
    "parameters": {
      "p_irs": "gov.irs.deductions.standard",
      "p": "gov.states.nm.tax.income",
      "amount": "gov.irs.deductions.standard.amount",
      "calc": "gov.states.nm.tax.income.main.single.calc",
      "single": "gov.states.nm.tax.income.main.single",
      "main": "gov.states.nm.tax.income.main"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico withheld income tax"
  },
  "nm_modified_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/nm_modified_gross_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_unit_social_security",
      "tax_unit_unemployment_compensation",
      "capital_gains",
      "tanf",
      "ssi",
      "interest_income",
      "dividend_income",
      "alimony_income",
      "child_support_received",
      "rental_income",
      "pension_income",
      "unemployment_compensation",
      "irs_employment_income",
      "self_employment_income",
      "veterans_benefits"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico modified gross income",
    "adds_from_parameter": "gov.states.nm.tax.income.modified_gross_income"
  },
  "nm_other_deductions_and_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/nm_other_deductions_and_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "us_govt_interest",
      "investment_in_529_plan",
      "military_service_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico other income deductions and exemptions",
    "adds_from_parameter": "gov.states.nm.tax.income.other_deductions_and_exemptions"
  },
  "nm_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/nm_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.main",
      "calc": "gov.states.nm.tax.income.main.head_of_household.calc",
      "main": "gov.states.nm.tax.income.main"
    },
    "variables": [
      "filing_status",
      "nm_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico income tax before non-refundable credits"
  },
  "nm_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/deductions/nm_deductions.py",
    "parameters": {},
    "variables": [
      "nm_medical_care_expense_deduction",
      "standard_deduction",
      "total_itemized_taxable_income_deductions",
      "nm_deduction_for_certain_dependents",
      "nm_net_capital_gains_deduction",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico income deductions"
  },
  "nm_net_capital_gains_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/deductions/nm_net_capital_gains_deduction.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.deductions.net_capital_gains",
      "uncapped_element_percent": "gov.states.nm.tax.income.deductions.net_capital_gains.uncapped_element_percent",
      "capped_element": "gov.states.nm.tax.income.deductions.net_capital_gains.capped_element",
      "calc": "gov.states.nm.tax.income.deductions.net_capital_gains.capped_element.calc"
    },
    "variables": [
      "filing_status",
      "capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico net capital gain deduction"
  },
  "nm_salt_add_back": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/deductions/nm_salt_add_back.py",
    "parameters": {
      "p": "gov.irs.deductions",
      "cap": "gov.irs.deductions.itemized.salt_and_real_estate.cap",
      "salt_and_real_estate": "gov.irs.deductions.itemized.salt_and_real_estate",
      "itemized": "gov.irs.deductions.itemized"
    },
    "variables": [
      "filing_status",
      "standard_deduction",
      "real_estate_taxes",
      "itemized_deductions_less_salt",
      "state_and_local_sales_or_income_tax",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico salt addback"
  },
  "nm_medical_care_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/deductions/nm_medical_care_expense_deduction.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.deductions.medical_care_expense",
      "calc": "gov.states.nm.tax.income.deductions.medical_care_expense.surviving_spouse.calc",
      "medical_care_expense": "gov.states.nm.tax.income.deductions.medical_care_expense"
    },
    "variables": [
      "filing_status",
      "medical_out_of_pocket_expenses",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico medical care expense deduction"
  },
  "nm_armed_forces_retirement_pay_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/exemptions/nm_armed_forces_retirement_pay_exemption_person.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.exemptions.armed_forces_retirement_pay",
      "cap": "gov.states.nm.tax.income.exemptions.armed_forces_retirement_pay.cap"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "military_retirement_pay"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico armed forces retirement pay exemption per person "
  },
  "nm_social_security_income_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/exemptions/nm_social_security_income_exemption.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.exemptions.social_security_income",
      "income_limit": "gov.states.nm.tax.income.exemptions.social_security_income.income_limit"
    },
    "variables": [
      "tax_unit_taxable_social_security",
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico social security income exemption"
  },
  "nm_medical_expense_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/exemptions/nm_medical_expense_exemption.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.exemptions.unreimbursed_medical_care_expense",
      "min_expenses": "gov.states.nm.tax.income.exemptions.unreimbursed_medical_care_expense.min_expenses",
      "amount": "gov.states.nm.tax.income.exemptions.unreimbursed_medical_care_expense.amount",
      "age_eligibility": "gov.states.nm.tax.income.exemptions.unreimbursed_medical_care_expense.age_eligibility"
    },
    "variables": [
      "filing_status",
      "age",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico unreimbursed medical expense care exemption"
  },
  "nm_hundred_year_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/exemptions/nm_hundred_year_exemption.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.exemptions.hundred_year",
      "age_eligibility": "gov.states.nm.tax.income.exemptions.hundred_year.age_eligibility"
    },
    "variables": [
      "filing_status",
      "age_head",
      "age_spouse",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico hundred year exemption"
  },
  "nm_low_and_middle_income_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/exemptions/nm_low_and_middle_income_exemption.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.exemptions.low_and_middle_income",
      "income_threshold": "gov.states.nm.tax.income.exemptions.low_and_middle_income.reduction.income_threshold",
      "rate": "gov.states.nm.tax.income.exemptions.low_and_middle_income.reduction.rate",
      "income_limit": "gov.states.nm.tax.income.exemptions.low_and_middle_income.income_limit",
      "max_amount": "gov.states.nm.tax.income.exemptions.low_and_middle_income.max_amount",
      "reduction": "gov.states.nm.tax.income.exemptions.low_and_middle_income.reduction"
    },
    "variables": [
      "filing_status",
      "exemptions_count",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico low- and middle-income exemption"
  },
  "nm_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/exemptions/nm_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nm_aged_blind_exemption",
      "nm_hundred_year_exemption",
      "nm_low_and_middle_income_exemption",
      "nm_medical_expense_exemption",
      "nm_social_security_income_exemption"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico income exemptions",
    "adds_from_parameter": "gov.states.nm.tax.income.exemptions.exemptions"
  },
  "nm_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/credits/nm_ctc.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.credits.ctc",
      "calc": "gov.states.nm.tax.income.credits.ctc.amount.calc",
      "amount": "gov.states.nm.tax.income.credits.ctc.amount"
    },
    "variables": [
      "filing_status",
      "eitc_child_count",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico child income tax credit"
  },
  "nm_medical_expense_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/credits/nm_medical_expense_credit.py",
    "parameters": {
      "pcredits": "gov.states.nm.tax.income.credits",
      "unreimbursed_medical_care_expense": "gov.states.nm.tax.income.credits.unreimbursed_medical_care_expense"
    },
    "variables": [
      "filing_status",
      "head_is_dependent_elsewhere",
      "age",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico unreimbursed medical expense care credit"
  },
  "nm_cdcc_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/credits/cdcc/nm_cdcc_eligible_child.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.credits.cdcc",
      "age_eligible": "gov.states.nm.tax.income.credits.cdcc.age_eligible"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible child for the New Mexico dependent child day care credit"
  },
  "nm_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/credits/cdcc/nm_cdcc.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.credits.cdcc",
      "divisor": "gov.states.nm.tax.income.credits.cdcc.divisor"
    },
    "variables": [
      "filing_status",
      "income_tax_before_credits",
      "nm_cdcc_max_amount",
      "cdcc_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nm_cdcc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico dependent child day care credit"
  },
  "nm_cdcc_max_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/credits/cdcc/nm_cdcc_max_amount.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.credits.cdcc",
      "per_child": "gov.states.nm.tax.income.credits.cdcc.max_amount.per_child",
      "total": "gov.states.nm.tax.income.credits.cdcc.max_amount.total",
      "max_amount": "gov.states.nm.tax.income.credits.cdcc.max_amount",
      "rate": "gov.states.nm.tax.income.credits.cdcc.rate"
    },
    "variables": [
      "nm_cdcc_eligible_child",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nm_cdcc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico maximum credit for dependent child day care credit"
  },
  "nm_cdcc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/credits/cdcc/nm_cdcc_eligible.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.credits.cdcc",
      "full_time_hours": "gov.states.nm.tax.income.credits.cdcc.full_time_hours",
      "income_limit_as_fraction_of_minimum_wage": "gov.states.nm.tax.income.credits.cdcc.income_limit_as_fraction_of_minimum_wage"
    },
    "variables": [
      "filing_status",
      "nm_modified_gross_income",
      "earned_income",
      "tanf",
      "is_tax_unit_head",
      "head_is_dependent_elsewhere",
      "is_disabled",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible household for the New Mexico dependent child day care credit"
  },
  "nm_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/credits/eitc/nm_eitc.py",
    "parameters": {
      "rate": "gov.states.nm.tax.income.credits.eitc.match"
    },
    "variables": [
      "eitc_phased_in",
      "eitc_maximum",
      "nm_eitc_eligible",
      "eitc_reduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico EITC"
  },
  "nm_eitc_demographic_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/credits/eitc/nm_eitc_demographic_eligible.py",
    "parameters": {},
    "variables": [
      "tax_unit_children",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets demographic eligibility for New Mexico EITC"
  },
  "nm_eitc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/credits/eitc/nm_eitc_eligible.py",
    "parameters": {},
    "variables": [
      "eitc_investment_income_eligible",
      "filing_status",
      "nm_eitc_demographic_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for New Mexico EITC"
  },
  "nm_deduction_for_certain_dependents_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/deductions/certain_dependents/nm_deduction_for_certain_dependents_eligible.py",
    "parameters": {},
    "variables": [
      "exemptions",
      "head_is_dependent_elsewhere"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligibility for New Mexico deduction for certain dependents"
  },
  "nm_deduction_for_certain_dependents": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/deductions/certain_dependents/nm_deduction_for_certain_dependents.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.deductions.certain_dependents",
      "amount": "gov.states.nm.tax.income.deductions.certain_dependents.amount"
    },
    "variables": [
      "filing_status",
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nm_deduction_for_certain_dependents_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico deduction for certain dependents"
  },
  "nm_2021_income_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/rebates/2021_rebate/nm_2021_income_rebate.py",
    "parameters": {
      "rebates": "gov.states.nm.tax.income.rebates"
    },
    "variables": [
      "filing_status",
      "head_is_dependent_elsewhere",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico 2021 income tax rebate"
  },
  "nm_additional_2021_income_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/rebates/2021_rebate/nm_additional_2021_income_rebate.py",
    "parameters": {
      "rebates": "gov.states.nm.tax.income.rebates"
    },
    "variables": [
      "filing_status",
      "head_is_dependent_elsewhere"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico additional 2021 income tax rebate"
  },
  "nm_supplemental_2021_income_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/rebates/2021_rebate/nm_supplemental_2021_income_rebate.py",
    "parameters": {
      "rebates": "gov.states.nm.tax.income.rebates"
    },
    "variables": [
      "filing_status",
      "head_is_dependent_elsewhere"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico supplemental 2021 income tax rebate"
  },
  "nm_low_income_comprehensive_tax_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/rebates/low_income_comprehensive/nm_low_income_comprehensive_tax_rebate.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.rebates.low_income",
      "divisor": "gov.states.nm.tax.income.rebates.low_income.divisor",
      "amount": "gov.states.nm.tax.income.rebates.low_income.amount",
      "calc": "gov.states.nm.tax.income.rebates.low_income.amount.six_exemptions.calc"
    },
    "variables": [
      "nm_low_income_comprehensive_tax_rebate_exemptions",
      "filing_status",
      "nm_modified_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico low income comprehensive tax rebate"
  },
  "nm_low_income_comprehensive_tax_rebate_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/rebates/low_income_comprehensive/nm_low_income_comprehensive_tax_rebate_exemptions.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.rebates.low_income.exemptions",
      "calc": "gov.states.nm.tax.income.rebates.low_income.exemptions.aged.calc",
      "blind": "gov.states.nm.tax.income.rebates.low_income.exemptions.blind",
      "aged": "gov.states.nm.tax.income.rebates.low_income.exemptions.aged"
    },
    "variables": [
      "age_head",
      "age_spouse",
      "blind_head",
      "exemptions_count",
      "blind_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico low income comprehensive tax rebate exemptions"
  },
  "nm_property_tax_rebate_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/rebates/property_tax_rebate/nm_property_tax_rebate_eligible.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.rebates.property_tax",
      "age_eligibility": "gov.states.nm.tax.income.rebates.property_tax.age_eligibility",
      "income_threshold": "gov.states.nm.tax.income.rebates.property_tax.income_threshold"
    },
    "variables": [
      "age_head",
      "age_spouse",
      "nm_modified_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NM",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the New Mexico property tax rebate"
  },
  "nm_property_tax_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nm/tax/income/rebates/property_tax_rebate/nm_property_tax_rebate.py",
    "parameters": {
      "p": "gov.states.nm.tax.income.rebates.property_tax",
      "rent_rate": "gov.states.nm.tax.income.rebates.property_tax.rent_rate",
      "max_amount": "gov.states.nm.tax.income.rebates.property_tax.max_amount",
      "max_property_tax_liability": "gov.states.nm.tax.income.rebates.property_tax.max_property_tax_liability",
      "calc": "gov.states.nm.tax.income.rebates.property_tax.max_property_tax_liability.calc"
    },
    "variables": [
      "rent",
      "filing_status",
      "real_estate_taxes",
      "nm_modified_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nm_property_tax_rebate_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Mexico property tax rebate"
  },
  "nd_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/nd_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nd_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "nd_refundable_credits"
    ],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota income tax"
  },
  "nd_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/nd_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "nd_income_tax_before_credits",
      "nd_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota income tax before refundable credits"
  },
  "nd_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/nd_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "form_4972_lumpsum_distributions"
    ],
    "subtracts": [],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota additions to federal taxable income",
    "adds_from_parameter": "gov.states.nd.tax.income.taxable_income.additions.sources"
  },
  "nd_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/nd_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nd_mpc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota nonrefundable income tax credits",
    "adds_from_parameter": "gov.states.nd.tax.income.credits.nonrefundable"
  },
  "nd_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/nd_income_tax_before_credits.py",
    "parameters": {
      "p": "gov.states.nd.tax.income.rates",
      "calc": "gov.states.nd.tax.income.rates.head_of_household.calc",
      "rates": "gov.states.nd.tax.income.rates"
    },
    "variables": [
      "nd_taxable_income",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota income tax before credits"
  },
  "nd_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/nd_withheld_income_tax.py",
    "parameters": {
      "p_irs": "gov.irs.deductions.standard",
      "p": "gov.states.nd.tax.income",
      "amount": "gov.irs.deductions.standard.amount",
      "calc": "gov.states.nd.tax.income.rates.single.calc",
      "single": "gov.states.nd.tax.income.rates.single",
      "rates": "gov.states.nd.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota withheld income tax"
  },
  "nd_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/nd_taxable_income.py",
    "parameters": {},
    "variables": [
      "nd_additions",
      "taxable_income_deductions",
      "nd_subtractions",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota taxable income"
  },
  "nd_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/nd_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota refundable income tax credits"
  },
  "nd_qdiv_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/subtractions/nd_qdiv_subtraction.py",
    "parameters": {
      "p": "gov.states.nd.tax.income",
      "qdiv_fraction": "gov.states.nd.tax.income.taxable_income.subtractions.qdiv_fraction",
      "subtractions": "gov.states.nd.tax.income.taxable_income.subtractions",
      "taxable_income": "gov.states.nd.tax.income.taxable_income"
    },
    "variables": [
      "qualified_dividend_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota qualified dividends subtraction from federal taxable income"
  },
  "nd_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/subtractions/nd_subtractions.py",
    "parameters": {
      "p": "gov.states.nd.tax.income.taxable_income.subtractions",
      "sources": "gov.states.nd.tax.income.taxable_income.subtractions.sources"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota subtractions from federal taxable income"
  },
  "nd_ltcg_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/subtractions/nd_ltcg_subtraction.py",
    "parameters": {
      "p": "gov.states.nd.tax.income",
      "ltcg_fraction": "gov.states.nd.tax.income.taxable_income.subtractions.ltcg_fraction",
      "subtractions": "gov.states.nd.tax.income.taxable_income.subtractions",
      "taxable_income": "gov.states.nd.tax.income.taxable_income"
    },
    "variables": [
      "short_term_capital_gains",
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota long-term capital gains subtraction from federal taxable income"
  },
  "nd_rtrc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/credits/nd_rtrc.py",
    "parameters": {
      "p": "gov.states.nd.tax.income.credits",
      "joint_amount": "gov.states.nd.tax.income.credits.resident_tax_relief.joint_amount",
      "other_amount": "gov.states.nd.tax.income.credits.resident_tax_relief.other_amount",
      "resident_tax_relief": "gov.states.nd.tax.income.credits.resident_tax_relief"
    },
    "variables": [
      "nd_income_tax_before_credits",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota resident-tax-relief nonrefundable credit amount"
  },
  "nd_mpc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nd/tax/income/credits/nd_mpc.py",
    "parameters": {
      "p": "gov.states.nd.tax.income.credits",
      "tax": "gov.states.nd.tax.income.rates",
      "taxable_income_threshold": "gov.states.nd.tax.income.credits.marriage_penalty.taxable_income_threshold",
      "qualified_income_threshold": "gov.states.nd.tax.income.credits.marriage_penalty.qualified_income_threshold",
      "taxable_income_base": "gov.states.nd.tax.income.credits.marriage_penalty.taxable_income_base",
      "maximum": "gov.states.nd.tax.income.credits.marriage_penalty.maximum",
      "calc": "gov.states.nd.tax.income.rates.single.calc",
      "marriage_penalty": "gov.states.nd.tax.income.credits.marriage_penalty",
      "single": "gov.states.nd.tax.income.rates.single"
    },
    "variables": [
      "nd_income_tax_before_credits",
      "filing_status",
      "self_employment_tax_ald_person",
      "self_employment_income",
      "nd_taxable_income",
      "taxable_pension_income",
      "irs_employment_income",
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.ND",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Dakota marriage-penalty nonrefundable credit amount"
  },
  "nc_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/nc_income_tax.py",
    "parameters": {},
    "variables": [
      "nc_use_tax",
      "nc_non_refundable_credits",
      "nc_income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina income tax"
  },
  "nc_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/nc_income_tax_before_credits.py",
    "parameters": {
      "p": "gov.states.nc.tax.income",
      "rate": "gov.states.nc.tax.income.rate"
    },
    "variables": [
      "nc_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina income tax before credits"
  },
  "nc_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/nc_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina additions to the adjusted gross income"
  },
  "nc_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/nc_taxable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "nc_additions"
    ],
    "subtracts": [
      "nc_deductions"
    ],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina taxable income"
  },
  "nc_use_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/nc_use_tax.py",
    "parameters": {
      "p": "gov.states.nc.tax.use_tax",
      "calc": "gov.states.nc.tax.use_tax.additional.calc",
      "base": "gov.states.nc.tax.use_tax.base",
      "additional": "gov.states.nc.tax.use_tax.additional"
    },
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina use tax"
  },
  "nc_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/nc_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.nc.tax.income",
      "amount": "gov.states.nc.tax.income.deductions.standard.amount",
      "rate": "gov.states.nc.tax.income.rate",
      "deductions": "gov.states.nc.tax.income.deductions",
      "standard": "gov.states.nc.tax.income.deductions.standard"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina withheld income tax"
  },
  "nc_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/nc_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nc_ctc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina non-refundable credits",
    "adds_from_parameter": "gov.states.nc.tax.income.credits.non_refundable"
  },
  "nc_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/deductions/nc_itemized_deductions.py",
    "parameters": {
      "pirs": "gov.irs.deductions.itemized.salt_and_real_estate",
      "pco": "gov.states.nc.tax.income.deductions.itemized.cap",
      "cap": "gov.irs.deductions.itemized.salt_and_real_estate.cap",
      "mortgage_and_property_tax": "gov.states.nc.tax.income.deductions.itemized.cap.mortgage_and_property_tax"
    },
    "variables": [
      "filing_status",
      "mortgage_interest",
      "charitable_deduction",
      "real_estate_taxes",
      "medical_expense_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina itemized deductions"
  },
  "nc_child_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/deductions/nc_child_deduction.py",
    "parameters": {
      "p": "gov.states.nc.tax.income.deductions.child",
      "calc": "gov.states.nc.tax.income.deductions.child.head_of_household.calc",
      "child": "gov.states.nc.tax.income.deductions.child"
    },
    "variables": [
      "filing_status",
      "ctc_qualifying_children",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina child deduction"
  },
  "nc_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/deductions/nc_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "us_govt_interest",
      "nc_standard_or_itemized_deductions",
      "nc_child_deduction",
      "taxable_social_security",
      "nc_military_retirement_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina deductions",
    "adds_from_parameter": "gov.states.nc.tax.income.deductions.deductions"
  },
  "nc_standard_or_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/deductions/nc_standard_or_itemized_deductions.py",
    "parameters": {},
    "variables": [
      "nc_standard_deduction",
      "nc_itemized_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina standard or itemized deductions amount"
  },
  "nc_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/deductions/nc_standard_deduction.py",
    "parameters": {
      "p": "gov.states.nc.tax.income",
      "amount": "gov.states.nc.tax.income.deductions.standard.amount",
      "standard": "gov.states.nc.tax.income.deductions.standard",
      "deductions": "gov.states.nc.tax.income.deductions"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina standard deduction"
  },
  "nc_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/credits/nc_ctc.py",
    "parameters": {
      "p": "gov.states.nc.tax.income.credits.ctc",
      "calc": "gov.states.nc.tax.income.credits.ctc.separate.calc",
      "ctc": "gov.states.nc.tax.income.credits.ctc"
    },
    "variables": [
      "filing_status",
      "ctc_qualifying_children",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina credit for children"
  },
  "nc_military_retirement_deduction_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/deductions/military_retirement/nc_military_retirement_deduction_eligible.py",
    "parameters": {
      "p": "gov.states.nc.tax.income.deductions.military_retirement",
      "minimum_years": "gov.states.nc.tax.income.deductions.military_retirement.minimum_years"
    },
    "variables": [
      "is_permanently_disabled_veteran",
      "years_in_military"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina military retirement deduction eligible"
  },
  "nc_military_retirement_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/tax/income/deductions/military_retirement/nc_military_retirement_deduction.py",
    "parameters": {
      "p": "gov.states.nc.tax.income.deductions.military_retirement",
      "fraction": "gov.states.nc.tax.income.deductions.military_retirement.fraction"
    },
    "variables": [
      "military_retirement_pay"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nc_military_retirement_deduction_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina military retirement deduction"
  },
  "nc_scca_market_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/scca/nc_scca_market_rate.py",
    "parameters": {
      "p": "gov.states.nc.ncdhhs.scca",
      "childcare_market_rates": "gov.states.nc.ncdhhs.scca.childcare_market_rates"
    },
    "variables": [
      "nc_scca_age_group",
      "county_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nc_scca_child_age_eligible",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina Subsidized Child Care Assistance (SCCA) program market rate"
  },
  "nc_scca_parent_fee": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/scca/nc_scca_parent_fee.py",
    "parameters": {
      "p": "gov.states.nc.ncdhhs.scca",
      "value": "gov.states.nc.ncdhhs.scca.parent_fee_rate.value",
      "parent_fee_rate": "gov.states.nc.ncdhhs.scca.parent_fee_rate"
    },
    "variables": [
      "nc_scca_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina Subsidized Child Care Assistance Program parent fee"
  },
  "nc_scca_age_group": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/scca/nc_scca_age_group.py",
    "parameters": {
      "p": "gov.states.nc.ncdhhs.scca",
      "calc": "gov.states.nc.ncdhhs.scca.age.group.calc",
      "group": "gov.states.nc.ncdhhs.scca.age.group",
      "age": "gov.states.nc.ncdhhs.scca.age"
    },
    "variables": [
      "age",
      "nc_scca_is_school_age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina SCCA age group"
  },
  "nc_scca_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/scca/nc_scca_countable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income",
      "pension_income",
      "veterans_benefits",
      "unemployment_compensation",
      "disability_benefits",
      "workers_compensation",
      "social_security",
      "retirement_distributions",
      "rental_income",
      "child_support_received",
      "alimony_income",
      "dividend_income",
      "interest_income",
      "miscellaneous_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina Subsidized Child Care Assistance program countable income",
    "adds_from_parameter": "gov.states.nc.ncdhhs.scca.income.sources"
  },
  "nc_scca_is_school_age": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/scca/nc_scca_is_school_age.py",
    "parameters": {
      "p": "gov.states.nc.ncdhhs.scca.age",
      "school": "gov.states.nc.ncdhhs.scca.age.school"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina SCCA school age determination"
  },
  "nc_scca_child_age_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/scca/nc_scca_child_age_eligible.py",
    "parameters": {
      "p": "gov.states.nc.ncdhhs.scca.age.limit",
      "disabled": "gov.states.nc.ncdhhs.scca.age.limit.disabled",
      "non_disabled": "gov.states.nc.ncdhhs.scca.age.limit.non_disabled"
    },
    "variables": [
      "age",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina child age eligibility for Subsidized Child Care Assistance (SCCA) program"
  },
  "nc_scca_has_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/scca/nc_scca_has_eligible_child.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nc_scca_child_age_eligible"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Any eligible child for North Carolina Subsidized Child Care Assistance program"
  },
  "nc_scca_maximum_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/scca/nc_scca_maximum_payment.py",
    "parameters": {},
    "variables": [
      "nc_scca_market_rate",
      "nc_scca_parent_fee"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nc_scca_entry_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina Subsidized Child Care Assistance Program maximum payment"
  },
  "nc_scca": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/scca/nc_scca.py",
    "parameters": {},
    "variables": [
      "spm_unit_pre_subsidy_childcare_expenses",
      "nc_scca_maximum_payment",
      "nc_scca_parent_fee"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nc_scca_entry_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina Subsidized Child Care Assistance Program"
  },
  "nc_scca_fpg_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/scca/nc_scca_fpg_rate.py",
    "parameters": {
      "p": "gov.states.nc.ncdhhs.scca",
      "preschool": "gov.states.nc.ncdhhs.scca.entry.fpg_limit.preschool",
      "school_age": "gov.states.nc.ncdhhs.scca.entry.fpg_limit.school_age",
      "fpg_limit": "gov.states.nc.ncdhhs.scca.entry.fpg_limit",
      "entry": "gov.states.nc.ncdhhs.scca.entry"
    },
    "variables": [
      "is_child",
      "nc_scca_child_age_eligible",
      "is_disabled",
      "nc_scca_is_school_age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina Subsidized Child Care Assistance (SCCA) program income limits compared to the FPL"
  },
  "nc_tanf_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/tanf/nc_tanf_eligible.py",
    "parameters": {},
    "variables": [
      "nc_tanf_income_eligible",
      "nc_demographic_tanf_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina TANF eligible"
  },
  "nc_demographic_tanf_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/tanf/nc_demographic_tanf_eligible.py",
    "parameters": {
      "age_limit": "gov.states.nc.ncdhhs.tanf.need_standard.age_limit"
    },
    "variables": [
      "age",
      "nc_tanf_household_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina Demographic eligibility for TANF",
    "description": "Whether any person in a family applying for the Temporary Assistance for Needy Families program meets demographic requirements."
  },
  "nc_tanf_household_size": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/tanf/nc_tanf_household_size.py",
    "parameters": {},
    "variables": [
      "ssi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "NC TANF household size excludes SSI recipients"
  },
  "nc_tanf": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/tanf/nc_tanf.py",
    "parameters": {
      "payment_percentage": "gov.states.nc.ncdhhs.tanf.need_standard.payment_percentage"
    },
    "variables": [
      "nc_tanf_reduced_need_standard"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nc_tanf_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina TANF"
  },
  "nc_tanf_reduced_need_standard": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/tanf/nc_tanf_reduced_need_standard.py",
    "parameters": {},
    "variables": [
      "nc_tanf_countable_gross_unearned_income",
      "nc_tanf_countable_earned_income",
      "nc_tanf_need_standard"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina TANF reduced need standard"
  },
  "nc_tanf_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/tanf/nc_tanf_income_eligible.py",
    "parameters": {
      "monthly_allowed_difference": "gov.states.nc.ncdhhs.tanf.need_standard.average_reduced_need_standard_thresold"
    },
    "variables": [
      "nc_tanf_reduced_need_standard",
      "nc_tanf_household_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nc_demographic_tanf_eligible",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina TANF income eligible"
  },
  "nc_tanf_need_standard": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/tanf/nc_tanf_need_standard.py",
    "parameters": {
      "p": "gov.states.nc.ncdhhs.tanf.need_standard",
      "main": "gov.states.nc.ncdhhs.tanf.need_standard.main",
      "additional_person": "gov.states.nc.ncdhhs.tanf.need_standard.additional_person"
    },
    "variables": [
      "nc_tanf_household_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina TANF need standard"
  },
  "nc_tanf_countable_gross_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/tanf/income/nc_tanf_countable_gross_unearned_income.py",
    "parameters": {
      "p": "gov.states.nc.ncdhhs.tanf.income",
      "unearned": "gov.states.nc.ncdhhs.tanf.income.unearned"
    },
    "variables": [
      "child_support_received",
      "is_tanf_enrolled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina TANF countable gross unearned income"
  },
  "nc_tanf_countable_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/tanf/income/nc_tanf_countable_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina TANF countable earned income",
    "adds_from_parameter": "gov.states.nc.ncdhhs.tanf.income.earned"
  },
  "nc_scca_entry_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/scca/entry/nc_scca_entry_income_eligible.py",
    "parameters": {},
    "variables": [
      "nc_scca_fpg_rate",
      "nc_scca_countable_income",
      "spm_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina entry income eligibility for Subsidized Child Care Assistance program"
  },
  "nc_scca_entry_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nc/ncdhhs/scca/entry/nc_scca_entry_eligible.py",
    "parameters": {},
    "variables": [
      "nc_scca_entry_income_eligible",
      "nc_scca_has_eligible_child"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "North Carolina entry eligibility for Subsidized Child Care Assistance Program"
  },
  "pa_use_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/pa_use_tax.py",
    "parameters": {
      "p": "gov.states.pa.tax.use_tax",
      "rest_of_pa": "gov.states.pa.tax.use_tax.main.rest_of_pa",
      "philadelphia_county": "gov.states.pa.tax.use_tax.main.philadelphia_county",
      "allegheny_county": "gov.states.pa.tax.use_tax.main.allegheny_county",
      "calc": "gov.states.pa.tax.use_tax.main.allegheny_county.calc",
      "threshold": "gov.states.pa.tax.use_tax.higher.threshold",
      "rate": "gov.states.pa.tax.use_tax.higher.rate",
      "cap": "gov.states.pa.tax.use_tax.higher.cap",
      "higher": "gov.states.pa.tax.use_tax.higher",
      "main": "gov.states.pa.tax.use_tax.main"
    },
    "variables": [
      "pa_total_taxable_income",
      "county_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "PA Use Tax"
  },
  "pa_refundable_tax_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/pa_refundable_tax_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "pa_cdcc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pennsylvania refundable tax credits",
    "adds_from_parameter": "gov.states.pa.tax.income.credits.refundable"
  },
  "pa_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/pa_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "pa_income_tax_after_forgiveness",
      "pa_use_tax"
    ],
    "subtracts": [
      "pa_refundable_tax_credits"
    ],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pennsylvania income tax"
  },
  "pa_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/pa_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.pa.tax.income",
      "rate": "gov.states.pa.tax.income.rate"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pennsylvania withheld income tax"
  },
  "pa_income_tax_after_forgiveness": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/forgiveness/pa_income_tax_after_forgiveness.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "pa_income_tax_before_forgiveness"
    ],
    "subtracts": [
      "pa_tax_forgiveness_amount"
    ],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "PA income tax after forgiveness"
  },
  "pa_tax_forgiveness_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/forgiveness/pa_tax_forgiveness_amount.py",
    "parameters": {},
    "variables": [
      "pa_income_tax_before_forgiveness",
      "pa_tax_forgiveness_rate"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "PA forgiveness amount"
  },
  "pa_income_tax_before_forgiveness": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/forgiveness/pa_income_tax_before_forgiveness.py",
    "parameters": {
      "rate": "gov.states.pa.tax.income.rate"
    },
    "variables": [
      "pa_adjusted_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "PA income tax before forgiveness"
  },
  "pa_eligibility_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/forgiveness/pa_eligibility_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "pa_total_taxable_income",
      "alimony_income",
      "tax_exempt_interest_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "PA eligibility income",
    "adds_from_parameter": "gov.states.pa.tax.income.forgiveness.eligibility_income_sources"
  },
  "pa_tax_forgiveness_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/forgiveness/pa_tax_forgiveness_rate.py",
    "parameters": {
      "p": "gov.states.pa.tax.income.forgiveness",
      "dependent_rate": "gov.states.pa.tax.income.forgiveness.dependent_rate",
      "rate_increment": "gov.states.pa.tax.income.forgiveness.rate_increment",
      "tax_back": "gov.states.pa.tax.income.forgiveness.tax_back",
      "base": "gov.states.pa.tax.income.forgiveness.base"
    },
    "variables": [
      "filing_status",
      "is_child_of_tax_head",
      "is_tax_unit_dependent",
      "pa_eligibility_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "PA tax forgiveness on eligibility income",
    "unit": "/1"
  },
  "pa_nontaxable_pension_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/taxable_income/pa_nontaxable_pension_income.py",
    "parameters": {},
    "variables": [
      "is_retired",
      "taxable_pension_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pension income taxable by US but not by PA",
    "description": "US taxable pension income excluded from PA AGI."
  },
  "pa_total_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/taxable_income/pa_total_taxable_income.py",
    "parameters": {
      "p": "gov.states.pa.tax.income",
      "nontaxable_income_sources": "gov.states.pa.tax.income.nontaxable_income_sources"
    },
    "variables": [
      "irs_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "PA total taxable income"
  },
  "pa_adjusted_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/taxable_income/pa_adjusted_taxable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "pa_total_taxable_income"
    ],
    "subtracts": [
      "pa_tax_deductions"
    ],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "PA income tax after deductions"
  },
  "pa_tax_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/deductions/pa_tax_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "PA deductions against taxable income"
  },
  "pa_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/tax/income/credits/pa_cdcc.py",
    "parameters": {
      "p": "gov.states.pa.tax.income.credits.cdcc",
      "match": "gov.states.pa.tax.income.credits.cdcc.match"
    },
    "variables": [
      "cdcc_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pennsylvania Child and Dependent Care Credit"
  },
  "pa_tanf_age_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/dhs/tanf/cash_assistance/pa_tanf_age_eligible.py",
    "parameters": {
      "p": "gov.states.pa.dhs.tanf.cash_assistance",
      "age_limit": "gov.states.pa.dhs.tanf.cash_assistance.age_limit"
    },
    "variables": [
      "is_full_time_student",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Pennsylvania TANF age eligibility"
  },
  "pa_tanf_countable_resources": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/dhs/tanf/eligibility/pa_tanf_countable_resources.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pennsylvania TANF countable resources"
  },
  "pa_tanf_resources_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/pa/dhs/tanf/eligibility/pa_tanf_resources_eligible.py",
    "parameters": {
      "p": "gov.states.pa.dhs.tanf",
      "resource_limit": "gov.states.pa.dhs.tanf.resource_limit"
    },
    "variables": [
      "pa_tanf_countable_resources"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets Pennsylvania TANF resource limit"
  },
  "tx_tanf_income_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tx/tanf/tx_tanf_income_limit.py",
    "parameters": {
      "p": "gov.states.tx.tanf",
      "calc": "gov.states.tx.tanf.monthly_income_limit.calc",
      "monthly_income_limit": "gov.states.tx.tanf.monthly_income_limit"
    },
    "variables": [
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.TX",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Texas TANF income limit"
  },
  "ri_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/ri_taxable_income.py",
    "parameters": {},
    "variables": [
      "ri_standard_deduction",
      "ri_agi",
      "ri_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island taxable income"
  },
  "ri_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/ri_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ri.tax.income",
      "amount": "gov.states.ri.tax.income.deductions.standard.amount",
      "calc": "gov.states.ri.tax.income.rate.calc",
      "standard": "gov.states.ri.tax.income.deductions.standard",
      "rate": "gov.states.ri.tax.income.rate",
      "deductions": "gov.states.ri.tax.income.deductions"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island withheld income tax"
  },
  "ri_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/ri_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ri_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "ri_refundable_credits"
    ],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island income tax"
  },
  "ri_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/ri_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "rate": "gov.states.ri.tax.income.rate",
      "calc": "gov.states.ri.tax.income.rate.calc"
    },
    "variables": [
      "ri_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island income tax before refundable credits",
    "bracket_parameters": {
      "rate": "gov.states.ri.tax.income.rate"
    }
  },
  "ri_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/ri_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ri_cdcc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island non-refundable credits",
    "adds_from_parameter": "gov.states.ri.tax.income.credits.non_refundable"
  },
  "ri_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/ri_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ri_eitc",
      "ri_property_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island refundable credits",
    "adds_from_parameter": "gov.states.ri.tax.income.credits.refundable"
  },
  "ri_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/ri_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ri_non_refundable_credits",
      "ri_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island income tax before refundable credits"
  },
  "ri_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/agi/ri_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "investment_in_529_plan",
      "tax_exempt_unemployment_compensation"
    ],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island AGI Additions",
    "adds_from_parameter": "gov.states.ri.tax.income.agi.additions.additions"
  },
  "ri_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/agi/ri_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "ri_additions"
    ],
    "subtracts": [
      "ri_subtractions"
    ],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island AGI"
  },
  "ri_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/exemption/ri_exemptions.py",
    "parameters": {
      "p": "gov.states.ri.tax.income.exemption",
      "amount": "gov.states.ri.tax.income.exemption.amount",
      "reduction": "gov.states.ri.tax.income.exemption.reduction",
      "start": "gov.states.ri.tax.income.exemption.reduction.start",
      "increment": "gov.states.ri.tax.income.exemption.reduction.increment",
      "rate": "gov.states.ri.tax.income.exemption.reduction.rate"
    },
    "variables": [
      "ri_agi",
      "exemptions_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island exemptions"
  },
  "ri_child_tax_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/credits/rebates/ri_child_tax_rebate.py",
    "parameters": {
      "p": "gov.states.ri.tax.income.credits.child_tax_rebate",
      "age": "gov.states.ri.tax.income.credits.child_tax_rebate.limit.age",
      "child": "gov.states.ri.tax.income.credits.child_tax_rebate.limit.child",
      "amount": "gov.states.ri.tax.income.credits.child_tax_rebate.amount",
      "limit": "gov.states.ri.tax.income.credits.child_tax_rebate.limit"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ri_child_tax_rebate_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island Child Tax Rebate"
  },
  "ri_child_tax_rebate_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/credits/rebates/ri_child_tax_rebate_eligible.py",
    "parameters": {
      "p": "gov.states.ri.tax.income.credits.child_tax_rebate.limit",
      "income": "gov.states.ri.tax.income.credits.child_tax_rebate.limit.income"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island Child Tax Rebate"
  },
  "ri_property_tax_household_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/credits/property_tax/ri_property_tax_household_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "tax_exempt_pension_income",
      "tax_exempt_interest_income",
      "tax_exempt_social_security",
      "tax_exempt_unemployment_compensation",
      "alimony_income",
      "tanf",
      "child_support_received",
      "workers_compensation"
    ],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island total household income for the property tax credit computation",
    "adds_from_parameter": "gov.states.ri.tax.income.credits.property_tax.income_sources"
  },
  "ri_property_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/credits/property_tax/ri_property_tax_credit.py",
    "parameters": {
      "p": "gov.states.ri.tax.income.credits.property_tax",
      "rent": "gov.states.ri.tax.income.credits.property_tax.rate.rent",
      "one_person": "gov.states.ri.tax.income.credits.property_tax.rate.one_person",
      "multiple_people": "gov.states.ri.tax.income.credits.property_tax.rate.multiple_people",
      "max_amount": "gov.states.ri.tax.income.credits.property_tax.max_amount",
      "rate": "gov.states.ri.tax.income.credits.property_tax.rate",
      "calc": "gov.states.ri.tax.income.credits.property_tax.rate.multiple_people.calc"
    },
    "variables": [
      "rent",
      "tax_unit_size",
      "ri_property_tax_household_income",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ri_property_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island property tax credit"
  },
  "ri_property_tax_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/credits/property_tax/ri_property_tax_credit_eligible.py",
    "parameters": {
      "p": "gov.states.ri.tax.income.credits.property_tax",
      "thresholds": "gov.states.ri.tax.income.credits.property_tax.rate.one_person.thresholds",
      "age_threshold": "gov.states.ri.tax.income.credits.property_tax.age_threshold",
      "rate": "gov.states.ri.tax.income.credits.property_tax.rate",
      "one_person": "gov.states.ri.tax.income.credits.property_tax.rate.one_person"
    },
    "variables": [
      "ri_property_tax_household_income",
      "head_is_disabled",
      "spouse_is_disabled",
      "greater_age_head_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island property tax credit eligibility status"
  },
  "ri_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/credits/cdcc/ri_cdcc.py",
    "parameters": {
      "rate": "gov.states.ri.tax.income.credits.cdcc.rate"
    },
    "variables": [
      "cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island child and dependent care credit"
  },
  "ri_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/credits/eitc/ri_eitc.py",
    "parameters": {
      "rate": "gov.states.ri.tax.income.credits.eitc.match"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island earned income tax credit"
  },
  "ri_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/deductions/standard/ri_standard_deduction.py",
    "parameters": {
      "p": "gov.states.ri.tax.income.deductions.standard",
      "amount": "gov.states.ri.tax.income.deductions.standard.amount"
    },
    "variables": [
      "filing_status",
      "ri_standard_deduction_applicable_percentage"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island standard deduction",
    "description": "https://tax.ri.gov/sites/g/files/xkgbur541/files/2022-12/ADV_2022_40_Inflation_Adjustments.pdf"
  },
  "ri_standard_deduction_applicable_percentage": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/deductions/standard/ri_standard_deduction_applicable_percentage.py",
    "parameters": {
      "p": "gov.states.ri.tax.income.deductions.standard.phase_out",
      "start": "gov.states.ri.tax.income.deductions.standard.phase_out.start",
      "increment": "gov.states.ri.tax.income.deductions.standard.phase_out.increment",
      "percentage": "gov.states.ri.tax.income.deductions.standard.phase_out.percentage"
    },
    "variables": [
      "ri_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island standard deduction applicable percentage"
  },
  "ri_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/agi/subtractions/ri_subtractions.py",
    "parameters": {
      "p": "gov.states.ri.tax.income.agi.subtractions",
      "subtractions": "gov.states.ri.tax.income.agi.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island AGI Subtractions"
  },
  "ri_tuition_saving_program_contribution_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/agi/subtractions/ri_tuition_saving_program_contribution_subtraction.py",
    "parameters": {
      "p": "gov.states.ri.tax.income.agi.subtractions.tuition_saving_program_contributions",
      "cap": "gov.states.ri.tax.income.agi.subtractions.tuition_saving_program_contributions.cap"
    },
    "variables": [
      "filing_status",
      "investment_in_529_plan"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island tuition saving program contribution subtraction"
  },
  "ri_retirement_income_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/agi/subtractions/taxable_retirement_income/ri_retirement_income_subtraction.py",
    "parameters": {
      "p": "gov.states.ri.tax.income.agi.subtractions.taxable_retirement_income",
      "cap": "gov.states.ri.tax.income.agi.subtractions.taxable_retirement_income.cap"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "taxable_pension_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ri_retirement_income_subtraction_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island retirement income subtraction"
  },
  "ri_retirement_income_subtraction_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/agi/subtractions/taxable_retirement_income/ri_retirement_income_subtraction_eligible.py",
    "parameters": {
      "p_ss": "gov.states.ri.tax.income.agi.subtractions.social_security.limit",
      "p_tri": "gov.states.ri.tax.income.agi.subtractions.taxable_retirement_income",
      "birth_year": "gov.states.ri.tax.income.agi.subtractions.social_security.limit.birth_year",
      "income_limit": "gov.states.ri.tax.income.agi.subtractions.taxable_retirement_income.income_limit"
    },
    "variables": [
      "older_spouse_birth_year",
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Rhode Island retirement income subtraction"
  },
  "ri_social_security_modification": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/agi/subtractions/social_security/ri_social_security_modification.py",
    "parameters": {
      "p": "gov.states.ri.tax.income.agi.subtractions.social_security.limit",
      "birth_year": "gov.states.ri.tax.income.agi.subtractions.social_security.limit.birth_year"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "birth_year",
      "social_security",
      "taxable_social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ri_social_security_modification_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rhode Island Social Security Modification"
  },
  "ri_social_security_modification_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ri/tax/income/agi/subtractions/social_security/ri_social_security_modification_eligible.py",
    "parameters": {
      "p": "gov.states.ri.tax.income.agi.subtractions.social_security.limit",
      "income": "gov.states.ri.tax.income.agi.subtractions.social_security.limit.income",
      "birth_year": "gov.states.ri.tax.income.agi.subtractions.social_security.limit.birth_year"
    },
    "variables": [
      "older_spouse_birth_year",
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.RI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Rhode Island Social Security Modification"
  },
  "state_sales_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/sales/state_sales_tax.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.salt_and_real_estate.state_sales_tax_table",
      "tax": "gov.irs.deductions.itemized.salt_and_real_estate.state_sales_tax_table.tax"
    },
    "variables": [
      "state_code",
      "state_sales_tax_income_bracket",
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State sales tax"
  },
  "state_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_eitc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State Earned Income Tax Credit"
  },
  "state_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_ctc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State Child Tax Credit"
  },
  "state_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_cdcc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State Child and Dependent Care Tax Credit"
  },
  "state_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_itemized_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State itemized deductions"
  },
  "state_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State non-refundable credits"
  },
  "state_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_taxable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State taxable income"
  },
  "state_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "state income tax before refundable credits"
  },
  "state_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_standard_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State standard deduction"
  },
  "state_property_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_property_tax_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State Property Tax Credit"
  },
  "state_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "state refundable credits"
  },
  "state_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State adjusted gross income"
  },
  "state_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_income_tax.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "spm_unit_state_tax_reported",
      "state_refundable_credits",
      "state_income_tax_before_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "state income tax"
  },
  "state_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/tax/income/state_withheld_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "state income tax before refundable credits"
  },
  "wv_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/wv_taxable_income.py",
    "parameters": {},
    "variables": [
      "wv_low_income_earned_income_exclusion",
      "wv_agi",
      "wv_personal_exemption"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia taxable income"
  },
  "wv_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/wv_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.wv.tax.income",
      "base_personal": "gov.states.wv.tax.income.exemptions.base_personal",
      "personal": "gov.states.wv.tax.income.exemptions.personal",
      "calc": "gov.states.wv.tax.income.rates.single.calc",
      "exemptions": "gov.states.wv.tax.income.exemptions",
      "rates": "gov.states.wv.tax.income.rates",
      "single": "gov.states.wv.tax.income.rates.single"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia withheld income tax"
  },
  "wv_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/wv_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.rates",
      "calc": "gov.states.wv.tax.income.rates.surviving_spouse.calc",
      "rates": "gov.states.wv.tax.income.rates"
    },
    "variables": [
      "filing_status",
      "wv_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia income tax before non-refundable tax credits"
  },
  "wv_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/wv_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "wv_non_refundable_credits",
      "wv_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia income tax before refundable tax credits"
  },
  "wv_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/wv_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "wv_additions"
    ],
    "subtracts": [
      "wv_subtractions"
    ],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia adjusted gross income"
  },
  "wv_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/wv_subtractions.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.subtractions",
      "subtractions": "gov.states.wv.tax.income.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia subtractions from the adjusted gross income"
  },
  "wv_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/wv_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wv_low_income_family_tax_credit",
      "wv_cdcc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia refundable tax credits",
    "adds_from_parameter": "gov.states.wv.tax.income.credits.non_refundable"
  },
  "wv_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/wv_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wv_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "wv_refundable_credits"
    ],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia income tax"
  },
  "wv_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/wv_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wv_sctc",
      "wv_homestead_excess_property_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia refundable tax credits",
    "adds_from_parameter": "gov.states.wv.tax.income.credits.refundable"
  },
  "wv_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/wv_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia additions to the adjusted gross income"
  },
  "wv_personal_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/exemptions/wv_personal_exemption.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.exemptions",
      "base_personal": "gov.states.wv.tax.income.exemptions.base_personal",
      "personal": "gov.states.wv.tax.income.exemptions.personal"
    },
    "variables": [
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia personal exemption"
  },
  "wv_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/credits/wv_cdcc.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.credits.cdcc",
      "match": "gov.states.wv.tax.income.credits.cdcc.match"
    },
    "variables": [
      "cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia Child and Dependent Care Credit"
  },
  "wv_homestead_excess_property_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/credits/heptc/wv_homestead_excess_property_tax_credit.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.credits.heptc",
      "cap": "gov.states.wv.tax.income.credits.heptc.cap",
      "rate": "gov.states.wv.tax.income.credits.heptc.rate",
      "household_income": "gov.states.wv.tax.income.credits.heptc.rate.household_income"
    },
    "variables": [
      "wv_sctc",
      "wv_gross_household_income",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "wv_homestead_excess_property_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia homestead excess property tax credit"
  },
  "wv_gross_household_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/credits/heptc/wv_gross_household_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "wv_additions",
      "tax_exempt_interest_income",
      "workers_compensation",
      "tax_exempt_social_security"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia gross household income",
    "adds_from_parameter": "gov.states.wv.tax.income.credits.heptc.gross_household_income.sources"
  },
  "wv_homestead_excess_property_tax_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/credits/heptc/wv_homestead_excess_property_tax_credit_eligible.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.credits.heptc.rate",
      "fpg": "gov.states.wv.tax.income.credits.heptc.rate.fpg",
      "household_income": "gov.states.wv.tax.income.credits.heptc.rate.household_income"
    },
    "variables": [
      "wv_sctc",
      "tax_unit_fpg",
      "wv_gross_household_income",
      "real_estate_taxes",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the West Virginia homestead excess property tax credit"
  },
  "wv_sctc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/credits/sctc/wv_sctc_eligible.py",
    "parameters": {
      "p_sctc": "gov.states.wv.tax.income.credits.sctc",
      "p_homestead": "gov.states.wv.tax.income.exemptions.homestead_exemption",
      "fpg_percentage": "gov.states.wv.tax.income.credits.sctc.fpg_percentage",
      "max_amount": "gov.states.wv.tax.income.exemptions.homestead_exemption.max_amount"
    },
    "variables": [
      "wv_homestead_exemption",
      "adjusted_gross_income",
      "tax_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the West Virginia senior citizens tax credit"
  },
  "wv_taxable_property_value": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/credits/sctc/wv_taxable_property_value.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "assessed_property_value"
    ],
    "subtracts": [
      "wv_homestead_exemption"
    ],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia taxable property value"
  },
  "wv_sctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/credits/sctc/wv_sctc.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.credits.sctc",
      "max_amount": "gov.states.wv.tax.income.credits.sctc.max_amount"
    },
    "variables": [
      "wv_taxable_property_value"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "wv_sctc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia senior citizens tax credit"
  },
  "wv_low_income_family_tax_credit_fpg": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/credits/liftc/wv_low_income_family_tax_credit_fpg.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.credits.liftc",
      "p_fpg": "gov.hhs.fpg",
      "first_person": "gov.hhs.fpg.first_person",
      "additional_person": "gov.hhs.fpg.additional_person",
      "max_family_size": "gov.states.wv.tax.income.credits.liftc.max_family_size"
    },
    "variables": [
      "state_group",
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "wv_low_income_family_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal poverty guidelines for the West Virginia low-income family tax credit"
  },
  "wv_low_income_family_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/credits/liftc/wv_low_income_family_tax_credit.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.credits.liftc",
      "fpg_percent": "gov.states.wv.tax.income.credits.liftc.fpg_percent",
      "amount": "gov.states.wv.tax.income.credits.liftc.amount",
      "calc": "gov.states.wv.tax.income.credits.liftc.amount.surviving_spouse.calc"
    },
    "variables": [
      "filing_status",
      "wv_income_tax_before_non_refundable_credits",
      "wv_low_income_family_tax_credit_agi",
      "wv_low_income_family_tax_credit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "wv_low_income_family_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia low-income family tax credit"
  },
  "wv_low_income_family_tax_credit_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/credits/liftc/wv_low_income_family_tax_credit_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "tax_exempt_interest_income",
      "wv_additions"
    ],
    "subtracts": [],
    "defined_for": "wv_low_income_family_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Adjusted gross income for the West Virginia low-income family tax credit"
  },
  "wv_low_income_family_tax_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/credits/liftc/wv_low_income_family_tax_credit_eligible.py",
    "parameters": {},
    "variables": [
      "alternative_minimum_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the West Virginia low-income family tax credit"
  },
  "wv_homestead_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/exemptions/homestead_exemption/wv_homestead_exemption.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.exemptions.homestead_exemption",
      "max_amount": "gov.states.wv.tax.income.exemptions.homestead_exemption.max_amount"
    },
    "variables": [
      "assessed_property_value"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia homestead exemption"
  },
  "wv_senior_citizen_disability_deduction_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/subtractions/senior_citizen_disability/wv_senior_citizen_disability_deduction_person.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.subtractions.senior_citizen_disability_deduction",
      "cap": "gov.states.wv.tax.income.subtractions.senior_citizen_disability_deduction.cap"
    },
    "variables": [
      "adjusted_gross_income_person",
      "wv_senior_citizen_disability_deduction_total_modifications"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "wv_senior_citizen_disability_deduction_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia senior citizen or disability deduction for each person"
  },
  "wv_senior_citizen_disability_deduction_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/subtractions/senior_citizen_disability/wv_senior_citizen_disability_deduction_eligible_person.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.subtractions.senior_citizen_disability_deduction",
      "age_threshold": "gov.states.wv.tax.income.subtractions.senior_citizen_disability_deduction.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age",
      "is_permanently_and_totally_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the West Virginia senior citizen or disability deduction"
  },
  "wv_senior_citizen_disability_deduction_total_modifications": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/subtractions/senior_citizen_disability/wv_senior_citizen_disability_deduction_total_modifications.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "us_govt_interest",
      "military_retirement_pay",
      "wv_public_pension_subtraction_person",
      "wv_social_security_benefits_subtraction_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia total modifications for the senior citizen or disability deduction",
    "adds_from_parameter": "gov.states.wv.tax.income.subtractions.senior_citizen_disability_deduction.modification_sources"
  },
  "wv_senior_citizen_disability_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/subtractions/senior_citizen_disability/wv_senior_citizen_disability_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wv_senior_citizen_disability_deduction_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia senior citizen or disability deduction"
  },
  "wv_low_income_earned_income_exclusion_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/subtractions/low_income_earned_income/wv_low_income_earned_income_exclusion_eligible.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.subtractions.low_income_earned_income",
      "income_limit": "gov.states.wv.tax.income.subtractions.low_income_earned_income.income_limit"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the West Virginia low-income earned income exclusion"
  },
  "wv_low_income_earned_income_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/subtractions/low_income_earned_income/wv_low_income_earned_income_exclusion.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.subtractions.low_income_earned_income",
      "amount": "gov.states.wv.tax.income.subtractions.low_income_earned_income.amount"
    },
    "variables": [
      "tax_unit_earned_income",
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "wv_low_income_earned_income_exclusion_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia low-income earned income exclusion"
  },
  "wv_public_pension_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/subtractions/public_pension/wv_public_pension_subtraction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wv_public_pension_subtraction_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia public pension subtraction"
  },
  "wv_public_pension_subtraction_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/subtractions/public_pension/wv_public_pension_subtraction_person.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.subtractions.public_pension",
      "max_amount": "gov.states.wv.tax.income.subtractions.public_pension.max_amount"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "taxable_federal_pension_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia public pension subtraction for each person"
  },
  "wv_social_security_benefits_subtraction_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/subtractions/social_security/wv_social_security_benefits_subtraction_person.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.subtractions.social_security_benefits",
      "applies": "gov.states.wv.tax.income.subtractions.social_security_benefits.social_security_benefits_above_income_limit.applies",
      "rate": "gov.states.wv.tax.income.subtractions.social_security_benefits.social_security_benefits_above_income_limit.rate",
      "social_security_benefits_above_income_limit": "gov.states.wv.tax.income.subtractions.social_security_benefits.social_security_benefits_above_income_limit"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "wv_social_security_benefits_subtraction_eligible",
      "taxable_social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia social security benefits subtraction for each person"
  },
  "wv_social_security_benefits_subtraction_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/subtractions/social_security/wv_social_security_benefits_subtraction_eligible.py",
    "parameters": {
      "p": "gov.states.wv.tax.income.subtractions.social_security_benefits",
      "income_limit": "gov.states.wv.tax.income.subtractions.social_security_benefits.income_limit"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the West Virginia social security benefits subtraction"
  },
  "wv_social_security_benefits_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/wv/tax/income/subtractions/social_security/wv_social_security_benefits_subtraction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "wv_social_security_benefits_subtraction_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.WV",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "West Virginia social security benefits subtraction"
  },
  "ct_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/ct_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ct_property_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut non-refundable credits",
    "adds_from_parameter": "gov.states.ct.tax.income.credits.non_refundable"
  },
  "ct_income_tax_after_personal_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/ct_income_tax_after_personal_credits.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.rates",
      "calc": "gov.states.ct.tax.income.rates.head_of_household.calc",
      "rates": "gov.states.ct.tax.income.rates"
    },
    "variables": [
      "filing_status",
      "ct_personal_credit_rate",
      "ct_income_tax_phase_out_add_back",
      "ct_taxable_income",
      "ct_income_tax_recapture"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut income tax after personal tax credits"
  },
  "ct_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/ct_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ct_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut refundable credits",
    "adds_from_parameter": "gov.states.ct.tax.income.credits.refundable"
  },
  "ct_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/ct_taxable_income.py",
    "parameters": {},
    "variables": [
      "ct_personal_exemptions",
      "ct_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut taxable income"
  },
  "ct_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/ct_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ct_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "ct_refundable_credits"
    ],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut income tax"
  },
  "ct_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/ct_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "ct_additions"
    ],
    "subtracts": [
      "ct_agi_subtractions"
    ],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut adjusted gross income"
  },
  "ct_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/ct_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ct_income_tax_after_amt",
      "ct_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut income tax before refundable credits"
  },
  "ct_agi_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/ct_agi_subtractions.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.subtractions",
      "subtractions": "gov.states.ct.tax.income.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut subtractions from federal adjusted gross income"
  },
  "ct_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/ct_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ct.tax.income",
      "max_amount": "gov.states.ct.tax.income.exemptions.personal.max_amount",
      "calc": "gov.states.ct.tax.income.rates.single.calc",
      "personal": "gov.states.ct.tax.income.exemptions.personal",
      "single": "gov.states.ct.tax.income.rates.single",
      "exemptions": "gov.states.ct.tax.income.exemptions",
      "rates": "gov.states.ct.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut withheld income tax"
  },
  "ct_income_tax_after_amt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/ct_income_tax_after_amt.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ct_amt",
      "ct_income_tax_after_personal_credits"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut income tax after the addition of the alternative minimum tax"
  },
  "ct_social_security_benefit_adjustment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/subtractions/ct_social_security_benefit_adjustment.py",
    "parameters": {
      "p_irs": "gov.irs.social_security.taxability",
      "p": "gov.states.ct.tax.income.subtractions.social_security",
      "rate": "gov.irs.social_security.taxability.rate",
      "additional": "gov.irs.social_security.taxability.rate.additional",
      "reduction_threshold": "gov.states.ct.tax.income.subtractions.social_security.reduction_threshold"
    },
    "variables": [
      "tax_unit_taxable_social_security",
      "filing_status",
      "tax_unit_social_security",
      "tax_unit_ss_combined_income_excess",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut social security benefit adjustment"
  },
  "ct_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/subtractions/ct_subtractions.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.subtractions",
      "subtractions": "gov.states.ct.tax.income.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut subtractions"
  },
  "ct_amt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/amt/ct_amt.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut alternative minimum tax"
  },
  "ct_section_179_expense_add_back": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/additions/ct_section_179_expense_add_back.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut Section 179 Expense Add Back",
    "description": "Add 80 percent of the section 179 amount deducted in determining federal AGI."
  },
  "ct_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/additions/ct_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ct_section_179_expense_add_back"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut additions",
    "adds_from_parameter": "gov.states.ct.tax.income.additions.additions"
  },
  "ct_income_tax_low_tax_recapture": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/add_back/ct_income_tax_low_tax_recapture.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.recapture.low",
      "in_effect": "gov.states.ct.tax.income.recapture.low.in_effect",
      "start": "gov.states.ct.tax.income.recapture.low.start",
      "max_amount": "gov.states.ct.tax.income.recapture.low.max_amount",
      "increment": "gov.states.ct.tax.income.recapture.low.increment",
      "amount": "gov.states.ct.tax.income.recapture.low.amount"
    },
    "variables": [
      "filing_status",
      "ct_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut income tax recapture at low brackets"
  },
  "ct_income_tax_phase_out_add_back": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/add_back/ct_income_tax_phase_out_add_back.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.add_back",
      "start": "gov.states.ct.tax.income.add_back.start",
      "max_amount": "gov.states.ct.tax.income.add_back.max_amount",
      "increment": "gov.states.ct.tax.income.add_back.increment",
      "amount": "gov.states.ct.tax.income.add_back.amount"
    },
    "variables": [
      "filing_status",
      "ct_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut income tax phase out add back"
  },
  "ct_income_tax_recapture": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/add_back/ct_income_tax_recapture.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ct_income_tax_low_tax_recapture",
      "ct_income_tax_middle_tax_recapture",
      "ct_income_tax_high_tax_recapture"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut income tax recapture"
  },
  "ct_income_tax_middle_tax_recapture": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/add_back/ct_income_tax_middle_tax_recapture.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.recapture.middle",
      "start": "gov.states.ct.tax.income.recapture.middle.start",
      "max_amount": "gov.states.ct.tax.income.recapture.middle.max_amount",
      "increment": "gov.states.ct.tax.income.recapture.middle.increment",
      "amount": "gov.states.ct.tax.income.recapture.middle.amount"
    },
    "variables": [
      "filing_status",
      "ct_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut income tax recapture at middle brackets"
  },
  "ct_income_tax_high_tax_recapture": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/add_back/ct_income_tax_high_tax_recapture.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.recapture.high",
      "start": "gov.states.ct.tax.income.recapture.high.start",
      "max_amount": "gov.states.ct.tax.income.recapture.high.max_amount",
      "increment": "gov.states.ct.tax.income.recapture.high.increment",
      "amount": "gov.states.ct.tax.income.recapture.high.amount"
    },
    "variables": [
      "filing_status",
      "ct_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut income tax recapture at high brackets"
  },
  "ct_child_tax_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/rebate/ct_child_tax_rebate.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.rebate",
      "start": "gov.states.ct.tax.income.rebate.reduction.start",
      "increment": "gov.states.ct.tax.income.rebate.reduction.increment",
      "rate": "gov.states.ct.tax.income.rebate.reduction.rate",
      "reduction": "gov.states.ct.tax.income.rebate.reduction",
      "child_cap": "gov.states.ct.tax.income.rebate.child_cap",
      "amount": "gov.states.ct.tax.income.rebate.amount"
    },
    "variables": [
      "tax_unit_count_dependents",
      "filing_status",
      "ct_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut child tax rebate"
  },
  "ct_personal_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/exemptions/ct_personal_exemptions.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.exemptions.personal",
      "max_amount": "gov.states.ct.tax.income.exemptions.personal.max_amount",
      "reduction": "gov.states.ct.tax.income.exemptions.personal.reduction",
      "start": "gov.states.ct.tax.income.exemptions.personal.reduction.start",
      "increment": "gov.states.ct.tax.income.exemptions.personal.reduction.increment",
      "amount": "gov.states.ct.tax.income.exemptions.personal.reduction.amount"
    },
    "variables": [
      "filing_status",
      "ct_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut Personal Exemptions"
  },
  "ct_personal_credit_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/credits/ct_personal_credit_rate.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.agi",
      "calc": "gov.states.ct.tax.income.agi.head_of_household.calc",
      "agi": "gov.states.ct.tax.income.agi"
    },
    "variables": [
      "filing_status",
      "ct_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "unit": "\u0001",
    "label": "Connecticut personal credit rate"
  },
  "ct_property_tax_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/credits/property_tax/ct_property_tax_credit_eligible.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.credits.property_tax",
      "age_threshold": "gov.states.ct.tax.income.credits.property_tax.age_threshold"
    },
    "variables": [
      "tax_unit_dependents",
      "greater_age_head_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Connecticut Property Tax Credit"
  },
  "ct_property_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/credits/property_tax/ct_property_tax_credit.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.credits.property_tax",
      "cap": "gov.states.ct.tax.income.credits.property_tax.cap",
      "reduction": "gov.states.ct.tax.income.credits.property_tax.reduction",
      "rate": "gov.states.ct.tax.income.credits.property_tax.reduction.rate",
      "start": "gov.states.ct.tax.income.credits.property_tax.reduction.start",
      "increment": "gov.states.ct.tax.income.credits.property_tax.reduction.increment"
    },
    "variables": [
      "filing_status",
      "ct_agi",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ct_property_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut property tax credit"
  },
  "ct_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/credits/eitc/ct_eitc.py",
    "parameters": {
      "rate": "gov.states.ct.tax.income.credits.eitc.match"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut Earned Income Tax Credit"
  },
  "ct_tuition_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/subtractions/tuition/ct_tuition_subtraction.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.subtractions.tuition",
      "cap": "gov.states.ct.tax.income.subtractions.tuition.cap"
    },
    "variables": [
      "filing_status",
      "qualified_tuition_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut tuition subtraction"
  },
  "ct_pension_annuity_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ct/tax/income/subtractions/pension_annuity/ct_pension_annuity_subtraction.py",
    "parameters": {
      "p": "gov.states.ct.tax.income.subtractions.pensions_or_annuity",
      "calc": "gov.states.ct.tax.income.subtractions.pensions_or_annuity.non_joint.calc",
      "joint": "gov.states.ct.tax.income.subtractions.pensions_or_annuity.joint",
      "non_joint": "gov.states.ct.tax.income.subtractions.pensions_or_annuity.non_joint"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "taxable_pension_income",
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Connecticut pension and annuity subtraction"
  },
  "ia_alternate_tax_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/ia_alternate_tax_eligible.py",
    "parameters": {},
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa alternate tax eligible"
  },
  "ia_reduced_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/ia_reduced_tax.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.tax_reduction",
      "elderly_age": "gov.states.ia.tax.income.tax_reduction.elderly_age",
      "threshold": "gov.states.ia.tax.income.tax_reduction.threshold",
      "elderly": "gov.states.ia.tax.income.tax_reduction.threshold.elderly",
      "nonelderly": "gov.states.ia.tax.income.tax_reduction.threshold.nonelderly"
    },
    "variables": [
      "age_head",
      "filing_status",
      "ia_modified_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa income tax reduced amount for single tax units"
  },
  "ia_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/ia_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ia_reduced_tax",
      "ia_non_refundable_credits",
      "ia_is_tax_exempt",
      "ia_income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa income tax before refundable credits"
  },
  "ia_modified_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/ia_modified_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ia_taxable_income_consolidated",
      "taxable_income_deductions",
      "qualified_business_income_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa modified income used in tax-exempt and alternate-tax calculations",
    "adds_from_parameter": "gov.states.ia.tax.income.modified_income.sources"
  },
  "ia_is_tax_exempt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/ia_is_tax_exempt.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.tax_exempt",
      "income_limit": "gov.states.ia.tax.income.tax_exempt.income_limit",
      "elderly_age": "gov.states.ia.tax.income.tax_exempt.elderly_age"
    },
    "variables": [
      "age_head",
      "filing_status",
      "ia_modified_income",
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "whether or not exempt from Iowa income tax because of low income"
  },
  "ia_files_separately": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/ia_files_separately.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.married_filing_separately_on_same_return",
      "availability": "gov.states.ia.tax.income.married_filing_separately_on_same_return.availability"
    },
    "variables": [
      "ia_income_tax_joint",
      "ia_income_tax_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "married couple files separately on Iowa tax return"
  },
  "ia_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/ia_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ia.tax.income",
      "p_fed": "gov.irs.deductions",
      "applies_federal": "gov.states.ia.tax.income.deductions.standard.applies_federal",
      "amount": "gov.states.ia.tax.income.deductions.standard.amount",
      "active": "gov.states.ia.tax.income.rates.by_filing_status.active",
      "other": "gov.states.ia.tax.income.rates.by_filing_status.other",
      "standard": "gov.states.ia.tax.income.deductions.standard",
      "by_filing_status": "gov.states.ia.tax.income.rates.by_filing_status",
      "combined": "gov.states.ia.tax.income.rates.combined",
      "calc": "gov.states.ia.tax.income.rates.by_filing_status.other.calc",
      "deductions": "gov.states.ia.tax.income.deductions",
      "rates": "gov.states.ia.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa withheld income tax"
  },
  "ia_reportable_social_security": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/ia_reportable_social_security.py",
    "parameters": {
      "p": "gov.states.ia.tax.income",
      "deduction": "gov.states.ia.tax.income.reportable_social_security.deduction",
      "fraction": "gov.states.ia.tax.income.reportable_social_security.fraction",
      "reportable_social_security": "gov.states.ia.tax.income.reportable_social_security"
    },
    "variables": [
      "filing_status",
      "social_security",
      "taxable_social_security",
      "tax_exempt_interest_income",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa reportable social security benefits"
  },
  "ia_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/ia_income_tax_before_credits.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.married_filing_separately_on_same_return",
      "availability": "gov.states.ia.tax.income.married_filing_separately_on_same_return.availability"
    },
    "variables": [
      "ia_income_tax_joint",
      "ia_income_tax_indiv",
      "ia_income_tax_consolidated",
      "ia_files_separately"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa income tax before credits"
  },
  "ia_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/ia_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ia_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "ia_refundable_credits"
    ],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa income tax"
  },
  "ia_income_tax_consolidated": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/consolidated/ia_income_tax_consolidated.py",
    "parameters": {},
    "variables": [
      "ia_alternate_tax_eligible",
      "ia_alternate_tax_consolidated",
      "ia_regular_tax_consolidated"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa income tax for years on or after 2023"
  },
  "ia_alternate_tax_consolidated": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/consolidated/ia_alternate_tax_consolidated.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.alternate_tax",
      "elderly_age": "gov.states.ia.tax.income.alternate_tax.elderly_age",
      "rate": "gov.states.ia.tax.income.alternate_tax.rate",
      "deduction": "gov.states.ia.tax.income.alternate_tax.deduction",
      "elderly": "gov.states.ia.tax.income.alternate_tax.deduction.elderly",
      "nonelderly": "gov.states.ia.tax.income.alternate_tax.deduction.nonelderly"
    },
    "variables": [
      "ia_modified_income",
      "greater_age_head_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa alternate tax for years on or after 2023"
  },
  "ia_regular_tax_consolidated": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/consolidated/ia_regular_tax_consolidated.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.rates",
      "calc": "gov.states.ia.tax.income.rates.by_filing_status.other.calc",
      "joint": "gov.states.ia.tax.income.rates.by_filing_status.joint",
      "other": "gov.states.ia.tax.income.rates.by_filing_status.other",
      "by_filing_status": "gov.states.ia.tax.income.rates.by_filing_status"
    },
    "variables": [
      "filing_status",
      "ia_taxable_income_consolidated"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa regular tax for years on or after 2023"
  },
  "ia_regular_tax_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/ia_regular_tax_indiv.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.rates",
      "active": "gov.states.ia.tax.income.rates.by_filing_status.active",
      "joint": "gov.states.ia.tax.income.rates.by_filing_status.joint",
      "other": "gov.states.ia.tax.income.rates.by_filing_status.other",
      "by_filing_status": "gov.states.ia.tax.income.rates.by_filing_status",
      "combined": "gov.states.ia.tax.income.rates.combined",
      "calc": "gov.states.ia.tax.income.rates.by_filing_status.other.calc"
    },
    "variables": [
      "filing_status",
      "ia_taxable_income_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa regular tax calculated using income tax rate schedule when married couples file separately"
  },
  "ia_base_tax_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/ia_base_tax_joint.py",
    "parameters": {},
    "variables": [
      "ia_alternate_tax_eligible",
      "ia_alternate_tax_joint",
      "ia_regular_tax_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa base tax when married couples file jointly"
  },
  "ia_base_tax_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/ia_base_tax_indiv.py",
    "parameters": {},
    "variables": [
      "ia_regular_tax_indiv",
      "ia_alternate_tax_indiv",
      "ia_alternate_tax_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa base tax when married couples file separately"
  },
  "ia_regular_tax_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/ia_regular_tax_joint.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.rates",
      "active": "gov.states.ia.tax.income.rates.by_filing_status.active",
      "joint": "gov.states.ia.tax.income.rates.by_filing_status.joint",
      "other": "gov.states.ia.tax.income.rates.by_filing_status.other",
      "by_filing_status": "gov.states.ia.tax.income.rates.by_filing_status",
      "combined": "gov.states.ia.tax.income.rates.combined",
      "calc": "gov.states.ia.tax.income.rates.by_filing_status.other.calc"
    },
    "variables": [
      "filing_status",
      "ia_taxable_income_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa regular tax calculated using income tax rate schedule when married couples file jointly"
  },
  "ia_taxable_income_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/ia_taxable_income_joint.py",
    "parameters": {
      "p": "gov.states.ia.tax.income",
      "sources": "gov.states.ia.tax.income.deductions.sources",
      "deductions": "gov.states.ia.tax.income.deductions"
    },
    "variables": [
      "is_tax_unit_head",
      "ia_net_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa taxable income when married couple file jointly"
  },
  "ia_income_tax_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/ia_income_tax_indiv.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ia_base_tax_indiv",
      "ia_amt_indiv"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa income tax when married couples file separately"
  },
  "ia_amt_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/ia_amt_joint.py",
    "parameters": {
      "p": "gov.states.ia.tax.income",
      "alternative_minimum_tax": "gov.states.ia.tax.income.alternative_minimum_tax"
    },
    "variables": [
      "filing_status",
      "ia_itemized_deductions_joint",
      "ia_taxable_income_joint",
      "ia_standard_deduction_joint",
      "real_estate_taxes",
      "ia_base_tax_joint",
      "is_tax_unit_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa alternative minimum tax when married couples file jointly"
  },
  "ia_taxable_income_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/ia_taxable_income_indiv.py",
    "parameters": {
      "p": "gov.states.ia.tax.income",
      "sources": "gov.states.ia.tax.income.deductions.sources",
      "deductions": "gov.states.ia.tax.income.deductions"
    },
    "variables": [
      "ia_net_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa taxable income when married couple file separately"
  },
  "ia_income_tax_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/ia_income_tax_joint.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ia_base_tax_joint",
      "ia_amt_joint"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa income tax when married couples file jointly"
  },
  "ia_amt_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/ia_amt_indiv.py",
    "parameters": {
      "p": "gov.states.ia.tax.income",
      "alternative_minimum_tax": "gov.states.ia.tax.income.alternative_minimum_tax"
    },
    "variables": [
      "ia_itemized_deductions_indiv",
      "filing_status",
      "ia_base_tax_indiv",
      "ia_prorate_fraction",
      "ia_taxable_income_indiv",
      "real_estate_taxes",
      "ia_standard_deduction_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa alternative minimum tax when married couples file separately"
  },
  "ia_income_adjustments": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/net_income/ia_income_adjustments.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "traditional_ira_contributions",
      "self_employment_tax_ald_person",
      "alimony_expense",
      "ia_pension_exclusion"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa income adjustments",
    "adds_from_parameter": "gov.states.ia.tax.income.income_adjustments.sources"
  },
  "ia_pension_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/net_income/ia_pension_exclusion.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.pension_exclusion",
      "maximum_amount": "gov.states.ia.tax.income.pension_exclusion.maximum_amount"
    },
    "variables": [
      "taxable_pension_income",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ia_pension_exclusion_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa pension exclusion"
  },
  "ia_net_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/net_income/ia_net_income.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "ia_income_adjustments",
      "ia_gross_income",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa net income"
  },
  "ia_pension_exclusion_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/net_income/ia_pension_exclusion_eligible.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.pension_exclusion",
      "minimum_age": "gov.states.ia.tax.income.pension_exclusion.minimum_age"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age",
      "is_permanently_and_totally_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Iowa pension exclusion"
  },
  "ia_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/net_income/ia_gross_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "irs_employment_income",
      "taxable_interest_income",
      "dividend_income",
      "alimony_income",
      "self_employment_income",
      "capital_gains",
      "taxable_pension_income",
      "partnership_s_corp_income",
      "rental_income",
      "farm_income",
      "taxable_unemployment_compensation",
      "miscellaneous_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa gross income",
    "adds_from_parameter": "gov.states.ia.tax.income.gross_income.sources"
  },
  "ia_prorate_fraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/net_income/ia_prorate_fraction.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "ia_net_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa joint amount proration fraction"
  },
  "ia_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/credits/ia_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ia_cdcc",
      "ia_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa refundable income tax credits",
    "adds_from_parameter": "gov.states.ia.tax.income.credits.refundable"
  },
  "ia_exemption_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/credits/ia_exemption_credit.py",
    "parameters": {
      "p": "gov.states.ia.tax.income",
      "exemption": "gov.states.ia.tax.income.credits.exemption",
      "credits": "gov.states.ia.tax.income.credits"
    },
    "variables": [
      "filing_status",
      "age_head",
      "age_spouse",
      "tax_unit_dependents",
      "blind_head",
      "blind_spouse",
      "head_spouse_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa exemption credit"
  },
  "ia_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/credits/ia_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ia_exemption_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa nonrefundable income tax credits",
    "adds_from_parameter": "gov.states.ia.tax.income.credits.nonrefundable"
  },
  "ia_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/credits/ia_eitc.py",
    "parameters": {
      "p": "gov.states.ia.tax.income",
      "fraction": "gov.states.ia.tax.income.credits.earned_income.fraction",
      "earned_income": "gov.states.ia.tax.income.credits.earned_income",
      "credits": "gov.states.ia.tax.income.credits"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa earned income tax credit"
  },
  "ia_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/credits/ia_cdcc.py",
    "parameters": {
      "p": "gov.states.ia.tax.income",
      "calc": "gov.states.ia.tax.income.credits.child_care.fraction.calc",
      "fraction": "gov.states.ia.tax.income.credits.child_care.fraction",
      "child_care": "gov.states.ia.tax.income.credits.child_care",
      "credits": "gov.states.ia.tax.income.credits"
    },
    "variables": [
      "ia_net_income",
      "cdcc_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa child/dependent care credit"
  },
  "ia_standard_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/deductions/ia_standard_deduction_joint.py",
    "parameters": {
      "p": "gov.states.ia.tax.income",
      "fed_p": "gov.irs.deductions",
      "applies_federal": "gov.states.ia.tax.income.deductions.standard.applies_federal",
      "amount": "gov.states.ia.tax.income.deductions.standard.amount",
      "standard": "gov.states.ia.tax.income.deductions.standard",
      "deductions": "gov.states.ia.tax.income.deductions"
    },
    "variables": [
      "is_tax_unit_head",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa standard deduction when married couples file jointly"
  },
  "ia_standard_deduction_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/deductions/ia_standard_deduction_indiv.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.deductions.standard",
      "fed_p": "gov.irs.deductions",
      "applies_federal": "gov.states.ia.tax.income.deductions.standard.applies_federal",
      "amount": "gov.states.ia.tax.income.deductions.standard.amount",
      "standard": "gov.irs.deductions.standard"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "is_tax_unit_head",
      "filing_status",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa standard deduction when married couples file separately"
  },
  "ia_itemized_deductions_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/deductions/ia_itemized_deductions_joint.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "ia_itemized_deductions_unit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa itemized deductions for joint couples"
  },
  "ia_fedtax_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/deductions/ia_fedtax_deduction.py",
    "parameters": {
      "ctc": "gov.irs.credits.ctc",
      "fully_refundable": "gov.irs.credits.ctc.refundable.fully_refundable",
      "refundable": "gov.irs.credits.ctc.refundable"
    },
    "variables": [
      "non_refundable_ctc",
      "ia_prorate_fraction",
      "income_tax_before_refundable_credits",
      "self_employment_tax",
      "additional_medicare_tax",
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa deduction for selected components of federal income tax"
  },
  "ia_itemized_deductions_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/deductions/ia_itemized_deductions_indiv.py",
    "parameters": {},
    "variables": [
      "ia_prorate_fraction",
      "ia_itemized_deductions_unit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa itemized deductions for individual couples"
  },
  "ia_itemized_deductions_unit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/deductions/ia_itemized_deductions_unit.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.deductions.itemized",
      "p_fed": "gov.irs.deductions",
      "applies_federal": "gov.states.ia.tax.income.deductions.itemized.applies_federal",
      "itemized_deductions": "gov.irs.deductions.itemized_deductions"
    },
    "variables": [
      "real_estate_taxes",
      "itemized_deductions_less_salt"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa itemized deductions for tax unit"
  },
  "ia_basic_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/deductions/ia_basic_deduction_joint.py",
    "parameters": {},
    "variables": [
      "ia_itemized_deductions_joint",
      "ia_standard_deduction_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa deduction of either standard or itemized deductions when married couples file jointly"
  },
  "ia_qbi_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/deductions/ia_qbi_deduction.py",
    "parameters": {
      "p": "gov.states.ia.tax.income",
      "fraction": "gov.states.ia.tax.income.deductions.qualified_business_income.fraction",
      "qualified_business_income": "gov.states.ia.tax.income.deductions.qualified_business_income",
      "deductions": "gov.states.ia.tax.income.deductions"
    },
    "variables": [
      "qbid_amount",
      "qualified_business_income_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa deduction that is fraction of federal qualified business income deduction"
  },
  "ia_basic_deduction_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/deductions/ia_basic_deduction_indiv.py",
    "parameters": {},
    "variables": [
      "ia_itemized_deductions_indiv",
      "ia_standard_deduction_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa deduction of either standard or itemized deductions when married couples file separately"
  },
  "ia_alternate_tax_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/alternate_tax/ia_alternate_tax_indiv.py",
    "parameters": {},
    "variables": [
      "ia_prorate_fraction",
      "ia_alternate_tax_unit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa alternate tax when married couples file separately"
  },
  "ia_alternate_tax_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/alternate_tax/ia_alternate_tax_joint.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "ia_alternate_tax_unit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa alternate tax when married couples file jointly"
  },
  "ia_alternate_tax_unit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/including_married_filing_separately/alternate_tax/ia_alternate_tax_unit.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.alternate_tax",
      "elderly_age": "gov.states.ia.tax.income.alternate_tax.elderly_age",
      "rate": "gov.states.ia.tax.income.alternate_tax.rate",
      "deduction": "gov.states.ia.tax.income.alternate_tax.deduction",
      "elderly": "gov.states.ia.tax.income.alternate_tax.deduction.elderly",
      "nonelderly": "gov.states.ia.tax.income.alternate_tax.deduction.nonelderly"
    },
    "variables": [
      "age_head",
      "ia_modified_income",
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa alternate tax calculated using worksheet"
  },
  "ia_subtractions_consolidated": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/consolidated/taxable_income/ia_subtractions_consolidated.py",
    "parameters": {
      "p": "gov.states.ia.tax.income.taxable_income",
      "subtractions": "gov.states.ia.tax.income.taxable_income.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa subtractions from taxable income for years on or after 2023"
  },
  "ia_additions_consolidated": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/consolidated/taxable_income/ia_additions_consolidated.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa additions to taxable income for years on or after 2023"
  },
  "ia_taxable_income_consolidated": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/consolidated/taxable_income/ia_taxable_income_consolidated.py",
    "parameters": {},
    "variables": [
      "ia_taxable_income_modifications_consolidated",
      "taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa taxable income for years on or after 2023"
  },
  "ia_taxable_income_modifications_consolidated": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ia/tax/income/consolidated/taxable_income/ia_taxable_income_modifications_consolidated.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ia_additions_consolidated"
    ],
    "subtracts": [
      "ia_subtractions_consolidated"
    ],
    "defined_for": "StateCode.IA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Iowa modifications to taxable income for years on or after 2023"
  },
  "ca_state_disability_insurance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/edd/ca_state_disability_insurance.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California state disability insurance (SDI)"
  },
  "ca_in_home_supportive_services": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/ca_in_home_supportive_services.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California In-Home Supportive Services"
  },
  "ca_capi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/capi/ca_capi.py",
    "parameters": {
      "p": "gov.states.ca.cdss.capi.payment_standard_offset",
      "couple": "gov.states.ca.cdss.capi.payment_standard_offset.couple",
      "single": "gov.states.ca.cdss.capi.payment_standard_offset.single"
    },
    "variables": [
      "ca_capi_eligible_person",
      "ssi_countable_income",
      "ssi_amount_if_eligible",
      "ca_state_supplement",
      "spm_unit_is_married"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_capi_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CAPI"
  },
  "ca_state_supplement": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/state_supplement/ca_state_supplement.py",
    "parameters": {},
    "variables": [
      "ssi_countable_income",
      "ssi",
      "ca_state_supplement_payment_standard"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California state supplement"
  },
  "ca_state_supplement_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/state_supplement/ca_state_supplement_eligible_person.py",
    "parameters": {},
    "variables": [
      "is_ssi_qualified_noncitizen",
      "is_ssi_aged_blind_disabled",
      "is_tax_unit_head_or_spouse",
      "immigration_status",
      "meets_ssi_resource_test"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California SSI state supplement eligible person"
  },
  "ca_tanf": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/ca_tanf.py",
    "parameters": {},
    "variables": [
      "ca_tanf_countable_income_recipient",
      "ca_tanf_maximum_payment",
      "ca_tanf_immigration_status_eligible_person",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_tanf_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Cash Benefit"
  },
  "ca_tanf_resources_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/resources/ca_tanf_resources_limit.py",
    "parameters": {
      "p": "gov.states.ca.cdss.tanf.cash.resources.limit",
      "with_elderly_or_disabled_member": "gov.states.ca.cdss.tanf.cash.resources.limit.with_elderly_or_disabled_member",
      "without_elderly_or_disabled_member": "gov.states.ca.cdss.tanf.cash.resources.limit.without_elderly_or_disabled_member",
      "age_threshold": "gov.states.ca.cdss.tanf.cash.resources.limit.age_threshold"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Resources Limit"
  },
  "ca_tanf_resources": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/resources/ca_tanf_resources.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "assessed_property_value",
      "spm_unit_cash_assets"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Resources",
    "adds_from_parameter": "gov.states.ca.cdss.tanf.cash.resources.sources"
  },
  "ca_tanf_countable_income_applicant": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/income/ca_tanf_countable_income_applicant.py",
    "parameters": {
      "p": "gov.states.ca.cdss.tanf.cash.income.disregards.applicant",
      "flat": "gov.states.ca.cdss.tanf.cash.income.disregards.applicant.flat"
    },
    "variables": [
      "ca_tanf_other_unearned_income",
      "ca_tanf_db_unearned_income",
      "ca_tanf_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Countable Income for Eligibility"
  },
  "ca_tanf_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/income/ca_tanf_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs gross earned income",
    "adds_from_parameter": "gov.states.ca.cdss.tanf.cash.income.sources.earned"
  },
  "ca_tanf_countable_income_recipient": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/income/ca_tanf_countable_income_recipient.py",
    "parameters": {
      "p": "gov.states.ca.cdss.tanf.cash.income.disregards.recipient",
      "flat": "gov.states.ca.cdss.tanf.cash.income.disregards.recipient.flat",
      "percentage": "gov.states.ca.cdss.tanf.cash.income.disregards.recipient.percentage"
    },
    "variables": [
      "ca_tanf_other_unearned_income",
      "ca_tanf_db_unearned_income",
      "ca_tanf_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs countable income for payment computation"
  },
  "ca_tanf_db_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/income/ca_tanf_db_unearned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_state_disability_insurance",
      "workers_compensation",
      "social_security_disability"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Disability-Based Unearned Income",
    "adds_from_parameter": "gov.states.ca.cdss.tanf.cash.income.sources.db_unearned"
  },
  "ca_tanf_other_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/income/ca_tanf_other_unearned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "social_security_retirement",
      "social_security_survivors",
      "social_security_dependents",
      "interest_income",
      "dividend_income",
      "capital_gains"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs other unearned income",
    "adds_from_parameter": "gov.states.ca.cdss.tanf.cash.income.sources.other_unearned"
  },
  "ca_tanf_recipient_financial_test": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/eligibility/ca_tanf_recipient_financial_test.py",
    "parameters": {},
    "variables": [
      "ca_tanf_countable_income_recipient",
      "ca_tanf_maximum_payment"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Recipient Financial Test"
  },
  "ca_tanf_immigration_status_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/eligibility/ca_tanf_immigration_status_eligible_person.py",
    "parameters": {
      "p": "gov.states.ca.cdss.tanf.cash.immigration_status",
      "eligible_statuses": "gov.states.ca.cdss.tanf.cash.immigration_status.eligible_statuses"
    },
    "variables": [
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California TANF immigration status Eligibility"
  },
  "ca_tanf_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/eligibility/ca_tanf_eligible.py",
    "parameters": {},
    "variables": [
      "is_demographic_tanf_eligible",
      "ca_tanf_financial_eligible",
      "ca_tanf_vehicle_value_eligible",
      "ca_tanf_resources_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the California CalWORKs"
  },
  "ca_tanf_financial_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/eligibility/ca_tanf_financial_eligible.py",
    "parameters": {},
    "variables": [
      "is_tanf_enrolled",
      "ca_tanf_applicant_financial_test",
      "ca_tanf_recipient_financial_test"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Financial Eligibility"
  },
  "ca_tanf_exempt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/eligibility/ca_tanf_exempt.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ssi",
      "ca_in_home_supportive_services",
      "ca_state_disability_insurance",
      "workers_compensation"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Exempt Eligibility",
    "adds_from_parameter": "gov.states.ca.cdss.tanf.cash.exempt"
  },
  "ca_tanf_vehicle_value_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/eligibility/ca_tanf_vehicle_value_eligible.py",
    "parameters": {
      "p": "gov.states.ca.cdss.tanf.cash.resources.limit",
      "vehicle": "gov.states.ca.cdss.tanf.cash.resources.limit.vehicle"
    },
    "variables": [
      "household_vehicles_value"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible child for the California CalWORKs based on the vehicle value"
  },
  "ca_tanf_applicant_financial_test": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/eligibility/ca_tanf_applicant_financial_test.py",
    "parameters": {},
    "variables": [
      "ca_tanf_income_limit",
      "ca_tanf_countable_income_applicant"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Applicant Financial Test"
  },
  "ca_tanf_resources_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/eligibility/ca_tanf_resources_eligible.py",
    "parameters": {},
    "variables": [
      "ca_tanf_resources",
      "ca_tanf_resources_limit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the California CalWORKs based on the available resources"
  },
  "ca_tanf_region1": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/eligibility/ca_tanf_region1.py",
    "parameters": {
      "region1_counties": "gov.states.ca.cdss.tanf.cash.region1_counties"
    },
    "variables": [
      "county_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "In a CalWORKs region 1 county"
  },
  "ca_tanf_maximum_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/eligibility/ca_tanf_maximum_payment.py",
    "parameters": {
      "p": "gov.states.ca.cdss.tanf.cash.monthly_payment",
      "max_au_size": "gov.states.ca.cdss.tanf.cash.monthly_payment.max_au_size",
      "region1": "gov.states.ca.cdss.tanf.cash.monthly_payment.region1",
      "region2": "gov.states.ca.cdss.tanf.cash.monthly_payment.region2"
    },
    "variables": [
      "ca_tanf_region1",
      "ca_tanf_exempt",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Maximum Aid Payment"
  },
  "ca_tanf_income_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/cash/eligibility/ca_tanf_income_limit.py",
    "parameters": {
      "p": "gov.states.ca.cdss.tanf.cash.income.monthly_limit",
      "max_au_size": "gov.states.ca.cdss.tanf.cash.income.monthly_limit.max_au_size",
      "region1": "gov.states.ca.cdss.tanf.cash.income.monthly_limit.region1",
      "region2": "gov.states.ca.cdss.tanf.cash.income.monthly_limit.region2",
      "main": "gov.states.ca.cdss.tanf.cash.income.monthly_limit.region2.main",
      "additional": "gov.states.ca.cdss.tanf.cash.income.monthly_limit.region2.additional"
    },
    "variables": [
      "ca_tanf_region1",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Minimum Basic Standard of Adequate Care"
  },
  "ca_calworks_child_care_days_per_month": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/child_care_time/ca_calworks_child_care_days_per_month.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Child Care days per month"
  },
  "ca_calworks_child_care_weeks_per_month": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/child_care_time/ca_calworks_child_care_weeks_per_month.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Child Care weeks per month"
  },
  "ca_calworks_child_care_provider_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/child_care_time/ca_calworks_child_care_provider_category.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "Enum",
    "possible_values": "CaCalworksChildCareProviderCategory",
    "enum_options": [
      {
        "key": "CHILD_CARE_CENTER",
        "value": "Child care center"
      },
      {
        "key": "FAMILY_CHILD_CARE_HOME",
        "value": "Family and child care home"
      },
      {
        "key": "LICENSE_EXEMPT",
        "value": "License exempt"
      }
    ],
    "label": "California CalWORKs Child Care provider categroy"
  },
  "ca_calworks_child_care_full_time": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/child_care_time/ca_calworks_child_care_full_time.py",
    "parameters": {
      "p": "gov.states.ca.cdss.tanf.child_care.child_care_time.weekly_care",
      "weekly_child_care_hours_threshold": "gov.states.ca.cdss.tanf.child_care.child_care_time.weekly_care.weekly_child_care_hours_threshold"
    },
    "variables": [
      "childcare_hours_per_week",
      "ca_calworks_child_care_time_category"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether a child is classified as receiving full-time care for CalWORKs Child Care"
  },
  "ca_calworks_child_care_time_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/child_care_time/ca_calworks_child_care_time_category.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "Enum",
    "possible_values": "CaCalworksChildCareTimeCategory",
    "enum_options": [
      {
        "key": "HOURLY",
        "value": "Hourly"
      },
      {
        "key": "DAILY",
        "value": "Daily"
      },
      {
        "key": "WEEKLY",
        "value": "Weekly"
      },
      {
        "key": "MONTHLY",
        "value": "Monthly"
      }
    ],
    "label": "California CalWORKs Child Care time category"
  },
  "ca_calworks_child_care_immigration_status_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/eligibility/ca_calworks_child_care_immigration_status_eligible_person.py",
    "parameters": {
      "p": "gov.states.ca.cdss.tanf.child_care.eligibility.immigration_status",
      "eligible_statuses": "gov.states.ca.cdss.tanf.child_care.eligibility.immigration_status.eligible_statuses"
    },
    "variables": [
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Child Care immigration status Eligibility"
  },
  "ca_calworks_child_care_welfare_to_work": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/eligibility/ca_calworks_child_care_welfare_to_work.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Welfare to Work",
    "unit": "hour"
  },
  "ca_calworks_child_care_meets_work_requirement": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/eligibility/ca_calworks_child_care_meets_work_requirement.py",
    "parameters": {},
    "variables": [
      "ca_calworks_child_care_welfare_to_work",
      "earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets CalWORKs Child Care Work Requirement"
  },
  "ca_calworks_child_care_age_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/eligibility/ca_calworks_child_care_age_eligible.py",
    "parameters": {},
    "variables": [
      "ca_calworks_child_care_child_age_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Child Care SPMUnit Age Eligibility"
  },
  "ca_calworks_child_care_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/eligibility/ca_calworks_child_care_eligible.py",
    "parameters": {},
    "variables": [
      "ca_calworks_child_care_age_eligible",
      "ca_calworks_child_care_immigration_status_eligible_person",
      "ca_calworks_child_care_meets_work_requirement",
      "ca_tanf"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the California CalWORKs Child Care"
  },
  "ca_calworks_child_care_child_age_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/eligibility/ca_calworks_child_care_child_age_eligible.py",
    "parameters": {
      "p": "gov.states.ca.cdss.tanf.child_care.eligibility",
      "disabled_age_threshold": "gov.states.ca.cdss.tanf.child_care.eligibility.disabled_age_threshold",
      "age_threshold": "gov.states.ca.cdss.tanf.child_care.eligibility.age_threshold"
    },
    "variables": [
      "age",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible child for the California CalWORKs Child Care based on age"
  },
  "ca_calworks_child_care_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/reimbursement/ca_calworks_child_care_payment.py",
    "parameters": {},
    "variables": [
      "ca_calworks_child_care_payment_factor",
      "ca_calworks_child_care_time_coefficient",
      "pre_subsidy_childcare_expenses",
      "ca_calworks_child_care_payment_standard"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_calworks_child_care_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Child Care payment"
  },
  "ca_calworks_child_care": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/reimbursement/ca_calworks_child_care.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_calworks_child_care_payment"
    ],
    "subtracts": [],
    "defined_for": "ca_calworks_child_care_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Child Care final payment"
  },
  "ca_calworks_child_care_time_coefficient": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/reimbursement/ca_calworks_child_care_time_coefficient.py",
    "parameters": {},
    "variables": [
      "childcare_hours_per_day",
      "ca_calworks_child_care_weeks_per_month",
      "ca_calworks_child_care_time_category",
      "ca_calworks_child_care_days_per_month"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Child Care hours per month"
  },
  "ca_calworks_child_care_payment_factor": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/reimbursement/ca_calworks_child_care_payment_factor.py",
    "parameters": {
      "p": "gov.states.ca.cdss.tanf.child_care.rate_ceilings",
      "evening_or_weekend_I": "gov.states.ca.cdss.tanf.child_care.rate_ceilings.evening_or_weekend_I",
      "evening_or_weekend_II": "gov.states.ca.cdss.tanf.child_care.rate_ceilings.evening_or_weekend_II",
      "exceptional_needs": "gov.states.ca.cdss.tanf.child_care.rate_ceilings.exceptional_needs",
      "severely_disabled": "gov.states.ca.cdss.tanf.child_care.rate_ceilings.severely_disabled"
    },
    "variables": [
      "ca_calworks_child_care_factor_category"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Child Care payment factor"
  },
  "ca_calworks_child_care_payment_standard": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/reimbursement/ca_calworks_child_care_payment_standard.py",
    "parameters": {
      "p": "gov.states.ca.cdss.tanf.child_care.rate_ceilings",
      "standard": "gov.states.ca.cdss.tanf.child_care.rate_ceilings.standard",
      "age_threshold": "gov.states.ca.cdss.tanf.child_care.rate_ceilings.age_threshold",
      "lower": "gov.states.ca.cdss.tanf.child_care.rate_ceilings.age_threshold.lower",
      "higher": "gov.states.ca.cdss.tanf.child_care.rate_ceilings.age_threshold.higher"
    },
    "variables": [
      "ca_calworks_child_care_provider_category",
      "age",
      "ca_calworks_child_care_full_time",
      "ca_calworks_child_care_time_category"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_calworks_child_care_child_age_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CalWORKs Child Care Payment Standard"
  },
  "ca_calworks_child_care_factor_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/tanf/child_care/reimbursement/ca_calworks_child_care_factor_category.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "Enum",
    "possible_values": "CaCalworksChildCareFactorCategory",
    "enum_options": [
      {
        "key": "STANDARD",
        "value": "Standard Rate Ceilings"
      },
      {
        "key": "EVENING_AND_WEEKEND_I",
        "value": "Evening/Weekend Care Rate Ceilings (50% or more of time)"
      },
      {
        "key": "EVENING_AND_WEEKEND_II",
        "value": "Evening/Weekend Care Rate Ceilings (at least 10% but less than 50% of time)"
      },
      {
        "key": "EXCEPTIONAL_NEEDS",
        "value": "Exceptional Needs Care Rate Ceilings"
      },
      {
        "key": "SEVERELY_DISABLED",
        "value": "Severely Disabled Care Rate Ceilings"
      }
    ],
    "label": "California CalWORKs Child Care factor category"
  },
  "ca_state_supplement_payment_standard": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/state_supplement/payment_standard/ca_state_supplement_payment_standard.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_state_supplement_dependent_amount",
      "ca_state_supplement_food_allowance",
      "ca_state_supplement_medical_care_facility_amount",
      "ca_state_supplement_out_of_home_care_facility_amount",
      "ca_state_supplement_aged_blind_disabled_amount"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California SSI state supplement payment standard"
  },
  "ca_state_supplement_aged_disabled_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/state_supplement/payment_standard/ca_state_supplement_aged_disabled_count.py",
    "parameters": {
      "p": "gov.states.ca.cdss.state_supplement.payment_standard",
      "age_threshold": "gov.states.ca.cdss.state_supplement.payment_standard.aged_or_disabled.age_threshold",
      "aged_or_disabled": "gov.states.ca.cdss.state_supplement.payment_standard.aged_or_disabled"
    },
    "variables": [
      "monthly_age",
      "is_disabled",
      "ca_state_supplement_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "California SSI state supplement aged or disabled count"
  },
  "ca_state_supplement_aged_disabled_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/state_supplement/payment_standard/ca_state_supplement_aged_disabled_amount.py",
    "parameters": {
      "p": "gov.states.ca.cdss.state_supplement.payment_standard.aged_or_disabled.amount",
      "married": "gov.states.ca.cdss.state_supplement.payment_standard.aged_or_disabled.amount.married",
      "single": "gov.states.ca.cdss.state_supplement.payment_standard.aged_or_disabled.amount.single"
    },
    "variables": [
      "ca_state_supplement_aged_disabled_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_state_supplement_aged_disabled_count",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California SSI state supplement aged disabled amount"
  },
  "ca_state_supplement_food_allowance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/state_supplement/payment_standard/ca_state_supplement_food_allowance.py",
    "parameters": {
      "p": "gov.states.ca.cdss.state_supplement.payment_standard",
      "married": "gov.states.ca.cdss.state_supplement.payment_standard.allowance.food.married",
      "single": "gov.states.ca.cdss.state_supplement.payment_standard.allowance.food.single",
      "food": "gov.states.ca.cdss.state_supplement.payment_standard.allowance.food",
      "allowance": "gov.states.ca.cdss.state_supplement.payment_standard.allowance"
    },
    "variables": [
      "spm_unit_is_married",
      "ca_state_supplement_aged_disabled_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_state_supplement_food_allowance_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California SSI state supplement food allowance"
  },
  "ca_state_supplement_blind_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/state_supplement/payment_standard/ca_state_supplement_blind_amount.py",
    "parameters": {
      "p": "gov.states.ca.cdss.state_supplement.payment_standard",
      "single": "gov.states.ca.cdss.state_supplement.payment_standard.blind.single",
      "married": "gov.states.ca.cdss.state_supplement.payment_standard.blind.married",
      "two_blind": "gov.states.ca.cdss.state_supplement.payment_standard.blind.married.two_blind",
      "one_blind": "gov.states.ca.cdss.state_supplement.payment_standard.blind.married.one_blind",
      "blind": "gov.states.ca.cdss.state_supplement.payment_standard.blind"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "ca_state_supplement_eligible_person",
      "is_blind",
      "spm_unit_is_married"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California SSI state supplement blind amount"
  },
  "ca_state_supplement_aged_blind_disabled_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/state_supplement/payment_standard/ca_state_supplement_aged_blind_disabled_amount.py",
    "parameters": {},
    "variables": [
      "ca_state_supplement_aged_disabled_amount",
      "ca_state_supplement_blind_amount"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California SSI state supplement aged disabled and blind amount"
  },
  "ca_state_supplement_dependent_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/state_supplement/payment_standard/ca_state_supplement_dependent_amount.py",
    "parameters": {
      "p": "gov.states.ca.cdss.state_supplement.payment_standard",
      "age_limit": "gov.states.ca.cdss.state_supplement.payment_standard.dependent.age_limit",
      "amount": "gov.states.ca.cdss.state_supplement.payment_standard.dependent.amount",
      "dependent": "gov.states.ca.cdss.state_supplement.payment_standard.dependent"
    },
    "variables": [
      "is_blind",
      "monthly_age",
      "is_disabled",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California SSI state supplement dependent amount"
  },
  "ca_state_supplement_food_allowance_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/state_supplement/payment_standard/ca_state_supplement_food_allowance_eligible.py",
    "parameters": {},
    "variables": [
      "living_arrangements_allow_for_food_preparation",
      "ca_state_supplement_aged_disabled_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California SSI state supplement food allowance eligible"
  },
  "ca_state_supplement_medical_care_facility_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/state_supplement/payment_standard/ca_state_supplement_medical_care_facility_amount.py",
    "parameters": {
      "p": "gov.states.ca.cdss.state_supplement.payment_standard",
      "medical_care_facility": "gov.states.ca.cdss.state_supplement.payment_standard.allowance.medical_care_facility",
      "allowance": "gov.states.ca.cdss.state_supplement.payment_standard.allowance"
    },
    "variables": [
      "ca_state_supplement_eligible_person",
      "ca_in_medical_care_facility"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California SSI state supplement medical care facility amount"
  },
  "ca_state_supplement_out_of_home_care_facility_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/state_supplement/payment_standard/ca_state_supplement_out_of_home_care_facility_amount.py",
    "parameters": {
      "p": "gov.states.ca.cdss.state_supplement.payment_standard",
      "out_of_home_care": "gov.states.ca.cdss.state_supplement.payment_standard.allowance.out_of_home_care",
      "allowance": "gov.states.ca.cdss.state_supplement.payment_standard.allowance"
    },
    "variables": [
      "ca_state_supplement_eligible_person",
      "in_out_of_home_care_facility"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California SSI state supplement out of home care facility amount"
  },
  "ca_capi_resources": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/capi/resources/ca_capi_resources.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ssi_countable_resources",
      "ca_capi_countable_vehicle_value"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CAPI resources"
  },
  "ca_capi_countable_vehicle_value": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/capi/resources/ca_capi_countable_vehicle_value.py",
    "parameters": {
      "p": "gov.states.ca.cdss.capi.resources.vehicle",
      "disregard": "gov.states.ca.cdss.capi.resources.vehicle.disregard"
    },
    "variables": [
      "household_vehicles_value"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CAPI countable vehicle value"
  },
  "ca_capi_resource_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/capi/eligibility/ca_capi_resource_eligible.py",
    "parameters": {
      "p": "gov.states.ca.cdss.capi.resources",
      "couple": "gov.states.ca.cdss.capi.resources.limit.couple",
      "single": "gov.states.ca.cdss.capi.resources.limit.single",
      "limit": "gov.states.ca.cdss.capi.resources.limit"
    },
    "variables": [
      "spm_unit_is_married",
      "ca_capi_resources"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California CAPI resource eligible"
  },
  "ca_capi_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/capi/eligibility/ca_capi_eligible_person.py",
    "parameters": {},
    "variables": [
      "immigration_status",
      "is_ssi_aged_blind_disabled",
      "is_ssi_qualified_noncitizen",
      "is_ssi_eligible_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California CAPI eligible person"
  },
  "ca_capi_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/capi/eligibility/ca_capi_eligible.py",
    "parameters": {},
    "variables": [
      "ca_capi_eligible_person",
      "ca_capi_income_eligible",
      "ca_capi_resource_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California CAPI eligible"
  },
  "ca_capi_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cdss/capi/eligibility/ca_capi_income_eligible.py",
    "parameters": {},
    "variables": [
      "ca_capi_eligible_person",
      "ssi_amount_if_eligible",
      "ca_state_supplement_payment_standard",
      "ssi_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "California CAPI income eligible"
  },
  "is_ca_cvrp_increased_rebate_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/calepa/carb/cvrp/is_ca_cvrp_increased_rebate_eligible.py",
    "parameters": {
      "p": "gov.states.ca.calepa.carb.cvrp.increased_rebate",
      "fpl_limit": "gov.states.ca.calepa.carb.cvrp.increased_rebate.fpl_limit",
      "categorical_eligibility": "gov.states.ca.calepa.carb.cvrp.increased_rebate.categorical_eligibility"
    },
    "variables": [
      "school_meal_fpg_ratio"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for CVRP increased rebate",
    "description": "Eligible for increased rebate for low- and middle-income participants in California's Clean Vehicle Rebate Project (CVRP)"
  },
  "ca_cvrp_vehicle_rebate_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/calepa/carb/cvrp/ca_cvrp_vehicle_rebate_amount.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CVRP rebate for purchased vehicle",
    "description": "Rebate value for a purchased vehicle under the California Clean Vehicle Rebate Project (CVRP)"
  },
  "is_ca_cvrp_normal_rebate_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/calepa/carb/cvrp/is_ca_cvrp_normal_rebate_eligible.py",
    "parameters": {
      "caps": "gov.states.ca.calepa.carb.cvrp.income_cap"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for CVRP normal rebate",
    "description": "Eligible for California Clean Vehicle Rebate Project (CVRP) normal rebate"
  },
  "ca_cvrp": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/calepa/carb/cvrp/ca_cvrp.py",
    "parameters": {
      "p_increased_amount": "gov.states.ca.calepa.carb.cvrp.increased_rebate.amount"
    },
    "variables": [
      "is_ca_cvrp_normal_rebate_eligible",
      "is_ca_cvrp_increased_rebate_eligible",
      "ca_cvrp_vehicle_rebate_amount"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California Clean Vehicle Rebate Project",
    "description": "Total California Clean Vehicle Rebate Project (CVRP) benefit"
  },
  "ca_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/ca_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "ca_additions"
    ],
    "subtracts": [
      "ca_agi_subtractions"
    ],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CA AGI"
  },
  "ca_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/ca_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ca.tax.income",
      "amount": "gov.states.ca.tax.income.deductions.standard.amount",
      "calc": "gov.states.ca.tax.income.rates.single.calc",
      "standard": "gov.states.ca.tax.income.deductions.standard",
      "single": "gov.states.ca.tax.income.rates.single",
      "deductions": "gov.states.ca.tax.income.deductions",
      "rates": "gov.states.ca.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California withheld income tax"
  },
  "ca_use_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/ca_use_tax.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.use_tax",
      "calc": "gov.states.ca.tax.income.use_tax.additional.calc",
      "main": "gov.states.ca.tax.income.use_tax.main",
      "additional": "gov.states.ca.tax.income.use_tax.additional"
    },
    "variables": [
      "ca_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CA Use Tax"
  },
  "ca_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/ca_income_tax_before_credits.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.rates",
      "calc": "gov.states.ca.tax.income.rates.head_of_household.calc",
      "rates": "gov.states.ca.tax.income.rates"
    },
    "variables": [
      "ca_taxable_income",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CA income tax before credits"
  },
  "ca_agi_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/ca_agi_subtractions.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.agi",
      "subtractions": "gov.states.ca.tax.income.agi.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CA AGI subtractions from federal AGI"
  },
  "ca_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/ca_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CA AGI additions to federal AGI"
  },
  "ca_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/ca_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_income_tax_before_refundable_credits",
      "ca_mental_health_services_tax",
      "ca_use_tax"
    ],
    "subtracts": [
      "ca_refundable_credits"
    ],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CA income tax"
  },
  "ca_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/ca_taxable_income.py",
    "parameters": {},
    "variables": [
      "ca_deductions",
      "ca_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CA taxable income"
  },
  "ca_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/ca_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ca_income_tax_before_credits",
      "ca_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CA income tax before refundable credits"
  },
  "ca_mental_health_services_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/ca_mental_health_services_tax.py",
    "parameters": {
      "rate": "gov.states.ca.tax.income.mental_health_services",
      "calc": "gov.states.ca.tax.income.mental_health_services.calc"
    },
    "variables": [
      "ca_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CA mental health services tax",
    "bracket_parameters": {
      "rate": "gov.states.ca.tax.income.mental_health_services"
    }
  },
  "ca_amt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/alternative_minimum_tax/ca_amt.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.amt",
      "tentative_min_tax_rate": "gov.states.ca.tax.income.amt.tentative_min_tax_rate"
    },
    "variables": [
      "ca_income_tax_before_credits",
      "ca_amt_exemption",
      "ca_amti"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California alternative minimum tax"
  },
  "ca_investment_interest_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/deductions/ca_investment_interest_deduction.py",
    "parameters": {},
    "variables": [
      "investment_expenses",
      "investment_interest_expense",
      "investment_income_form_4952"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California investment interest deduction"
  },
  "ca_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/deductions/ca_deductions.py",
    "parameters": {},
    "variables": [
      "ca_itemized_deductions",
      "ca_standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California deductions"
  },
  "ca_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/exemptions/ca_exemptions.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.exemptions",
      "personal_scale": "gov.states.ca.tax.income.exemptions.personal_scale",
      "amount": "gov.states.ca.tax.income.exemptions.amount",
      "phase_out": "gov.states.ca.tax.income.exemptions.phase_out",
      "dependent_amount": "gov.states.ca.tax.income.exemptions.dependent_amount",
      "start": "gov.states.ca.tax.income.exemptions.phase_out.start",
      "increment": "gov.states.ca.tax.income.exemptions.phase_out.increment"
    },
    "variables": [
      "tax_unit_dependents",
      "filing_status",
      "aged_blind_count",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CA Exemptions"
  },
  "ca_federal_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/ca_federal_cdcc.py",
    "parameters": {},
    "variables": [
      "ca_cdcc_relevant_expenses",
      "ca_cdcc_rate"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Child and Dependent Care Expenses Credit replicated to include California limitations",
    "description": "https://www.ftb.ca.gov/about-ftb/data-reports-plans/Summary-of-Federal-Income-Tax-Changes/index.html#PL-117-2-9631"
  },
  "ca_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/ca_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_foster_youth_tax_credit",
      "ca_eitc",
      "ca_yctc",
      "ca_sf_wftc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California refundable income tax credits",
    "adds_from_parameter": "gov.states.ca.tax.income.credits.refundable"
  },
  "ca_cdcc_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/ca_cdcc_rate.py",
    "parameters": {
      "p": "gov.irs.credits.cdcc",
      "phase_out": "gov.irs.credits.cdcc.phase_out"
    },
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CDCC credit rate replicated to include California limitations"
  },
  "ca_renter_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/ca_renter_credit.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.credits.renter",
      "income_cap": "gov.states.ca.tax.income.credits.renter.income_cap",
      "amount": "gov.states.ca.tax.income.credits.renter.amount"
    },
    "variables": [
      "ca_agi",
      "filing_status",
      "rent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California Renter Tax Credit",
    "description": "https://casetext.com/statute/california-codes/california-revenue-and-taxation-code/division-2-other-taxes/part-10-personal-income-tax/chapter-2-imposition-of-tax/section-170535-credit-for-qualified-renter"
  },
  "ca_cdcc_relevant_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/ca_cdcc_relevant_expenses.py",
    "parameters": {
      "cdcc": "gov.irs.credits.cdcc",
      "max": "gov.irs.credits.cdcc.max",
      "eligibility": "gov.irs.credits.cdcc.eligibility"
    },
    "variables": [
      "min_head_spouse_earned",
      "count_cdcc_eligible",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CDCC-relevant care expenses replicated to include California limitations"
  },
  "ca_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/ca_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_exemptions",
      "ca_cdcc",
      "ca_renter_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California nonrefundable income tax credits",
    "adds_from_parameter": "gov.states.ca.tax.income.credits.nonrefundable"
  },
  "ca_federal_capped_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/ca_federal_capped_cdcc.py",
    "parameters": {
      "p": "gov.irs.credits"
    },
    "variables": [
      "income_tax_before_credits",
      "foreign_tax_credit",
      "ca_federal_cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped child/dependent care credit replicated to include California limitations"
  },
  "ca_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/ca_cdcc.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.credits.child_dependent_care",
      "input": "gov.states.ca.tax.income.credits.child_dependent_care.input",
      "rate": "gov.states.ca.tax.income.credits.child_dependent_care.rate",
      "calc": "gov.states.ca.tax.income.credits.child_dependent_care.rate.calc"
    },
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California Child and Dependent Care Expenses Credit",
    "description": "https://www.ftb.ca.gov/forms/2020/2020-3506-instructions.html"
  },
  "ca_yctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/young_child/ca_yctc.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.credits.young_child",
      "ineligible_age": "gov.states.ca.tax.income.credits.young_child.ineligible_age",
      "loss_threshold": "gov.states.ca.tax.income.credits.young_child.loss_threshold",
      "amount": "gov.states.ca.tax.income.credits.young_child.amount",
      "phase_out": "gov.states.ca.tax.income.credits.young_child.phase_out",
      "increment": "gov.states.ca.tax.income.credits.young_child.phase_out.increment",
      "start": "gov.states.ca.tax.income.credits.young_child.phase_out.start"
    },
    "variables": [
      "irs_gross_income",
      "filer_adjusted_earnings",
      "ca_eitc_eligible",
      "age",
      "ca_eitc",
      "tax_unit_earned_income",
      "ca_is_qualifying_child_for_caleitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California Young Child Tax Credit"
  },
  "ca_is_qualifying_child_for_caleitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/earned_income/ca_is_qualifying_child_for_caleitc.py",
    "parameters": {},
    "variables": [
      "is_child_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Child qualifies for CalEITC"
  },
  "ca_eitc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/earned_income/ca_eitc_eligible.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.credits.earned_income",
      "max_investment_income": "gov.states.ca.tax.income.credits.earned_income.eligibility.max_investment_income",
      "age": "gov.states.ca.tax.income.credits.earned_income.eligibility.age",
      "eligibility": "gov.states.ca.tax.income.credits.earned_income.eligibility",
      "min": "gov.states.ca.tax.income.credits.earned_income.eligibility.age.min",
      "max": "gov.states.ca.tax.income.credits.earned_income.eligibility.age.max"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent",
      "eitc_relevant_investment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "CalEITC eligible"
  },
  "ca_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/earned_income/ca_eitc.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.credits.earned_income",
      "end": "gov.states.ca.tax.income.credits.earned_income.phase_out.final.end",
      "start": "gov.states.ca.tax.income.credits.earned_income.phase_out.final.start",
      "factor": "gov.states.ca.tax.income.credits.earned_income.adjustment.factor",
      "calc": "gov.states.ca.tax.income.credits.earned_income.phase_out.rate.calc",
      "final": "gov.states.ca.tax.income.credits.earned_income.phase_out.final",
      "rate": "gov.states.ca.tax.income.credits.earned_income.phase_out.rate",
      "adjustment": "gov.states.ca.tax.income.credits.earned_income.adjustment",
      "earned_income_amount": "gov.states.ca.tax.income.credits.earned_income.earned_income_amount",
      "phase_out": "gov.states.ca.tax.income.credits.earned_income.phase_out",
      "phase_in": "gov.states.ca.tax.income.credits.earned_income.phase_in"
    },
    "variables": [
      "filer_adjusted_earnings",
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_eitc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CalEITC"
  },
  "ca_foster_youth_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/foster_youth/ca_foster_youth_tax_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_foster_youth_tax_credit_person"
    ],
    "subtracts": [],
    "defined_for": "ca_eitc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California foster youth tax credit"
  },
  "ca_foster_youth_tax_credit_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/foster_youth/ca_foster_youth_tax_credit_person.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.credits.foster_youth",
      "calc": "gov.states.ca.tax.income.credits.foster_youth.amount.calc",
      "increment": "gov.states.ca.tax.income.credits.foster_youth.phase_out.increment",
      "amount": "gov.states.ca.tax.income.credits.foster_youth.phase_out.amount",
      "start": "gov.states.ca.tax.income.credits.foster_youth.phase_out.start",
      "phase_out": "gov.states.ca.tax.income.credits.foster_youth.phase_out"
    },
    "variables": [
      "tax_unit_earned_income",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_foster_youth_tax_credit_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California foster youth tax credit"
  },
  "ca_foster_youth_tax_credit_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/credits/foster_youth/ca_foster_youth_tax_credit_eligible_person.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "was_in_foster_care"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the California foster youth tax credit"
  },
  "ca_itemized_deductions_pre_limitation": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/deductions/itemized/ca_itemized_deductions_pre_limitation.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_investment_interest_deduction",
      "real_estate_taxes",
      "itemized_deductions_less_salt"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California pre-limitation itemized deductions"
  },
  "ca_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/deductions/itemized/ca_itemized_deductions.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.deductions.itemized",
      "excluded_deductions": "gov.states.ca.tax.income.deductions.itemized.limit.excluded_deductions",
      "ded_fraction": "gov.states.ca.tax.income.deductions.itemized.limit.ded_fraction",
      "agi_fraction": "gov.states.ca.tax.income.deductions.itemized.limit.agi_fraction",
      "agi_threshold": "gov.states.ca.tax.income.deductions.itemized.limit.agi_threshold",
      "limit": "gov.states.ca.tax.income.deductions.itemized.limit"
    },
    "variables": [
      "ca_itemized_deductions_pre_limitation",
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California itemized deductions"
  },
  "ca_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/deductions/standard/ca_standard_deduction.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.deductions.standard",
      "amount": "gov.states.ca.tax.income.deductions.standard.amount"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California standard deduction",
    "description": "https://www.ftb.ca.gov/forms/2021/2021-540.pdf"
  },
  "ca_amt_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/alternative_minimum_tax/exemption/ca_amt_exemption.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.amt.exemption",
      "p_irs": "gov.irs.income.amt.exemption",
      "amount": "gov.states.ca.tax.income.amt.exemption.amount",
      "amti": "gov.states.ca.tax.income.amt.exemption.amti",
      "lower": "gov.states.ca.tax.income.amt.exemption.amti.threshold.lower",
      "rate": "gov.irs.income.amt.exemption.phase_out.rate",
      "child": "gov.irs.income.amt.exemption.child",
      "phase_out": "gov.irs.income.amt.exemption.phase_out",
      "threshold": "gov.states.ca.tax.income.amt.exemption.amti.threshold"
    },
    "variables": [
      "filing_status",
      "head_earned",
      "ca_amti",
      "is_child_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California AMT exemption amount"
  },
  "ca_pre_exemption_amti": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/alternative_minimum_tax/amti/ca_pre_exemption_amti.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_amti_adjustments",
      "ca_taxable_income",
      "ca_itemized_deductions_pre_limitation"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California pre-exemption alternative minimum taxable income"
  },
  "ca_amti": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/alternative_minimum_tax/amti/ca_amti.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.amt.exemption",
      "p_us": "gov.irs.income.amt.capital_gains",
      "upper": "gov.states.ca.tax.income.amt.exemption.amti.threshold.upper",
      "capital_gain_excess_tax_rate": "gov.irs.income.amt.capital_gains.capital_gain_excess_tax_rate",
      "amount": "gov.states.ca.tax.income.amt.exemption.amount",
      "amti": "gov.states.ca.tax.income.amt.exemption.amti",
      "threshold": "gov.states.ca.tax.income.amt.exemption.amti.threshold"
    },
    "variables": [
      "filing_status",
      "ca_pre_exemption_amti"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California alternative minimum taxable income"
  },
  "ca_amti_adjustments": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/tax/income/alternative_minimum_tax/amti/ca_amti_adjustments.py",
    "parameters": {
      "p": "gov.states.ca.tax.income.amt",
      "sources": "gov.states.ca.tax.income.amt.amti.sources",
      "amti": "gov.states.ca.tax.income.amt.amti"
    },
    "variables": [
      "ca_itemized_deductions",
      "ca_investment_interest_deduction",
      "ca_standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California AMTI adjustment"
  },
  "ca_ffyp_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/dhcs/ffyp/ca_ffyp_eligible.py",
    "parameters": {
      "p": "gov.states.ca.dhcs.ffyp",
      "foster_care_age_minimum": "gov.states.ca.dhcs.ffyp.foster_care_age_minimum",
      "age_threshold": "gov.states.ca.dhcs.ffyp.age_threshold"
    },
    "variables": [
      "was_in_foster_care",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the California Former Foster Youth Program"
  },
  "ca_care": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cpuc/care/ca_care.py",
    "parameters": {},
    "variables": [
      "ca_care_eligible",
      "ca_care_amount_if_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_care_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CARE",
    "description": "California's CARE program provides this electricity discount to eligible households."
  },
  "ca_care_amount_if_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cpuc/care/ca_care_amount_if_eligible.py",
    "parameters": {
      "p": "gov.states.ca.cpuc.care",
      "discount": "gov.states.ca.cpuc.care.discount"
    },
    "variables": [
      "pre_subsidy_electricity_expense"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California CARE amount discounted",
    "description": "California's CARE program provides this electricity discount to eligible households."
  },
  "ca_fera": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cpuc/fera/ca_fera.py",
    "parameters": {},
    "variables": [
      "ca_fera_eligible",
      "ca_fera_amount_if_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California FERA",
    "description": "California's FERA program provides this electricity discount to eligible households."
  },
  "ca_fera_amount_if_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cpuc/fera/ca_fera_amount_if_eligible.py",
    "parameters": {
      "p": "gov.states.ca.cpuc.fera",
      "discount": "gov.states.ca.cpuc.fera.discount"
    },
    "variables": [
      "pre_subsidy_electricity_expense"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "California FERA discounted amount",
    "description": "California's CARE program provides this electricity discount to eligible households."
  },
  "ca_fera_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cpuc/fera/ca_fera_eligible.py",
    "parameters": {
      "p": "gov.states.ca.cpuc.fera.eligibility",
      "minimum_household_size": "gov.states.ca.cpuc.fera.eligibility.minimum_household_size",
      "fpl_limit": "gov.states.ca.cpuc.fera.eligibility.fpl_limit"
    },
    "variables": [
      "ca_care_eligible",
      "household_market_income",
      "household_size",
      "ca_care_poverty_line"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for California FERA program",
    "description": "Eligible for California Alternate Rates for Energy"
  },
  "ca_care_poverty_line": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cpuc/care/eligibility/ca_care_poverty_line.py",
    "parameters": {
      "p_fpg": "gov.hhs.fpg",
      "first_person": "gov.hhs.fpg.first_person",
      "additional_person": "gov.hhs.fpg.additional_person"
    },
    "variables": [
      "household_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Poverty line as defined for California CARE program"
  },
  "ca_care_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cpuc/care/eligibility/ca_care_income_eligible.py",
    "parameters": {
      "p": "gov.states.ca.cpuc.care.eligibility",
      "fpl_limit": "gov.states.ca.cpuc.care.eligibility.fpl_limit"
    },
    "variables": [
      "household_market_income",
      "ca_care_poverty_line"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for California CARE program by virtue of income",
    "description": "Eligible for California Alternate Rates for Energy"
  },
  "ca_care_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cpuc/care/eligibility/ca_care_eligible.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_care_categorically_eligible",
      "ca_care_income_eligible"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for California CARE program",
    "description": "Eligible for California Alternate Rates for Energy"
  },
  "ca_care_categorically_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ca/cpuc/care/eligibility/ca_care_categorically_eligible.py",
    "parameters": {
      "p": "gov.states.ca.cpuc.care.eligibility",
      "categorical": "gov.states.ca.cpuc.care.eligibility.categorical",
      "tribal_categorical": "gov.states.ca.cpuc.care.eligibility.tribal_categorical"
    },
    "variables": [
      "is_on_tribal_land"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for California CARE program by virtue of participation in a qualifying program",
    "description": "Eligible for California Alternate Rates for Energy"
  },
  "co_ccap_child_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/co_ccap_child_eligible.py",
    "parameters": {
      "p": "gov.states.co.ccap",
      "disabled_age_limit": "gov.states.co.ccap.disabled_age_limit",
      "age_limit": "gov.states.co.ccap.age_limit"
    },
    "variables": [
      "is_tax_unit_dependent",
      "age",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Child eligibility for Colorado Child Care Assistance Program"
  },
  "co_ccap_base_parent_fee": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/co_ccap_base_parent_fee.py",
    "parameters": {
      "p": "gov.states.co.ccap",
      "calc": "gov.states.co.ccap.parent_fee.base.calc",
      "base": "gov.states.co.ccap.parent_fee.base",
      "parent_fee": "gov.states.co.ccap.parent_fee"
    },
    "variables": [
      "snap_fpg",
      "co_ccap_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Child Care Assistance Program base parent fee"
  },
  "co_ccap_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/co_ccap_countable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "snap_earned_income",
      "snap_unearned_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Child Care Assitance Program Countable Income"
  },
  "co_ccap_parent_fee": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/co_ccap_parent_fee.py",
    "parameters": {
      "p": "gov.states.co.ccap",
      "calc": "gov.states.co.ccap.is_quality_rating_discounted.calc",
      "parent_fee_rate_by_child_care_hours": "gov.states.co.ccap.parent_fee_rate_by_child_care_hours",
      "is_quality_rating_discounted": "gov.states.co.ccap.is_quality_rating_discounted"
    },
    "variables": [
      "co_ccap_eligible_children",
      "co_ccap_add_on_parent_fee",
      "co_quality_rating_of_child_care_facility",
      "co_ccap_base_parent_fee",
      "childcare_hours_per_day",
      "co_ccap_child_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Child Care Assistance Program parent fee"
  },
  "co_ccap_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/co_ccap_eligible.py",
    "parameters": {},
    "variables": [
      "co_ccap_is_in_re_determination_process",
      "co_ccap_entry_eligible",
      "co_ccap_is_in_entry_process",
      "co_ccap_re_determination_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Colorado Child Care Assistance Program"
  },
  "co_ccap_add_on_parent_fee": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/co_ccap_add_on_parent_fee.py",
    "parameters": {
      "p": "gov.states.co.ccap",
      "add_on": "gov.states.co.ccap.parent_fee.add_on",
      "parent_fee": "gov.states.co.ccap.parent_fee"
    },
    "variables": [
      "co_ccap_eligible_children",
      "snap_fpg",
      "co_ccap_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Child Care Assistance Program add on parent fee"
  },
  "co_quality_rating_of_child_care_facility": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/co_quality_rating_of_child_care_facility.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Quality rating of child care facility for Colorado Child Care Assistance Program"
  },
  "co_ccap_eligible_children": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/co_ccap_eligible_children.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "co_ccap_child_eligible"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of children eligible for Colorado Child Care Assistance Program"
  },
  "co_ccap_subsidy": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/co_ccap_subsidy.py",
    "parameters": {},
    "variables": [
      "after_school_expenses",
      "pre_subsidy_childcare_expenses",
      "co_ccap_parent_fee"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_ccap_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Child Care Assistance Program"
  },
  "co_ccap_smi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/co_ccap_smi.py",
    "parameters": {
      "amount": "gov.hhs.smi.amount",
      "adjustment_mapping": "gov.hhs.smi.household_size_adjustment",
      "first_person": "gov.hhs.smi.household_size_adjustment.first_person",
      "second_to_sixth_person": "gov.hhs.smi.household_size_adjustment.second_to_sixth_person",
      "additional_person": "gov.hhs.smi.household_size_adjustment.additional_person"
    },
    "variables": [
      "state_code_str",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State median income for Colorado CCAP",
    "description": "The state median income used to determine eligibility for Colorado's Child Care Assistance Program. This differs from the HHS definition by basing it on the prior year if before October, and dividing by 12."
  },
  "co_tanf_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/cdhs/tanf/co_tanf_eligible.py",
    "parameters": {},
    "variables": [
      "is_demographic_tanf_eligible",
      "co_tanf_income_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado TANF eligible"
  },
  "co_tanf_grant_standard": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/cdhs/tanf/co_tanf_grant_standard.py",
    "parameters": {
      "p": "gov.states.co.cdhs.tanf.grant_standard",
      "main": "gov.states.co.cdhs.tanf.grant_standard.main",
      "additional_child": "gov.states.co.cdhs.tanf.grant_standard.additional_child",
      "pregnancy_allowance": "gov.states.co.cdhs.tanf.grant_standard.pregnancy_allowance"
    },
    "variables": [
      "is_pregnant",
      "spm_unit_count_adults",
      "co_tanf_count_children"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_tanf_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado TANF grant standard"
  },
  "co_tanf_need_standard": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/cdhs/tanf/co_tanf_need_standard.py",
    "parameters": {
      "p": "gov.states.co.cdhs.tanf.need_standard",
      "main": "gov.states.co.cdhs.tanf.need_standard.main",
      "additional_child": "gov.states.co.cdhs.tanf.need_standard.additional_child"
    },
    "variables": [
      "spm_unit_count_adults",
      "co_tanf_count_children"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado TANF need standard"
  },
  "co_tanf_count_children": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/cdhs/tanf/co_tanf_count_children.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "is_child",
      "is_pregnant"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado TANF number of children"
  },
  "co_tanf_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/cdhs/tanf/co_tanf_income_eligible.py",
    "parameters": {},
    "variables": [
      "co_tanf_countable_earned_income_need",
      "co_tanf_need_standard",
      "co_tanf_countable_gross_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado TANF income eligible"
  },
  "co_tanf": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/cdhs/tanf/co_tanf.py",
    "parameters": {},
    "variables": [
      "co_tanf_countable_earned_income_grant_standard",
      "co_tanf_grant_standard",
      "co_tanf_countable_gross_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_tanf_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado TANF"
  },
  "co_tanf_countable_earned_income_grant_standard": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/cdhs/tanf/income/co_tanf_countable_earned_income_grant_standard.py",
    "parameters": {
      "p": "gov.states.co.cdhs.tanf.income.earned_exclusion",
      "percent": "gov.states.co.cdhs.tanf.income.earned_exclusion.percent"
    },
    "variables": [
      "co_tanf_countable_gross_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado TANF total countable earned income for grant standard"
  },
  "co_tanf_countable_gross_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/cdhs/tanf/income/co_tanf_countable_gross_unearned_income.py",
    "parameters": {
      "p": "gov.states.co.cdhs.tanf.income",
      "unearned": "gov.states.co.cdhs.tanf.income.unearned"
    },
    "variables": [
      "child_support_received",
      "is_tanf_enrolled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado TANF countable gross unearned income"
  },
  "co_tanf_countable_earned_income_need": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/cdhs/tanf/income/co_tanf_countable_earned_income_need.py",
    "parameters": {
      "p": "gov.states.co.cdhs.tanf.income.earned_exclusion",
      "flat": "gov.states.co.cdhs.tanf.income.earned_exclusion.flat",
      "percent": "gov.states.co.cdhs.tanf.income.earned_exclusion.percent"
    },
    "variables": [
      "co_tanf_countable_gross_earned_income",
      "is_tanf_enrolled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado TANF total countable income for need determination"
  },
  "co_tanf_countable_gross_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/cdhs/tanf/income/co_tanf_countable_gross_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado TANF countable gross earned income",
    "adds_from_parameter": "gov.states.co.cdhs.tanf.income.earned"
  },
  "co_chp": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/hcpf/chp/co_chp.py",
    "parameters": {
      "p": "gov.states.co.hcpf.chp",
      "expenses": "gov.states.co.hcpf.chp.expenses",
      "copays": "gov.states.co.hcpf.chp.copays"
    },
    "variables": [
      "is_pregnant",
      "medicaid_income_level"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Child Health Plan Plus expense savings"
  },
  "co_chp_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/hcpf/chp/co_chp_eligible.py",
    "parameters": {
      "p": "gov.states.co.hcpf.chp",
      "income_limit": "gov.states.co.hcpf.chp.income_limit",
      "child": "gov.states.co.hcpf.chp.child",
      "calc": "gov.states.co.hcpf.chp.child.calc"
    },
    "variables": [
      "is_medicaid_eligible",
      "is_pregnant",
      "medicaid_income_level",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Child Health Plan Plus eligibility"
  },
  "co_chp_out_of_pocket_maximum": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/hcpf/chp/co_chp_out_of_pocket_maximum.py",
    "parameters": {
      "percent": "gov.states.co.hcpf.chp.out_of_pocket"
    },
    "variables": [
      "medicaid_magi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Child Health Plan Plus out of pocket maximum"
  },
  "co_oap_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ssa/oap/co_oap_eligible.py",
    "parameters": {
      "p": "gov.states.co.ssa.oap",
      "couple": "gov.states.co.ssa.oap.resources.couple",
      "single": "gov.states.co.ssa.oap.resources.single",
      "calc": "gov.states.co.ssa.oap.age_range.calc",
      "resources": "gov.states.co.ssa.oap.resources",
      "age_range": "gov.states.co.ssa.oap.age_range"
    },
    "variables": [
      "ssi_claim_is_joint",
      "age",
      "ssi_countable_resources"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Old Age Pension Eligible"
  },
  "co_oap": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ssa/oap/co_oap.py",
    "parameters": {
      "p": "gov.states.co.ssa.oap",
      "grant_standard": "gov.states.co.ssa.oap.grant_standard"
    },
    "variables": [
      "ssi_countable_income",
      "ssi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_oap_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Old Age Pension"
  },
  "co_state_supplement_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ssa/state_suplement/co_state_supplement_eligible.py",
    "parameters": {
      "p": "gov.states.co.ssa.state_supplement",
      "calc": "gov.states.co.ssa.state_supplement.age_range.calc",
      "age_range": "gov.states.co.ssa.state_supplement.age_range"
    },
    "variables": [
      "is_blind",
      "age",
      "is_ssi_disabled",
      "is_ssi_eligible_individual"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado State Supplement Eligible"
  },
  "co_state_supplement": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ssa/state_suplement/co_state_supplement.py",
    "parameters": {
      "p": "gov.states.co.ssa.state_supplement",
      "grant_standard": "gov.states.co.ssa.state_supplement.grant_standard"
    },
    "variables": [
      "ssi_countable_income",
      "ssi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_state_supplement_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado State Supplement"
  },
  "co_ccap_is_in_re_determination_process": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/re_determination/co_ccap_is_in_re_determination_process.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether applicants are in the re-determination process of the Colorado Child Care Assistance Program"
  },
  "co_ccap_re_determination_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/re_determination/co_ccap_re_determination_eligible.py",
    "parameters": {},
    "variables": [
      "co_ccap_eligible_children",
      "co_ccap_re_determination_income_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the re-determination of the Colorado Child Care Assistance Program"
  },
  "co_ccap_re_determination_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/re_determination/co_ccap_re_determination_income_eligible.py",
    "parameters": {
      "p": "gov.states.co.ccap",
      "smi_rate": "gov.states.co.ccap.re_determination.smi_rate",
      "re_determination": "gov.states.co.ccap.re_determination"
    },
    "variables": [
      "co_ccap_smi",
      "co_ccap_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the re-determination of Colorado Child Care Assistance Program through income"
  },
  "co_ccap_entry_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/entry/co_ccap_entry_eligible.py",
    "parameters": {},
    "variables": [
      "co_ccap_eligible_children",
      "co_ccap_entry_income_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the entry of the Colorado Child Care Assistance Program"
  },
  "co_ccap_entry_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/entry/co_ccap_entry_income_eligible.py",
    "parameters": {},
    "variables": [
      "co_ccap_fpg_eligible",
      "co_ccap_smi_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the entry of Colorado Child Care Assistance Program through income"
  },
  "co_ccap_fpg_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/entry/co_ccap_fpg_eligible.py",
    "parameters": {
      "p": "gov.states.co.ccap",
      "fpg_rate": "gov.states.co.ccap.entry.fpg_rate",
      "entry": "gov.states.co.ccap.entry"
    },
    "variables": [
      "state_code_str",
      "county_str",
      "snap_fpg",
      "co_ccap_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets Colorado Child Care Assistance Program poverty-based income eligibility test"
  },
  "co_ccap_smi_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/entry/co_ccap_smi_eligible.py",
    "parameters": {
      "p": "gov.states.co.ccap",
      "smi_rate": "gov.states.co.ccap.entry.smi_rate",
      "entry": "gov.states.co.ccap.entry"
    },
    "variables": [
      "co_ccap_smi",
      "co_ccap_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets Colorado Child Care Assistance Program state median income-based income eligibility test"
  },
  "co_ccap_is_in_entry_process": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/ccap/entry/co_ccap_is_in_entry_process.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether applicants are in the entry process of the Colorado Child Care Assistance Program"
  },
  "co_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/co_withheld_income_tax.py",
    "parameters": {
      "p_irs": "gov.irs.deductions.standard",
      "p": "gov.states.co.tax.income",
      "amount": "gov.irs.deductions.standard.amount",
      "rate": "gov.states.co.tax.income.rate"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado withheld income tax"
  },
  "co_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/co_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "co_ctc",
      "co_cdcc",
      "co_family_affordability_credit",
      "co_low_income_cdcc",
      "co_income_qualified_senior_housing_credit",
      "co_eitc",
      "co_sales_tax_refund"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado refundable credits",
    "adds_from_parameter": "gov.states.co.tax.income.credits.refundable"
  },
  "co_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/co_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado non-refundable credits"
  },
  "co_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/co_taxable_income.py",
    "parameters": {},
    "variables": [
      "co_subtractions",
      "taxable_income",
      "co_additions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado taxable income"
  },
  "co_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/co_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "rate": "gov.states.co.tax.income.rate"
    },
    "variables": [
      "co_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado income tax before non-refundable credits"
  },
  "co_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/co_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "co_non_refundable_credits",
      "co_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado income tax before refundable credits"
  },
  "co_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/co_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "co_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "co_refundable_credits"
    ],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado income tax"
  },
  "co_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/subtractions/co_subtractions.py",
    "parameters": {
      "p": "gov.states.co.tax.income.subtractions",
      "subtractions": "gov.states.co.tax.income.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado subtractions"
  },
  "co_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/additions/co_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "co_state_addback",
      "co_qualified_business_income_deduction_addback",
      "co_federal_deduction_addback"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado additions to federal taxable income",
    "adds_from_parameter": "gov.states.co.tax.income.additions.additions"
  },
  "co_state_addback": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/additions/co_state_addback.py",
    "parameters": {
      "p": "gov.irs.deductions",
      "itemized_deductions": "gov.irs.deductions.itemized_deductions"
    },
    "variables": [
      "standard_deduction",
      "state_withheld_income_tax",
      "salt_deduction",
      "real_estate_taxes",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado state income tax addback"
  },
  "co_property_tax_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/exemptions/co_property_tax_exemption.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado property tax exemption"
  },
  "co_income_qualified_senior_housing_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/income_qualified_senior_housing/co_income_qualified_senior_housing_credit.py",
    "parameters": {
      "p": "gov.states.co.tax.income.credits.income_qualified_senior_housing",
      "max_amount": "gov.states.co.tax.income.credits.income_qualified_senior_housing.reduction.max_amount",
      "start": "gov.states.co.tax.income.credits.income_qualified_senior_housing.reduction.start",
      "increment": "gov.states.co.tax.income.credits.income_qualified_senior_housing.reduction.increment",
      "amount": "gov.states.co.tax.income.credits.income_qualified_senior_housing.reduction.amount",
      "reduction": "gov.states.co.tax.income.credits.income_qualified_senior_housing.reduction"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_income_qualified_senior_housing_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Income Qualified Senior Housing Income Tax Credit"
  },
  "co_sales_tax_refund_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/sales_tax_refund/co_sales_tax_refund_eligible.py",
    "parameters": {
      "p": "gov.states.co.tax.income.credits.sales_tax_refund",
      "age_threshold": "gov.states.co.tax.income.credits.sales_tax_refund.age_threshold"
    },
    "variables": [
      "age_head",
      "irs_employment_income",
      "age_spouse",
      "co_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Colorado sales tax refund"
  },
  "co_modified_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/sales_tax_refund/co_modified_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "tax_exempt_social_security"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado modified adjusted gross income for the sales tax refund",
    "adds_from_parameter": "gov.states.co.tax.income.credits.sales_tax_refund.magi_sources"
  },
  "co_sales_tax_refund": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/sales_tax_refund/co_sales_tax_refund.py",
    "parameters": {
      "p": "gov.states.co.tax.income.credits.sales_tax_refund.amount",
      "multiplier": "gov.states.co.tax.income.credits.sales_tax_refund.amount.multiplier",
      "flat_amount_enabled": "gov.states.co.tax.income.credits.sales_tax_refund.amount.flat_amount_enabled",
      "amount": "gov.states.co.tax.income.credits.sales_tax_refund.amount.amount",
      "scale": "gov.states.co.tax.income.credits.sales_tax_refund.amount.scale",
      "calc": "gov.states.co.tax.income.credits.sales_tax_refund.amount.scale.calc"
    },
    "variables": [
      "co_modified_agi",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_sales_tax_refund_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado sales tax refund"
  },
  "co_family_affordability_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/family_affordability/co_family_affordability_credit.py",
    "parameters": {
      "p": "gov.states.co.tax.income.credits.family_affordability",
      "threshold": "gov.states.co.tax.income.credits.family_affordability.reduction.threshold",
      "increment": "gov.states.co.tax.income.credits.family_affordability.reduction.increment",
      "rate": "gov.states.co.tax.income.credits.family_affordability.reduction.rate",
      "amount": "gov.states.co.tax.income.credits.family_affordability.amount",
      "reduction": "gov.states.co.tax.income.credits.family_affordability.reduction",
      "age_multiplier": "gov.states.co.tax.income.credits.family_affordability.age_multiplier",
      "calc": "gov.states.co.tax.income.credits.family_affordability.age_multiplier.calc"
    },
    "variables": [
      "filing_status",
      "age",
      "adjusted_gross_income",
      "is_child_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Family Affordability Credit"
  },
  "co_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/ctc/co_ctc.py",
    "parameters": {
      "p": "gov.states.co.tax.income.credits.ctc",
      "ctc_matched_federal_credit": "gov.states.co.tax.income.credits.ctc.ctc_matched_federal_credit",
      "age_threshold": "gov.states.co.tax.income.credits.ctc.age_threshold",
      "rate": "gov.states.co.tax.income.credits.ctc.rate",
      "amount": "gov.states.co.tax.income.credits.ctc.amount",
      "calc": "gov.states.co.tax.income.credits.ctc.amount.head_of_household.calc"
    },
    "variables": [
      "filing_status",
      "age",
      "adjusted_gross_income",
      "co_ctc_eligible_child",
      "co_federal_ctc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado child tax credit"
  },
  "co_ctc_eligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/ctc/co_ctc_eligible_child.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "is_child_dependent"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado child tax credit eligible child",
    "adds_from_parameter": "gov.states.co.tax.income.credits.ctc.eligible_child"
  },
  "co_ctc_eligible_children_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/ctc/co_ctc_eligible_children_count.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "co_ctc_eligible_child"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado child tax credit eligible children count"
  },
  "co_low_income_cdcc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/cdcc/co_low_income_cdcc_eligible.py",
    "parameters": {
      "p": "gov.states.co.tax.income.credits",
      "federal_agi_threshold": "gov.states.co.tax.income.credits.cdcc.low_income.federal_agi_threshold",
      "low_income": "gov.states.co.tax.income.credits.cdcc.low_income",
      "cdcc": "gov.states.co.tax.income.credits.cdcc"
    },
    "variables": [
      "capped_cdcc",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Colorado Low-income Child Care Expenses Credit",
    "description": "https://casetext.com/statute/colorado-revised-statutes/title-39-taxation/specific-taxes/income-tax/article-22-income-tax/part-1-general/section-39-22-1195-child-care-expenses-tax-credit-legislative-declaration-definitionshttps://tax.colorado.gov/sites/tax/files/documents/DR_104_Book_2022.pdf#page=46"
  },
  "co_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/cdcc/co_cdcc.py",
    "parameters": {
      "p": "gov.states.co.tax.income.credits",
      "calc": "gov.states.co.tax.income.credits.cdcc.match.calc",
      "match": "gov.states.co.tax.income.credits.cdcc.match",
      "cdcc": "gov.states.co.tax.income.credits.cdcc"
    },
    "variables": [
      "capped_cdcc",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Child Care Expenses Credit",
    "description": "https://advance.lexis.com/documentpage/?pdmfid=1000516&crid=d14880b7-7410-4295-bcf1-2e099e57d8f3&pdistocdocslideraccess=true&config=014FJAAyNGJkY2Y4Zi1mNjgyLTRkN2YtYmE4OS03NTYzNzYzOTg0OGEKAFBvZENhdGFsb2d592qv2Kywlf8caKqYROP5&pddocfullpath=%2Fshared%2Fdocument%2Fstatutes-legislation%2Furn%3AcontentItem%3A65HV-06G3-CGX8-050B-00008-00&pdcomponentid=234177&pdtocnodeidentifier=ABPAACAACAABAACABA&ecomp=k2vckkk&prid=e2e32763-f8fa-4832-8191-f70124d877f6https://tax.colorado.gov/sites/tax/files/documents/DR_104_Book_2022.pdf#page=46"
  },
  "co_low_income_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/cdcc/co_low_income_cdcc.py",
    "parameters": {
      "p": "gov.states.co.tax.income.credits",
      "child_age_threshold": "gov.states.co.tax.income.credits.cdcc.low_income.child_age_threshold",
      "rate": "gov.states.co.tax.income.credits.cdcc.low_income.rate",
      "max_amount": "gov.states.co.tax.income.credits.cdcc.low_income.max_amount",
      "calc": "gov.states.co.tax.income.credits.cdcc.low_income.max_amount.calc",
      "low_income": "gov.states.co.tax.income.credits.cdcc.low_income",
      "cdcc": "gov.states.co.tax.income.credits.cdcc"
    },
    "variables": [
      "min_head_spouse_earned",
      "count_cdcc_eligible",
      "age",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_low_income_cdcc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado Low-income Child Care Expenses Credit",
    "description": "https://casetext.com/statute/colorado-revised-statutes/title-39-taxation/specific-taxes/income-tax/article-22-income-tax/part-1-general/section-39-22-1195-child-care-expenses-tax-credit-legislative-declaration-definitionshttps://tax.colorado.gov/sites/tax/files/documents/DR_104_Book_2022.pdf#page=46"
  },
  "co_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/eitc/co_eitc.py",
    "parameters": {
      "p": "gov.states.co.tax.income.credits",
      "match": "gov.states.co.tax.income.credits.eitc.match",
      "eitc": "gov.states.co.tax.income.credits.eitc"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado EITC"
  },
  "co_federal_ctc_maximum": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/ctc/federal_ctc/co_federal_ctc_maximum.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "co_federal_ctc_child_individual_maximum"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maximum CTC replicated to include the Colorado limitations",
    "description": "Maximum value of the Child Tax Credit, before phase-out."
  },
  "co_non_refundable_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/ctc/federal_ctc/co_non_refundable_ctc.py",
    "parameters": {},
    "variables": [
      "co_federal_ctc_maximum",
      "ctc_limiting_tax_liability"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Non-refundable Child Tax Credit replicated to include the Colorado limitations",
    "description": "Total value of the non-refundable portion of the Child Tax Credit."
  },
  "co_federal_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/ctc/federal_ctc/co_federal_ctc.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "co_refundable_ctc",
      "co_non_refundable_ctc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Child Tax Credit replicated to include the Colorado limitations",
    "description": "Total value of the non-refundable and refundable portion of the Child Tax Credit."
  },
  "co_refundable_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/ctc/federal_ctc/co_refundable_ctc.py",
    "parameters": {
      "p": "gov.irs.credits.ctc",
      "individual_max": "gov.irs.credits.ctc.refundable.individual_max",
      "phase_in": "gov.irs.credits.ctc.refundable.phase_in",
      "refundable": "gov.irs.credits.ctc.refundable",
      "rate": "gov.irs.credits.ctc.refundable.phase_in.rate",
      "threshold": "gov.irs.credits.ctc.refundable.phase_in.threshold",
      "min_children_for_ss_taxes_minus_eitc": "gov.irs.credits.ctc.refundable.phase_in.min_children_for_ss_taxes_minus_eitc"
    },
    "variables": [
      "co_ctc_eligible_children_count",
      "co_federal_ctc_maximum",
      "ctc_social_security_tax",
      "eitc",
      "tax_unit_earned_income",
      "co_non_refundable_ctc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Refundable Child Tax Credit replicated to include the Colorado limitations",
    "description": "Total value of the refundable portions of the Child Tax Credit."
  },
  "co_federal_ctc_child_individual_maximum": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/credits/ctc/federal_ctc/co_federal_ctc_child_individual_maximum.py",
    "parameters": {
      "base_amount": "gov.irs.credits.ctc.amount.base",
      "p": "gov.states.co.tax.income.credits.ctc",
      "age_threshold": "gov.states.co.tax.income.credits.ctc.age_threshold",
      "calc": "gov.irs.credits.ctc.amount.base.calc"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "CTC maximum amount (child) replicated to account for the Colorado state CTC child eligibility",
    "description": "The CTC entitlement in respect of this person as a child.",
    "bracket_parameters": {
      "base_amount": "gov.irs.credits.ctc.amount.base"
    },
    "parameter_details": {
      "base_amount": {
        "path": "gov.irs.credits.ctc.amount.base",
        "type": "bracket",
        "brackets": [
          {
            "threshold": {
              "2013-01-01": 0
            },
            "amount": {
              "2013-01-01": 1000,
              "2018-01-01": 2000,
              "2025-01-01": 2200,
              "2027-01-01": 2300,
              "2029-01-01": 2400,
              "2031-01-01": 2500,
              "2033-01-01": 2600,
              "2035-01-01": 2700
            }
          },
          {
            "threshold": {
              "2013-01-01": 17,
              "2021-01-01": 18,
              "2022-01-01": 17
            },
            "amount": {
              "2013-01-01": 0
            }
          }
        ],
        "description": "The IRS provides a maximum Child Tax Credit of this amount, depending on the child's age."
      }
    }
  },
  "co_federal_deduction_addback_required": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/additions/federal_deductions/co_federal_deduction_addback_required.py",
    "parameters": {
      "p": "gov.states.co.tax.income.additions.federal_deductions",
      "itemized_only": "gov.states.co.tax.income.additions.federal_deductions.itemized_only",
      "agi_threshold": "gov.states.co.tax.income.additions.federal_deductions.agi_threshold"
    },
    "variables": [
      "adjusted_gross_income",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Required to add back the Colorado federal deductions"
  },
  "co_federal_deduction_addback": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/additions/federal_deductions/co_federal_deduction_addback.py",
    "parameters": {
      "p": "gov.states.co.tax.income.additions.federal_deductions",
      "itemized_only": "gov.states.co.tax.income.additions.federal_deductions.itemized_only",
      "exemption": "gov.states.co.tax.income.additions.federal_deductions.exemption"
    },
    "variables": [
      "filing_status",
      "taxable_income_deductions",
      "itemized_taxable_income_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_federal_deduction_addback_required",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado federal deductions addback"
  },
  "co_qualified_business_income_deduction_addback_required": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/additions/qualified_business_income_deduction/co_qualified_business_income_deduction_addback_required.py",
    "parameters": {
      "p": "gov.states.co.tax.income.additions.qualified_business_income_deduction",
      "agi_threshold": "gov.states.co.tax.income.additions.qualified_business_income_deduction.agi_threshold"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Required to add back the Colorado qualified business income deduction"
  },
  "co_qualified_business_income_deduction_addback": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/additions/qualified_business_income_deduction/co_qualified_business_income_deduction_addback.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "qualified_business_income_deduction"
    ],
    "subtracts": [],
    "defined_for": "co_qualified_business_income_deduction_addback_required",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado qualified business income deduction addback"
  },
  "co_charitable_contribution_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/subtractions/charitable_contribution/co_charitable_contribution_subtraction.py",
    "parameters": {
      "p": "gov.states.co.tax.income.subtractions.charitable_contribution",
      "adjustment": "gov.states.co.tax.income.subtractions.charitable_contribution.adjustment"
    },
    "variables": [
      "charitable_cash_donations",
      "charitable_non_cash_donations"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_charitable_contribution_subtraction_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado charitable contribution subtraction"
  },
  "co_charitable_contribution_subtraction_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/subtractions/charitable_contribution/co_charitable_contribution_subtraction_eligible.py",
    "parameters": {},
    "variables": [
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Colorado charitable contribution subtraction"
  },
  "co_collegeinvest_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/subtractions/collegeinvest_contribution/co_collegeinvest_subtraction.py",
    "parameters": {
      "p": "gov.states.co.tax.income.subtractions.collegeinvest_contribution",
      "max_amount": "gov.states.co.tax.income.subtractions.collegeinvest_contribution.max_amount"
    },
    "variables": [
      "filing_status",
      "investment_in_529_plan"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado collegeinvest subtraction"
  },
  "co_social_security_subtraction_indv_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/subtractions/pension/co_social_security_subtraction_indv_eligible.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Colorado social security subtraction for eligible individuals"
  },
  "co_pension_subtraction_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/subtractions/pension/co_pension_subtraction_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "taxable_pension_income",
      "taxable_ira_distributions",
      "disability_benefits"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Income for the Colorado pension and annuity subtraction",
    "adds_from_parameter": "gov.states.co.tax.income.subtractions.pension.income_sources"
  },
  "co_pension_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/subtractions/pension/co_pension_subtraction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "co_pension_subtraction_indv",
      "co_social_security_subtraction_indv"
    ],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado pension and annuity subtraction"
  },
  "co_social_security_subtraction_indv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/subtractions/pension/co_social_security_subtraction_indv.py",
    "parameters": {
      "p": "gov.states.co.tax.income.subtractions.pension",
      "younger": "gov.states.co.tax.income.subtractions.pension.age_threshold.younger",
      "older": "gov.states.co.tax.income.subtractions.pension.age_threshold.older",
      "social_security_subtraction_available": "gov.states.co.tax.income.subtractions.pension.social_security_subtraction_available",
      "cap": "gov.states.co.tax.income.subtractions.pension.cap",
      "age_threshold": "gov.states.co.tax.income.subtractions.pension.age_threshold"
    },
    "variables": [
      "social_security_survivors",
      "age",
      "taxable_social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_social_security_subtraction_indv_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado social security subtraction for eligible individuals"
  },
  "co_pension_subtraction_indv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/subtractions/pension/co_pension_subtraction_indv.py",
    "parameters": {
      "p": "gov.states.co.tax.income.subtractions.pension",
      "older": "gov.states.co.tax.income.subtractions.pension.age_threshold.older",
      "younger": "gov.states.co.tax.income.subtractions.pension.age_threshold.younger",
      "cap": "gov.states.co.tax.income.subtractions.pension.cap",
      "age_threshold": "gov.states.co.tax.income.subtractions.pension.age_threshold"
    },
    "variables": [
      "co_pension_subtraction_income",
      "age",
      "pension_survivors",
      "co_social_security_subtraction_indv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_pension_subtraction_indv_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado pension and annuity subtraction for eligible individuals"
  },
  "co_able_contribution_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/subtractions/able_contribution/co_able_contribution_subtraction.py",
    "parameters": {
      "p": "gov.states.co.tax.income.subtractions.able_contribution",
      "cap": "gov.states.co.tax.income.subtractions.able_contribution.cap"
    },
    "variables": [
      "filing_status",
      "able_contributions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado able contribution subtraction"
  },
  "co_military_retirement_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/co/tax/income/subtractions/military_retirement/co_military_retirement_subtraction.py",
    "parameters": {
      "p": "gov.states.co.tax.income.subtractions.military_retirement",
      "age_threshold": "gov.states.co.tax.income.subtractions.military_retirement.age_threshold",
      "max_amount": "gov.states.co.tax.income.subtractions.military_retirement.max_amount"
    },
    "variables": [
      "is_tax_unit_head",
      "military_retirement_pay",
      "age",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Colorado military retirement subtraction"
  },
  "in_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/in_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "in_agi_tax",
      "in_use_tax"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana income tax before refundable credits"
  },
  "in_agi_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/in_agi_tax.py",
    "parameters": {},
    "variables": [
      "in_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana adjusted gross income tax"
  },
  "in_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/in_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "in_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "in_refundable_credits"
    ],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana income tax"
  },
  "in_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/in_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "in_add_backs"
    ],
    "subtracts": [
      "in_deductions",
      "in_exemptions"
    ],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana adjusted gross income"
  },
  "in_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/in_withheld_income_tax.py",
    "parameters": {},
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana withheld income tax"
  },
  "in_county_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/in_county_tax.py",
    "parameters": {},
    "variables": [
      "state_code_str",
      "in_agi",
      "county_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana county tax"
  },
  "in_use_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/use/in_use_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana use tax"
  },
  "in_renters_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/deductions/in_renters_deduction.py",
    "parameters": {},
    "variables": [
      "rent",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana renter's deduction"
  },
  "in_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/deductions/in_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "in_renters_deduction",
      "in_homeowners_property_tax_deduction",
      "salt_refund_last_year",
      "us_govt_interest",
      "tax_unit_taxable_social_security",
      "in_military_service_deduction",
      "in_nonpublic_school_deduction",
      "in_nol",
      "in_unemployment_compensation_deduction",
      "in_other_deductions",
      "military_basic_pay"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana deductions",
    "adds_from_parameter": "gov.states.in.tax.income.deductions.deductions"
  },
  "in_other_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/deductions/in_other_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana other deductions",
    "description": "Other deductions available in Indiana including those for civil service annuities, disability retirement, government or civic group capital contributions, human services for Medicaid recipients,  infrastructure fund gifts, indiana lottery winings annuity, Indiana partnership long-term care policy premiums, military retirement income or survivor's benefits, National Guard and reserve component members, Olympic/Paralymic medal winners, qualified patents income eemption, railroad unemployment and sickness benefits, repayment of previously taxed income deductions, COVID-related employee retention credit dissalowed expenses, and Indiana-only tax-exempt bonds."
  },
  "in_unemployment_compensation_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/deductions/in_unemployment_compensation_deduction.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "tax_unit_taxable_unemployment_compensation",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana unemployment compensation deduction"
  },
  "in_homeowners_property_tax_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/deductions/in_homeowners_property_tax_deduction.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana homeowner's residential property tax deduction"
  },
  "in_healthcare_sharing_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/deductions/in_healthcare_sharing_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana healthcare sharing ministry deduction",
    "description": "Healthcare sharing expenses paid by a qualified individual for membership in a health care sharing ministry allowable for deduction in Indiana."
  },
  "in_military_service_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/deductions/in_military_service_deduction.py",
    "parameters": {},
    "variables": [
      "military_service_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana military service deduction"
  },
  "in_nonpublic_school_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/deductions/in_nonpublic_school_deduction.py",
    "parameters": {},
    "variables": [
      "is_in_k12_nonpublic_school"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana nonpublic school expenditures deduction"
  },
  "in_nol": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/deductions/in_nol.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana NOL",
    "description": "Net operating losses allowable for deduction in Indiana."
  },
  "in_add_backs": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/add_backs/in_add_backs.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "in_bonus_depreciation_add_back",
      "in_nol_add_back",
      "in_oos_municipal_obligation_interest_add_back",
      "in_other_add_backs",
      "in_section_179_expense_add_back",
      "in_tax_add_back"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana add-backs"
  },
  "in_section_179_expense_add_back": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/add_backs/in_section_179_expense_add_back.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana Section 179 Expense Add Back",
    "description": "Federal IRC Section 179 expenses less IRC Section 179 expenses if they had been calculated with a $25,000 ceiling."
  },
  "in_bonus_depreciation_add_back": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/add_backs/in_bonus_depreciation_add_back.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana bonus depreciation add back",
    "description": "Income (or loss) included in Federal AGI under Section 168(k)'s bonus depreciation less the amount that would have been included without it."
  },
  "in_nol_add_back": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/add_backs/in_nol_add_back.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana net operating loss add back",
    "description": "Add back for net operating losses reported on federal Schedule 1."
  },
  "in_tax_add_back": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/add_backs/in_tax_add_back.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana tax add back",
    "description": "Add backs for certain taxes deducted from federal Schedules C, C-EZ, E and/or F."
  },
  "in_oos_municipal_obligation_interest_add_back": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/add_backs/in_oos_municipal_obligation_interest_add_back.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana out-of-state municipal obligation interest add back",
    "description": "Add back for interest earned from a direct obligation of a state or political subdivision other than Indiana for obligations purchased after Dec. 31, 2011."
  },
  "in_other_add_backs": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/add_backs/in_other_add_backs.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana other add backs",
    "description": "Other add backs including those for Conformity, Employer Student Loan Payment, Meal Deductions, Student Loan Discharges, Excess Federal Interest Deduction Modification, Federal Repatriated Dividend Deductions, Qualified Preferred Stock, and Catch-Up Modifications."
  },
  "in_adoption_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/exemptions/in_adoption_exemption.py",
    "parameters": {},
    "variables": [
      "in_is_qualifying_dependent_child",
      "adopted_this_year"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana adoption exemption"
  },
  "in_qualifying_child_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/exemptions/in_qualifying_child_count.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "in_is_qualifying_dependent_child"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana qualifying dependent child count",
    "unit": "child",
    "description": "Number of qualifying children for the IN additional exemption."
  },
  "in_aged_blind_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/exemptions/in_aged_blind_exemptions.py",
    "parameters": {},
    "variables": [
      "aged_blind_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana exemptions for aged and or blind"
  },
  "in_aged_low_agi_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/exemptions/in_aged_low_agi_exemptions.py",
    "parameters": {},
    "variables": [
      "aged_spouse",
      "filing_status",
      "adjusted_gross_income",
      "aged_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana aged and low-AGI exemptions"
  },
  "in_additional_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/exemptions/in_additional_exemptions.py",
    "parameters": {},
    "variables": [
      "in_qualifying_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana additional exemptions"
  },
  "in_is_qualifying_dependent_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/exemptions/in_is_qualifying_dependent_child.py",
    "parameters": {},
    "variables": [
      "is_full_time_student",
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana additional exemption qualifying dependent child"
  },
  "in_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/exemptions/in_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "in_base_exemptions",
      "in_additional_exemptions",
      "in_aged_blind_exemptions",
      "in_aged_low_agi_exemptions",
      "in_adoption_exemption"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana exemptions"
  },
  "in_base_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/exemptions/in_base_exemptions.py",
    "parameters": {},
    "variables": [
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana base exemptions"
  },
  "in_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/credits/in_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "in_eitc",
      "in_unified_elderly_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana refundable income tax credits"
  },
  "in_eitc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/credits/earned_income_credit/in_eitc_eligible.py",
    "parameters": {},
    "variables": [
      "age_head",
      "filing_status",
      "age_spouse",
      "eitc_relevant_investment_income",
      "eitc",
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana earned income tax credit eligibility status"
  },
  "in_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/credits/earned_income_credit/in_eitc.py",
    "parameters": {
      "fp": "gov.irs.credits",
      "calc": "gov.irs.credits.eitc.phase_out.rate.calc",
      "max": "gov.irs.credits.eitc.max",
      "phase_in_rate": "gov.irs.credits.eitc.phase_in_rate",
      "phase_out": "gov.irs.credits.eitc.phase_out",
      "start": "gov.irs.credits.eitc.phase_out.start",
      "rate": "gov.irs.credits.eitc.phase_out.rate",
      "eitc": "gov.irs.credits.eitc"
    },
    "variables": [
      "eitc_child_count",
      "filer_adjusted_earnings",
      "eitc",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_eitc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana earned income tax credit"
  },
  "in_unified_elderly_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/in/tax/income/credits/elderly_tax_credit/in_unified_elderly_tax_credit.py",
    "parameters": {},
    "variables": [
      "age_head",
      "age_spouse",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.IN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Indiana unified elderly tax credit"
  },
  "ok_tanf": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tanf/ok_tanf.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma TANF"
  },
  "ok_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/ok_income_tax_before_credits.py",
    "parameters": {
      "p": "gov.states.ok.tax.income.rates",
      "calc": "gov.states.ok.tax.income.rates.head_of_household.calc",
      "rates": "gov.states.ok.tax.income.rates"
    },
    "variables": [
      "ok_taxable_income",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma income tax before credits"
  },
  "ok_adjustments": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/ok_adjustments.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma adjustments"
  },
  "ok_use_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/ok_use_tax.py",
    "parameters": {
      "p": "gov.states.ok.tax",
      "rate": "gov.states.ok.tax.use.rate",
      "use": "gov.states.ok.tax.use"
    },
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma use tax"
  },
  "ok_agi_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/ok_agi_subtractions.py",
    "parameters": {
      "p": "gov.states.ok.tax.income.agi.subtractions",
      "subtractions": "gov.states.ok.tax.income.agi.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma AGI subtractions from federal AGI"
  },
  "ok_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/ok_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma AGI additions to federal AGI"
  },
  "ok_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/ok_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ok.tax.income",
      "amount": "gov.states.ok.tax.income.deductions.standard.amount",
      "calc": "gov.states.ok.tax.income.rates.single.calc",
      "standard": "gov.states.ok.tax.income.deductions.standard",
      "single": "gov.states.ok.tax.income.rates.single",
      "deductions": "gov.states.ok.tax.income.deductions",
      "rates": "gov.states.ok.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma withheld income tax"
  },
  "ok_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/ok_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ok_non_refundable_credits",
      "ok_income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma income tax before refundable credits"
  },
  "ok_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/ok_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ok_income_tax_before_refundable_credits",
      "ok_use_tax"
    ],
    "subtracts": [
      "ok_refundable_credits"
    ],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma income tax"
  },
  "ok_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/ok_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "ok_additions"
    ],
    "subtracts": [
      "ok_agi_subtractions"
    ],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma AGI"
  },
  "ok_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/ok_taxable_income.py",
    "parameters": {},
    "variables": [
      "ok_itemized_deductions",
      "ok_exemptions",
      "ok_agi",
      "ok_adjustments",
      "tax_unit_itemizes",
      "ok_standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma taxable income"
  },
  "ok_military_retirement_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/subtractions/ok_military_retirement_exclusion.py",
    "parameters": {
      "p": "gov.states.ok.tax.income.agi.subtractions.military_retirement",
      "rate": "gov.states.ok.tax.income.agi.subtractions.military_retirement.rate",
      "floor": "gov.states.ok.tax.income.agi.subtractions.military_retirement.floor"
    },
    "variables": [
      "military_retirement_pay"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma military retirement exclusion"
  },
  "ok_pension_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/subtractions/ok_pension_subtraction.py",
    "parameters": {
      "p": "gov.states.ok.tax.income.agi.subtractions",
      "pension_limit": "gov.states.ok.tax.income.agi.subtractions.pension_limit"
    },
    "variables": [
      "taxable_pension_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma pension subtraction"
  },
  "ok_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/deductions/ok_standard_deduction.py",
    "parameters": {
      "p": "gov.states.ok.tax.income",
      "amount": "gov.states.ok.tax.income.deductions.standard.amount",
      "standard": "gov.states.ok.tax.income.deductions.standard",
      "deductions": "gov.states.ok.tax.income.deductions"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma standard deduction"
  },
  "ok_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/deductions/ok_itemized_deductions.py",
    "parameters": {
      "p": "gov.states.ok.tax.income",
      "limit": "gov.states.ok.tax.income.deductions.itemized.limit",
      "itemized": "gov.states.ok.tax.income.deductions.itemized",
      "deductions": "gov.states.ok.tax.income.deductions"
    },
    "variables": [
      "medical_expense_deduction",
      "capped_property_taxes",
      "charitable_deduction",
      "itemized_deductions_less_salt"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma itemized deductions"
  },
  "ok_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/exemptions/ok_exemptions.py",
    "parameters": {
      "p": "gov.states.ok.tax.income.exemptions",
      "amount": "gov.states.ok.tax.income.exemptions.amount"
    },
    "variables": [
      "ok_count_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma exemptions amount"
  },
  "ok_count_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/exemptions/ok_count_exemptions.py",
    "parameters": {
      "p": "gov.states.ok.tax.income.exemptions",
      "special_agi_limit": "gov.states.ok.tax.income.exemptions.special_agi_limit",
      "special_age_minimum": "gov.states.ok.tax.income.exemptions.special_age_minimum"
    },
    "variables": [
      "age_head",
      "filing_status",
      "age_spouse",
      "tax_unit_dependents",
      "blind_head",
      "adjusted_gross_income",
      "blind_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Count of Oklahoma exemptions"
  },
  "ok_ptc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/ok_ptc.py",
    "parameters": {
      "p": "gov.states.ok.tax.income.credits.property_tax",
      "age_minimum": "gov.states.ok.tax.income.credits.property_tax.age_minimum",
      "income_limit": "gov.states.ok.tax.income.credits.property_tax.income_limit",
      "maximum_credit": "gov.states.ok.tax.income.credits.property_tax.maximum_credit",
      "income_fraction": "gov.states.ok.tax.income.credits.property_tax.income_fraction"
    },
    "variables": [
      "age_head",
      "head_is_disabled",
      "age_spouse",
      "real_estate_taxes",
      "ok_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma property tax credit"
  },
  "ok_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/ok_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ok_ptc",
      "ok_stc",
      "ok_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma refundable income tax credits",
    "adds_from_parameter": "gov.states.ok.tax.income.credits.refundable"
  },
  "ok_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/ok_gross_income.py",
    "parameters": {
      "p": "gov.states.ok.tax.income",
      "gross_income_sources": "gov.states.ok.tax.income.credits.gross_income_sources",
      "credits": "gov.states.ok.tax.income.credits"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma gross income used in OK credit calculations"
  },
  "ok_stc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/ok_stc.py",
    "parameters": {
      "p": "gov.states.ok.tax.income.credits.sales_tax",
      "income_limit1": "gov.states.ok.tax.income.credits.sales_tax.income_limit1",
      "age_minimum": "gov.states.ok.tax.income.credits.sales_tax.age_minimum",
      "amount": "gov.states.ok.tax.income.credits.sales_tax.amount",
      "income_limit2": "gov.states.ok.tax.income.credits.sales_tax.income_limit2"
    },
    "variables": [
      "disabled_tax_unit_head_or_spouse",
      "ok_tanf",
      "greater_age_head_spouse",
      "tax_unit_size",
      "tax_unit_dependents",
      "ok_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma sales tax credit"
  },
  "ok_child_care_child_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/ok_child_care_child_tax_credit.py",
    "parameters": {
      "p": "gov.states.ok.tax.income.credits",
      "agi_limit": "gov.states.ok.tax.income.credits.child.agi_limit",
      "cdcc_fraction": "gov.states.ok.tax.income.credits.child.cdcc_fraction",
      "ctc_fraction": "gov.states.ok.tax.income.credits.child.ctc_fraction",
      "child": "gov.states.ok.tax.income.credits.child"
    },
    "variables": [
      "ok_agi",
      "ctc",
      "adjusted_gross_income",
      "cdcc_potential"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma Child Care/Child Tax Credit"
  },
  "ok_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/ok_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ok_child_care_child_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma nonrefundable income tax credits",
    "adds_from_parameter": "gov.states.ok.tax.income.credits.nonrefundable"
  },
  "ok_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/eitc/ok_eitc.py",
    "parameters": {
      "p": "gov.states.ok.tax.income.credits.earned_income",
      "eitc_fraction": "gov.states.ok.tax.income.credits.earned_income.eitc_fraction"
    },
    "variables": [
      "ok_agi",
      "adjusted_gross_income",
      "ok_federal_eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Oklahoma EITC"
  },
  "ok_federal_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/eitc/federal_credit/ok_federal_eitc.py",
    "parameters": {},
    "variables": [
      "ok_federal_eitc_phased_in",
      "takes_up_eitc",
      "ok_federal_eitc_reduction",
      "ok_federal_eitc_maximum"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ok_federal_eitc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal earned income credit for the Oklahoma EITC computation"
  },
  "ok_federal_eitc_phase_out_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/eitc/federal_credit/ok_federal_eitc_phase_out_rate.py",
    "parameters": {
      "eitc": "gov.irs.credits.eitc",
      "calc": "gov.irs.credits.eitc.phase_out.rate.calc",
      "rate": "gov.irs.credits.eitc.phase_out.rate",
      "phase_out": "gov.irs.credits.eitc.phase_out"
    },
    "variables": [
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal EITC phase-out rate for the Oklahoma EITC computation"
  },
  "ok_federal_eitc_phased_in": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/eitc/federal_credit/ok_federal_eitc_phased_in.py",
    "parameters": {},
    "variables": [
      "filer_adjusted_earnings",
      "ok_federal_eitc_phase_in_rate",
      "ok_federal_eitc_maximum"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal EITC phase-in amount for the Oklahoma EITC computation",
    "description": "EITC maximum amount, taking into account earnings."
  },
  "ok_federal_eitc_phase_in_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/eitc/federal_credit/ok_federal_eitc_phase_in_rate.py",
    "parameters": {
      "eitc": "gov.irs.credits.eitc",
      "calc": "gov.irs.credits.eitc.phase_in_rate.calc",
      "phase_in_rate": "gov.irs.credits.eitc.phase_in_rate"
    },
    "variables": [
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal EITC phase-in rate for the Oklahoma EITC computation",
    "unit": "/1",
    "description": "Rate at which the EITC phases in with income."
  },
  "ok_federal_eitc_phase_out_start": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/eitc/federal_credit/ok_federal_eitc_phase_out_start.py",
    "parameters": {
      "eitc": "gov.irs.credits.eitc",
      "calc": "gov.irs.credits.eitc.phase_out.start.calc",
      "joint_bonus": "gov.irs.credits.eitc.phase_out.joint_bonus",
      "start": "gov.irs.credits.eitc.phase_out.start",
      "phase_out": "gov.irs.credits.eitc.phase_out"
    },
    "variables": [
      "tax_unit_is_joint",
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal EITC phase-out start for the Oklahoma EITC computation"
  },
  "ok_federal_eitc_reduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/eitc/federal_credit/ok_federal_eitc_reduction.py",
    "parameters": {},
    "variables": [
      "filer_adjusted_earnings",
      "ok_federal_eitc_phase_out_rate",
      "ok_federal_eitc_phase_out_start",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal EITC reduction for the Oklahoma EITC computation"
  },
  "ok_federal_eitc_maximum": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/eitc/federal_credit/ok_federal_eitc_maximum.py",
    "parameters": {
      "eitc": "gov.irs.credits.eitc",
      "calc": "gov.irs.credits.eitc.max.calc",
      "max": "gov.irs.credits.eitc.max"
    },
    "variables": [
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Maximum federal EITC for the Oklahoma EITC computation"
  },
  "ok_federal_eitc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/eitc/federal_credit/eligible/ok_federal_eitc_eligible.py",
    "parameters": {},
    "variables": [
      "ok_federal_eitc_demographic_eligible",
      "filing_status",
      "ok_federal_eitc_investment_income_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for federal EITC for the Oklahoma EITC computation"
  },
  "ok_federal_eitc_demographic_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/eitc/federal_credit/eligible/ok_federal_eitc_demographic_eligible.py",
    "parameters": {},
    "variables": [
      "is_full_time_student",
      "age",
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets demographic eligibility for EITC for the Oklahoma EITC computation"
  },
  "ok_federal_eitc_investment_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ok/tax/income/credits/eitc/federal_credit/eligible/ok_federal_eitc_investment_income_eligible.py",
    "parameters": {},
    "variables": [
      "eitc_relevant_investment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.OK",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets investment income eligibility for EITC"
  },
  "mi_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/mi_subtractions.py",
    "parameters": {
      "p": "gov.states.mi.tax.income",
      "subtractions": "gov.states.mi.tax.income.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan taxable income subtractions"
  },
  "mi_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/mi_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mi_eitc",
      "mi_home_heating_credit",
      "mi_homestead_property_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan refundable credits",
    "adds_from_parameter": "gov.states.mi.tax.income.credits.refundable"
  },
  "mi_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/mi_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mi_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "mi_refundable_credits"
    ],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan income tax"
  },
  "mi_is_senior_for_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/mi_is_senior_for_tax.py",
    "parameters": {
      "p": "gov.states.mi.tax.income",
      "senior_age": "gov.states.mi.tax.income.senior_age"
    },
    "variables": [
      "greater_age_head_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan filer is a senior"
  },
  "mi_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/mi_taxable_income.py",
    "parameters": {},
    "variables": [
      "mi_additions",
      "mi_subtractions",
      "adjusted_gross_income",
      "mi_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan taxable income"
  },
  "mi_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/mi_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan non-refundable credits"
  },
  "mi_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/mi_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "mi_income_tax_before_non_refundable_credits",
      "mi_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan income tax before refundable credits"
  },
  "mi_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/mi_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "self_employment_tax_ald"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan taxable income additions",
    "adds_from_parameter": "gov.states.mi.tax.income.additions"
  },
  "mi_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/mi_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "rate": "gov.states.mi.tax.income.rate"
    },
    "variables": [
      "mi_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan income tax before non-refundable credits"
  },
  "mi_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/mi_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.mi.tax.income",
      "rate": "gov.states.mi.tax.income.rate"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan withheld income tax"
  },
  "mi_household_resources": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/mi_household_resources.py",
    "parameters": {
      "p": "gov.states.mi.tax.income",
      "household_resources": "gov.states.mi.tax.income.household_resources"
    },
    "variables": [
      "above_the_line_deductions",
      "health_insurance_premiums"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan household resources"
  },
  "mi_personal_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/exemptions/mi_personal_exemptions.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.exemptions",
      "personal": "gov.states.mi.tax.income.exemptions.personal"
    },
    "variables": [
      "tax_unit_stillborn_children",
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan personal and stillborn exemptions"
  },
  "mi_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/exemptions/mi_exemptions.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.exemptions",
      "base": "gov.states.mi.tax.income.exemptions.disabled.amount.base",
      "veteran": "gov.states.mi.tax.income.exemptions.disabled.amount.veteran",
      "dependent_on_other_return": "gov.states.mi.tax.income.exemptions.dependent_on_other_return",
      "disabled": "gov.states.mi.tax.income.exemptions.disabled",
      "amount": "gov.states.mi.tax.income.exemptions.disabled.amount"
    },
    "variables": [
      "filing_status",
      "mi_personal_exemptions",
      "mi_disabled_exemption_eligible_person",
      "head_is_dependent_elsewhere",
      "is_fully_disabled_service_connected_veteran"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan exemptions"
  },
  "mi_disabled_exemption_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/exemptions/mi_disabled_exemption_eligible_person.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.exemptions.disabled",
      "age_limit": "gov.states.mi.tax.income.exemptions.disabled.age_limit"
    },
    "variables": [
      "is_blind",
      "age",
      "is_permanently_and_totally_disabled",
      "is_deaf"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Michigan disabled exemptions"
  },
  "mi_exemptions_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/exemptions/mi_exemptions_count.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_unit_size",
      "mi_disabled_exemption_eligible_person",
      "is_fully_disabled_service_connected_veteran"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan exemptions count"
  },
  "mi_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/mi_eitc.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.credits.eitc",
      "match": "gov.states.mi.tax.income.credits.eitc.match"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan Earned Income Tax Credit"
  },
  "mi_home_heating_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/home_heating/mi_home_heating_credit.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.credits.home_heating",
      "credit_percentage": "gov.states.mi.tax.income.credits.home_heating.credit_percentage"
    },
    "variables": [
      "mi_home_heating_credit_eligible_rate",
      "mi_alternate_home_heating_credit",
      "mi_standard_home_heating_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan home heating credit"
  },
  "mi_home_heating_credit_eligible_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/home_heating/mi_home_heating_credit_eligible_rate.py",
    "parameters": {},
    "variables": [
      "claimed_as_dependent_on_another_return",
      "is_full_time_student",
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Michigan home heating credit"
  },
  "mi_homestead_property_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/homestead_property_tax/mi_homestead_property_tax_credit.py",
    "parameters": {},
    "variables": [
      "mi_homestead_property_tax_credit_pre_alternate_senior_amount",
      "mi_homestead_property_tax_credit_alternate_senior_amount"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_homestead_property_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan homestead property tax credit"
  },
  "mi_homestead_property_tax_credit_household_resource_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/homestead_property_tax/mi_homestead_property_tax_credit_household_resource_exemption.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.credits.homestead_property_tax",
      "calc": "gov.states.mi.tax.income.credits.homestead_property_tax.exemption.senior_disabled.calc",
      "non_senior_disabled": "gov.states.mi.tax.income.credits.homestead_property_tax.exemption.non_senior_disabled",
      "senior_disabled": "gov.states.mi.tax.income.credits.homestead_property_tax.exemption.senior_disabled",
      "exemption": "gov.states.mi.tax.income.credits.homestead_property_tax.exemption"
    },
    "variables": [
      "disabled_tax_unit_head_or_spouse",
      "mi_homestead_property_tax_credit_countable_property_tax",
      "mi_household_resources",
      "mi_is_senior_for_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan homestead property tax credit household resource exemption"
  },
  "mi_homestead_property_tax_credit_countable_property_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/homestead_property_tax/mi_homestead_property_tax_credit_countable_property_tax.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.credits.homestead_property_tax",
      "rent_equivalization": "gov.states.mi.tax.income.credits.homestead_property_tax.rent_equivalization"
    },
    "variables": [
      "rent",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan homestead property tax credit countable property tax (including rent equivalent)"
  },
  "mi_allowable_homestead_property_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/homestead_property_tax/mi_allowable_homestead_property_tax_credit.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.credits.homestead_property_tax",
      "calc": "gov.states.mi.tax.income.credits.homestead_property_tax.rate.senior.base.calc",
      "cap": "gov.states.mi.tax.income.credits.homestead_property_tax.cap",
      "rate": "gov.states.mi.tax.income.credits.homestead_property_tax.rate",
      "non_senior_disabled": "gov.states.mi.tax.income.credits.homestead_property_tax.rate.non_senior_disabled",
      "senior": "gov.states.mi.tax.income.credits.homestead_property_tax.rate.senior",
      "base": "gov.states.mi.tax.income.credits.homestead_property_tax.rate.senior.base"
    },
    "variables": [
      "mi_homestead_property_tax_credit_household_resource_exemption",
      "disabled_tax_unit_head_or_spouse",
      "mi_household_resources",
      "mi_is_senior_for_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_homestead_property_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan allowable homestead property tax credit"
  },
  "mi_homestead_property_tax_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/homestead_property_tax/mi_homestead_property_tax_credit_eligible.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.credits.homestead_property_tax",
      "property_value_limit": "gov.states.mi.tax.income.credits.homestead_property_tax.property_value_limit"
    },
    "variables": [
      "assessed_property_value"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Michigan homestead property tax credit"
  },
  "mi_homestead_property_tax_credit_alternate_senior_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/homestead_property_tax/mi_homestead_property_tax_credit_alternate_senior_amount.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.credits.homestead_property_tax",
      "alternate": "gov.states.mi.tax.income.credits.homestead_property_tax.rate.senior.alternate",
      "cap": "gov.states.mi.tax.income.credits.homestead_property_tax.cap",
      "rate": "gov.states.mi.tax.income.credits.homestead_property_tax.rate",
      "senior": "gov.states.mi.tax.income.credits.homestead_property_tax.rate.senior"
    },
    "variables": [
      "rent",
      "mi_homestead_property_tax_credit_pre_alternate_senior_amount",
      "mi_household_resources",
      "mi_is_senior_for_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_homestead_property_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan alternate senior renter homestead property tax credit amount"
  },
  "mi_homestead_property_tax_credit_pre_alternate_senior_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/homestead_property_tax/mi_homestead_property_tax_credit_pre_alternate_senior_amount.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.credits.homestead_property_tax.reduction",
      "start": "gov.states.mi.tax.income.credits.homestead_property_tax.reduction.start",
      "increment": "gov.states.mi.tax.income.credits.homestead_property_tax.reduction.increment",
      "rate": "gov.states.mi.tax.income.credits.homestead_property_tax.reduction.rate"
    },
    "variables": [
      "mi_allowable_homestead_property_tax_credit",
      "mi_household_resources"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_homestead_property_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan homestead property tax credit per alternate senior credit amount"
  },
  "mi_alternate_home_heating_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/home_heating/alternate/mi_alternate_home_heating_credit.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.credits.home_heating.alternate",
      "cap": "gov.states.mi.tax.income.credits.home_heating.alternate.heating_costs.cap",
      "rate": "gov.states.mi.tax.income.credits.home_heating.alternate.heating_costs.rate",
      "heating_costs": "gov.states.mi.tax.income.credits.home_heating.alternate.heating_costs",
      "household_resources": "gov.states.mi.tax.income.credits.home_heating.alternate.household_resources"
    },
    "variables": [
      "mi_household_resources",
      "heating_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_alternate_home_heating_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan alternate home heating credit amount"
  },
  "mi_alternate_home_heating_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/home_heating/alternate/mi_alternate_home_heating_credit_eligible.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.credits.home_heating.alternate",
      "calc": "gov.states.mi.tax.income.credits.home_heating.alternate.household_resources.cap.calc",
      "cap": "gov.states.mi.tax.income.credits.home_heating.alternate.household_resources.cap",
      "household_resources": "gov.states.mi.tax.income.credits.home_heating.alternate.household_resources"
    },
    "variables": [
      "utilities_included_in_rent",
      "mi_exemptions_count",
      "mi_household_resources"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Michigan alternate home heating credit"
  },
  "mi_standard_home_heating_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/home_heating/standard/mi_standard_home_heating_credit_eligible.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.credits.home_heating.standard",
      "fpg_rate": "gov.states.mi.tax.income.credits.home_heating.standard.fpg_rate"
    },
    "variables": [
      "mi_household_resources",
      "tax_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Michigan home heating standard credit"
  },
  "mi_standard_home_heating_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/credits/home_heating/standard/mi_standard_home_heating_credit.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.credits.home_heating",
      "calc": "gov.states.mi.tax.income.credits.home_heating.standard.base.calc",
      "amount": "gov.states.mi.tax.income.credits.home_heating.additional_exemption.amount",
      "limit": "gov.states.mi.tax.income.credits.home_heating.additional_exemption.limit",
      "reduction_rate": "gov.states.mi.tax.income.credits.home_heating.standard.reduction_rate",
      "base": "gov.states.mi.tax.income.credits.home_heating.standard.base",
      "included_heating_cost_rate": "gov.states.mi.tax.income.credits.home_heating.standard.included_heating_cost_rate",
      "additional_exemption": "gov.states.mi.tax.income.credits.home_heating.additional_exemption",
      "standard": "gov.states.mi.tax.income.credits.home_heating.standard"
    },
    "variables": [
      "utilities_included_in_rent",
      "mi_exemptions_count",
      "mi_household_resources"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_standard_home_heating_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan standard home heating credit amount"
  },
  "mi_pension_benefit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/retirement/mi_pension_benefit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mi_retirement_benefits_deduction_tier_one",
      "mi_retirement_benefits_deduction_tier_three"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan pension benefit",
    "description": "Michigan retirement and pension benefits of qualifying age."
  },
  "mi_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/standard/mi_standard_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mi_standard_deduction_tier_two",
      "mi_standard_deduction_tier_three"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan standard deduction",
    "description": "Michigan standard deduction of qualifying age."
  },
  "mi_interest_dividends_capital_gains_deduction_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/interest_dividends_capital_gains/mi_interest_dividends_capital_gains_deduction_eligible.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.interest_dividends_capital_gains",
      "birth_year": "gov.states.mi.tax.income.deductions.interest_dividends_capital_gains.birth_year"
    },
    "variables": [
      "older_spouse_birth_year"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Michigan interest dividends capital gains deduction"
  },
  "mi_interest_dividends_capital_gains_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/interest_dividends_capital_gains/mi_interest_dividends_capital_gains_deduction.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.interest_dividends_capital_gains",
      "income_types": "gov.states.mi.tax.income.deductions.interest_dividends_capital_gains.income_types",
      "amount": "gov.states.mi.tax.income.deductions.interest_dividends_capital_gains.amount"
    },
    "variables": [
      "filing_status",
      "military_retirement_pay",
      "is_tax_unit_head_or_spouse",
      "taxable_pension_income",
      "elderly_disabled_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_interest_dividends_capital_gains_deduction_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan interest, dividends, and capital gains deduction",
    "description": "Michigan interest, dividends, and capital gains deduction of qualifying age."
  },
  "mi_standard_deduction_tier_three": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/standard/tier_three/mi_standard_deduction_tier_three.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions",
      "amount": "gov.states.mi.tax.income.deductions.standard.tier_three.amount",
      "availability": "gov.states.mi.tax.income.deductions.retirement_benefits.expanded.availability",
      "expanded": "gov.states.mi.tax.income.deductions.retirement_benefits.expanded",
      "tier_three": "gov.states.mi.tax.income.deductions.standard.tier_three",
      "retirement_benefits": "gov.states.mi.tax.income.deductions.retirement_benefits",
      "standard": "gov.states.mi.tax.income.deductions.standard"
    },
    "variables": [
      "filing_status",
      "military_retirement_pay",
      "taxable_social_security",
      "mi_expanded_retirement_benefits_deduction",
      "mi_personal_exemptions",
      "is_tax_unit_head_or_spouse",
      "military_service_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_standard_deduction_tier_three_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan tier three standard deduction"
  },
  "mi_standard_deduction_tier_three_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/standard/tier_three/mi_standard_deduction_tier_three_eligible.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.standard.tier_three",
      "calc": "gov.states.mi.tax.income.deductions.standard.tier_three.birth_year.calc",
      "birth_year": "gov.states.mi.tax.income.deductions.standard.tier_three.birth_year"
    },
    "variables": [
      "older_spouse_birth_year"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Michigan standard deduction"
  },
  "mi_standard_deduction_tier_two_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/standard/tier_two/mi_standard_deduction_tier_two_eligible.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.standard.tier_two",
      "calc": "gov.states.mi.tax.income.deductions.standard.tier_two.birth_year.calc",
      "birth_year": "gov.states.mi.tax.income.deductions.standard.tier_two.birth_year"
    },
    "variables": [
      "older_spouse_birth_year"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Michigan tier two standard deduction"
  },
  "mi_standard_deduction_tier_two": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/standard/tier_two/mi_standard_deduction_tier_two.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions",
      "base": "gov.states.mi.tax.income.deductions.standard.tier_two.amount.base",
      "increase": "gov.states.mi.tax.income.deductions.standard.tier_two.amount.increase",
      "availability": "gov.states.mi.tax.income.deductions.retirement_benefits.expanded.availability",
      "expanded": "gov.states.mi.tax.income.deductions.retirement_benefits.expanded",
      "amount": "gov.states.mi.tax.income.deductions.standard.tier_two.amount",
      "retirement_benefits": "gov.states.mi.tax.income.deductions.retirement_benefits",
      "standard": "gov.states.mi.tax.income.deductions.standard",
      "tier_two": "gov.states.mi.tax.income.deductions.standard.tier_two"
    },
    "variables": [
      "military_retirement_pay",
      "filing_status",
      "mi_expanded_retirement_benefits_deduction",
      "is_tax_unit_head_or_spouse",
      "military_service_income",
      "mi_standard_deduction_tier_two_increase_eligible_people"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_standard_deduction_tier_two_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan tier two standard deduction"
  },
  "mi_standard_deduction_tier_two_increase_eligible_people": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/standard/tier_two/mi_standard_deduction_tier_two_increase_eligible_people.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.standard.tier_two",
      "retirement_year": "gov.states.mi.tax.income.deductions.standard.tier_two.retirement_year"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "retirement_benefits_from_ss_exempt_employment",
      "year_of_retirement"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of eligible people for the Michigan tier two standard deduction increase"
  },
  "mi_expanded_retirement_benefits_deduction_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/retirement/expanded/mi_expanded_retirement_benefits_deduction_eligible.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.retirement_benefits.expanded",
      "availability": "gov.states.mi.tax.income.deductions.retirement_benefits.expanded.availability",
      "birth_year": "gov.states.mi.tax.income.deductions.retirement_benefits.expanded.birth_year",
      "calc": "gov.states.mi.tax.income.deductions.retirement_benefits.expanded.birth_year.calc"
    },
    "variables": [
      "older_spouse_birth_year"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Michigan expanded retirement benefits deduction"
  },
  "mi_expanded_retirement_benefits_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/retirement/expanded/mi_expanded_retirement_benefits_deduction.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.retirement_benefits",
      "amount": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_one.amount",
      "rate": "gov.states.mi.tax.income.deductions.retirement_benefits.expanded.rate",
      "tier_one": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_one",
      "expanded": "gov.states.mi.tax.income.deductions.retirement_benefits.expanded"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "taxable_pension_income",
      "filing_status",
      "military_retirement_pay"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_expanded_retirement_benefits_deduction_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan expanded retirement benefits deduction"
  },
  "mi_retirement_benefits_deduction_tier_three_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/retirement/tier_three/mi_retirement_benefits_deduction_tier_three_eligible.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_three",
      "calc": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_three.age_eligibility.calc",
      "age_eligibility": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_three.age_eligibility"
    },
    "variables": [
      "greater_age_head_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Michigan tier three retirement benefits deduction"
  },
  "mi_retirement_benefits_deduction_tier_three": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/retirement/tier_three/mi_retirement_benefits_deduction_tier_three.py",
    "parameters": {},
    "variables": [
      "mi_retirement_benefits_deduction_tier_three_ss_exempt_not_retired",
      "mi_retirement_benefits_deduction_tier_three_ss_exempt_retired"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_retirement_benefits_deduction_tier_three_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan retirement benefits deduction for tier three"
  },
  "mi_retirement_benefits_deduction_tier_one_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/retirement/tier_one/mi_retirement_benefits_deduction_tier_one_eligible.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_one",
      "birth_year": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_one.birth_year"
    },
    "variables": [
      "older_spouse_birth_year"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Michigan tier one retirement benefits deduction"
  },
  "mi_retirement_benefits_deduction_tier_one_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/retirement/tier_one/mi_retirement_benefits_deduction_tier_one_amount.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_one",
      "amount": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_one.amount"
    },
    "variables": [
      "filing_status",
      "military_retirement_pay",
      "taxable_private_pension_income",
      "is_tax_unit_head_or_spouse",
      "taxable_public_pension_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan retirement benefits deduction amount for tier one, regardless of eligiblity"
  },
  "mi_retirement_benefits_deduction_tier_one": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/retirement/tier_one/mi_retirement_benefits_deduction_tier_one.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mi_retirement_benefits_deduction_tier_one_amount"
    ],
    "subtracts": [],
    "defined_for": "mi_retirement_benefits_deduction_tier_one_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan retirement benefits deduction for tier one"
  },
  "mi_retirement_benefits_deduction_tier_three_ss_exempt_not_retired": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/retirement/tier_three/ss_exempt/not_retired/mi_retirement_benefits_deduction_tier_three_ss_exempt_not_retired.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.retirement_benefits",
      "availability": "gov.states.mi.tax.income.deductions.retirement_benefits.expanded.availability",
      "amount": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_three.ss_exempt.not_retired.amount",
      "expanded": "gov.states.mi.tax.income.deductions.retirement_benefits.expanded",
      "tier_three": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_three",
      "not_retired": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_three.ss_exempt.not_retired",
      "ss_exempt": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_three.ss_exempt"
    },
    "variables": [
      "military_retirement_pay",
      "mi_expanded_retirement_benefits_deduction",
      "mi_retirement_benefits_deduction_tier_three_ss_exempt_not_retired_eligible_people",
      "is_tax_unit_head_or_spouse",
      "taxable_pension_income",
      "mi_retirement_benefits_deduction_tier_one_amount"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_retirement_benefits_deduction_tier_three_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan non-retired tier three retirement benefits deduction"
  },
  "mi_retirement_benefits_deduction_tier_three_ss_exempt_not_retired_eligible_people": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/retirement/tier_three/ss_exempt/not_retired/mi_retirement_benefits_deduction_tier_three_ss_exempt_not_retired_eligible_people.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "retirement_benefits_from_ss_exempt_employment"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of eligible people for the Michigan non-retired tier three retirement benefits deduction"
  },
  "mi_retirement_benefits_deduction_tier_three_ss_exempt_retired": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/retirement/tier_three/ss_exempt/retired/mi_retirement_benefits_deduction_tier_three_ss_exempt_retired.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_three.ss_exempt.retired",
      "single_qualifying_amount": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_three.ss_exempt.retired.single_qualifying_amount",
      "both_qualifying_amount": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_three.ss_exempt.retired.both_qualifying_amount"
    },
    "variables": [
      "filing_status",
      "military_retirement_pay",
      "mi_retirement_benefits_deduction_tier_three_ss_exempt_retired_eligible_people",
      "is_tax_unit_head_or_spouse",
      "taxable_pension_income",
      "mi_retirement_benefits_deduction_tier_one_amount"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mi_retirement_benefits_deduction_tier_three_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Michigan retired tier three retirement benefits deduction"
  },
  "mi_retirement_benefits_deduction_tier_three_ss_exempt_retired_eligible_people": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mi/tax/income/deductions/retirement/tier_three/ss_exempt/retired/mi_retirement_benefits_deduction_tier_three_ss_exempt_retired_eligible_people.py",
    "parameters": {
      "p": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_three.ss_exempt.retired",
      "retirement_year": "gov.states.mi.tax.income.deductions.retirement_benefits.tier_three.ss_exempt.retired.retirement_year"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "retirement_benefits_from_ss_exempt_employment",
      "year_of_retirement"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MI",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Michigan tier three retired retirement benefits deduction"
  },
  "mn_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/mn_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mn_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "mn_refundable_credits"
    ],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota income tax"
  },
  "mn_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/mn_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "mn_income_tax_before_credits",
      "mn_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota income tax before refundable credits"
  },
  "mn_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/mn_taxable_income.py",
    "parameters": {},
    "variables": [
      "mn_subtractions",
      "mn_deductions",
      "adjusted_gross_income",
      "mn_additions",
      "mn_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota taxable income"
  },
  "mn_basic_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/mn_basic_tax.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.rates",
      "calc": "gov.states.mn.tax.income.rates.head_of_household.calc",
      "rates": "gov.states.mn.tax.income.rates"
    },
    "variables": [
      "filing_status",
      "mn_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota basic tax calculated using tax rate schedules"
  },
  "mn_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/mn_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.mn.tax.income",
      "base": "gov.states.mn.tax.income.deductions.standard.base",
      "calc": "gov.states.mn.tax.income.rates.single.calc",
      "standard": "gov.states.mn.tax.income.deductions.standard",
      "single": "gov.states.mn.tax.income.rates.single",
      "deductions": "gov.states.mn.tax.income.deductions",
      "rates": "gov.states.mn.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota withheld income tax"
  },
  "mn_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/mn_income_tax_before_credits.py",
    "parameters": {},
    "variables": [
      "mn_amt",
      "mn_niit",
      "mn_basic_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota income tax before credits"
  },
  "mn_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/subtractions/mn_subtractions.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.subtractions",
      "sources": "gov.states.mn.tax.income.subtractions.sources"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota subtractions from federal AGI"
  },
  "mn_elderly_disabled_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/subtractions/mn_elderly_disabled_subtraction.py",
    "parameters": {
      "mn_itax": "gov.states.mn.tax.income",
      "elderly_disabled": "gov.states.mn.tax.income.subtractions.elderly_disabled",
      "subtractions": "gov.states.mn.tax.income.subtractions"
    },
    "variables": [
      "filing_status",
      "age",
      "social_security",
      "taxable_social_security",
      "total_disability_payments",
      "is_tax_unit_dependent",
      "form_4972_lumpsum_distributions",
      "adjusted_gross_income",
      "is_tax_unit_head",
      "is_tax_unit_spouse",
      "is_permanently_and_totally_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota elderly/disabled subtraction"
  },
  "mn_charity_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/subtractions/mn_charity_subtraction.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.subtractions.charity",
      "fraction": "gov.states.mn.tax.income.subtractions.charity.fraction",
      "threshold": "gov.states.mn.tax.income.subtractions.charity.threshold"
    },
    "variables": [
      "charitable_deduction",
      "mn_itemizing"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota charity subtraction"
  },
  "mn_social_security_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/subtractions/mn_social_security_subtraction.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.subtractions.social_security",
      "start": "gov.states.mn.tax.income.subtractions.social_security.reduction.start",
      "applies": "gov.states.mn.tax.income.subtractions.social_security.reduction.applies",
      "increment": "gov.states.mn.tax.income.subtractions.social_security.reduction.increment",
      "rate": "gov.states.mn.tax.income.subtractions.social_security.reduction.rate",
      "social_security": "gov.states.mn.tax.income.subtractions.social_security"
    },
    "variables": [
      "irs_gross_income",
      "filing_status",
      "social_security",
      "taxable_social_security",
      "above_the_line_deductions",
      "tax_exempt_interest_income",
      "adjusted_gross_income",
      "student_loan_interest"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota social security subtraction"
  },
  "mn_public_pension_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/subtractions/mn_public_pension_subtraction.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.subtractions.pension_income",
      "cap": "gov.states.mn.tax.income.subtractions.pension_income.cap",
      "reduction": "gov.states.mn.tax.income.subtractions.pension_income.reduction",
      "start": "gov.states.mn.tax.income.subtractions.pension_income.reduction.start",
      "increment": "gov.states.mn.tax.income.subtractions.pension_income.reduction.increment",
      "rate": "gov.states.mn.tax.income.subtractions.pension_income.reduction.rate"
    },
    "variables": [
      "filing_status",
      "taxable_public_pension_income",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota public pension subtraction"
  },
  "mn_amt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/amt/mn_amt.py",
    "parameters": {
      "p": "gov.states.mn.tax.income",
      "p_gov": "gov.irs.income.amt.exemption.phase_out",
      "fractional_income_threshold": "gov.states.mn.tax.income.amt.fractional_income_threshold",
      "rate": "gov.states.mn.tax.income.amt.rate",
      "income_threshold": "gov.states.mn.tax.income.amt.income_threshold",
      "amt": "gov.states.mn.tax.income.amt"
    },
    "variables": [
      "filing_status",
      "mn_amt_taxable_income",
      "mn_basic_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota alternative minimum tax (AMT)"
  },
  "mn_amt_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/amt/mn_amt_taxable_income.py",
    "parameters": {},
    "variables": [
      "us_govt_interest",
      "casualty_loss_deduction",
      "mn_social_security_subtraction",
      "mn_charity_subtraction",
      "charitable_deduction",
      "mn_itemizing",
      "adjusted_gross_income",
      "medical_expense_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota alternative minimum tax (AMT) taxable income"
  },
  "mn_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/additions/mn_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "form_4972_lumpsum_distributions"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota additions to federal AGI",
    "adds_from_parameter": "gov.states.mn.tax.income.additions.sources"
  },
  "mn_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/deductions/mn_standard_deduction.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.deductions.standard",
      "low": "gov.states.mn.tax.income.deductions.standard.reduction.agi_threshold.low",
      "high": "gov.states.mn.tax.income.deductions.standard.reduction.agi_threshold.high",
      "base": "gov.states.mn.tax.income.deductions.standard.base",
      "extra": "gov.states.mn.tax.income.deductions.standard.extra",
      "reduction": "gov.states.mn.tax.income.deductions.standard.reduction",
      "alternate_reduction_applies": "gov.states.mn.tax.income.deductions.standard.reduction.alternate_reduction_applies",
      "excess_agi_fraction": "gov.states.mn.tax.income.deductions.standard.reduction.excess_agi_fraction",
      "agi_threshold": "gov.states.mn.tax.income.deductions.standard.reduction.agi_threshold",
      "alternate": "gov.states.mn.tax.income.deductions.standard.reduction.alternate",
      "rate": "gov.states.mn.tax.income.deductions.standard.reduction.alternate.rate",
      "income_threshold": "gov.states.mn.tax.income.deductions.standard.reduction.alternate.income_threshold"
    },
    "variables": [
      "filing_status",
      "aged_blind_count",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota standard deduction"
  },
  "mn_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/deductions/mn_itemized_deductions.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.deductions.itemized",
      "low": "gov.states.mn.tax.income.deductions.itemized.reduction.agi_threshold.low",
      "high": "gov.states.mn.tax.income.deductions.itemized.reduction.agi_threshold.high",
      "alternate_reduction_applies": "gov.states.mn.tax.income.deductions.itemized.alternate_reduction_applies",
      "reduction": "gov.states.mn.tax.income.deductions.itemized.reduction",
      "excess_agi_fraction": "gov.states.mn.tax.income.deductions.itemized.reduction.excess_agi_fraction",
      "agi_threshold": "gov.states.mn.tax.income.deductions.itemized.reduction.agi_threshold",
      "alternate": "gov.states.mn.tax.income.deductions.itemized.reduction.alternate",
      "rate": "gov.states.mn.tax.income.deductions.itemized.reduction.alternate.rate",
      "income_threshold": "gov.states.mn.tax.income.deductions.itemized.reduction.alternate.income_threshold"
    },
    "variables": [
      "filing_status",
      "capped_property_taxes",
      "medical_expense_deduction",
      "adjusted_gross_income",
      "itemized_deductions_less_salt",
      "casualty_loss_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota itemized deductions"
  },
  "mn_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/deductions/mn_deductions.py",
    "parameters": {},
    "variables": [
      "mn_itemized_deductions",
      "mn_itemizing",
      "mn_standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota deductions"
  },
  "mn_itemizing": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/deductions/mn_itemizing.py",
    "parameters": {},
    "variables": [
      "mn_itemized_deductions",
      "mn_standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "whether or not itemizing Minnesota deductions"
  },
  "mn_niit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/niit/mn_niit.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.niit",
      "calc": "gov.states.mn.tax.income.niit.rate.calc",
      "rate": "gov.states.mn.tax.income.niit.rate"
    },
    "variables": [
      "net_investment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota Net Investment Income Tax (NIIT)"
  },
  "mn_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/exemptions/mn_exemptions.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.exemptions",
      "amount": "gov.states.mn.tax.income.exemptions.amount",
      "agi_step_fraction": "gov.states.mn.tax.income.exemptions.agi_step_fraction",
      "agi_threshold": "gov.states.mn.tax.income.exemptions.agi_threshold",
      "agi_step_size": "gov.states.mn.tax.income.exemptions.agi_step_size"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income",
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota exemptions amount"
  },
  "mn_wfc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/credits/mn_wfc_eligible.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.credits.cwfc",
      "minimum": "gov.states.mn.tax.income.credits.cwfc.wfc.eligible.childless_adult_age.minimum",
      "maximum": "gov.states.mn.tax.income.credits.cwfc.wfc.eligible.childless_adult_age.maximum",
      "childless_adult_age": "gov.states.mn.tax.income.credits.cwfc.wfc.eligible.childless_adult_age",
      "eligible": "gov.states.mn.tax.income.credits.cwfc.wfc.eligible",
      "wfc": "gov.states.mn.tax.income.credits.cwfc.wfc"
    },
    "variables": [
      "filing_status",
      "age",
      "eitc_investment_income_eligible",
      "is_tax_unit_dependent",
      "tax_unit_children"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota working family credit eligibilty status"
  },
  "mn_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/credits/mn_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mn_marriage_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota nonrefundable income tax credits",
    "adds_from_parameter": "gov.states.mn.tax.income.credits.nonrefundable"
  },
  "mn_marriage_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/credits/mn_marriage_credit.py",
    "parameters": {
      "mn_itax": "gov.states.mn.tax.income",
      "marriage": "gov.states.mn.tax.income.credits.marriage",
      "base": "gov.states.mn.tax.income.deductions.standard.base",
      "credits": "gov.states.mn.tax.income.credits",
      "deductions": "gov.states.mn.tax.income.deductions",
      "rates": "gov.states.mn.tax.income.rates",
      "calc": "gov.states.mn.tax.income.rates.single.calc",
      "standard": "gov.states.mn.tax.income.deductions.standard",
      "single": "gov.states.mn.tax.income.rates.single"
    },
    "variables": [
      "filing_status",
      "mn_taxable_income",
      "self_employment_tax_ald_person",
      "is_tax_unit_head",
      "is_tax_unit_spouse",
      "mn_basic_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota marriage credit"
  },
  "mn_wfc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/credits/mn_wfc.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.credits.cwfc",
      "calc": "gov.states.mn.tax.income.credits.cwfc.wfc.pre_cwfc_legislation.phase_out.rate.calc",
      "earnings_maximum": "gov.states.mn.tax.income.credits.cwfc.wfc.pre_cwfc_legislation.phase_in.earnings_maximum",
      "rate": "gov.states.mn.tax.income.credits.cwfc.wfc.pre_cwfc_legislation.phase_out.rate",
      "threshold": "gov.states.mn.tax.income.credits.cwfc.wfc.pre_cwfc_legislation.phase_out.threshold",
      "joint": "gov.states.mn.tax.income.credits.cwfc.wfc.pre_cwfc_legislation.phase_out.threshold.joint",
      "other": "gov.states.mn.tax.income.credits.cwfc.wfc.pre_cwfc_legislation.phase_out.threshold.other",
      "phase_in": "gov.states.mn.tax.income.credits.cwfc.wfc.pre_cwfc_legislation.phase_in",
      "phase_out": "gov.states.mn.tax.income.credits.cwfc.wfc.pre_cwfc_legislation.phase_out",
      "pre_cwfc_legislation": "gov.states.mn.tax.income.credits.cwfc.wfc.pre_cwfc_legislation",
      "wfc": "gov.states.mn.tax.income.credits.cwfc.wfc"
    },
    "variables": [
      "filing_status",
      "filer_adjusted_earnings",
      "mn_wfc_eligible",
      "adjusted_gross_income",
      "eitc_child_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota working family credit amount"
  },
  "mn_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/credits/mn_cdcc.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.credits.cdcc",
      "cdcc": "gov.states.mn.tax.income.credits.cdcc",
      "calc": "gov.states.mn.tax.income.credits.cdcc.expense_fraction.calc"
    },
    "variables": [
      "min_head_spouse_earned",
      "filing_status",
      "age",
      "adjusted_gross_income",
      "is_tax_unit_head",
      "tax_unit_childcare_expenses",
      "is_incapable_of_self_care"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota child and dependent care expense credit"
  },
  "mn_child_and_working_families_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/credits/mn_child_and_working_families_credits.py",
    "parameters": {
      "p": "gov.states.mn.tax.income.credits.cwfc",
      "amount": "gov.states.mn.tax.income.credits.cwfc.wfc.additional.amount",
      "age_threshold": "gov.states.mn.tax.income.credits.cwfc.wfc.additional.age_threshold",
      "calc": "gov.states.mn.tax.income.credits.cwfc.wfc.additional.amount.calc",
      "joint": "gov.states.mn.tax.income.credits.cwfc.phase_out.threshold.joint",
      "other": "gov.states.mn.tax.income.credits.cwfc.phase_out.threshold.other",
      "ctc_ineligible_with_qualifying_older_children": "gov.states.mn.tax.income.credits.cwfc.phase_out.rate.ctc_ineligible_with_qualifying_older_children",
      "main": "gov.states.mn.tax.income.credits.cwfc.phase_out.rate.main",
      "ctc": "gov.states.mn.tax.income.credits.cwfc.ctc",
      "wfc": "gov.states.mn.tax.income.credits.cwfc.wfc",
      "phase_out": "gov.states.mn.tax.income.credits.cwfc.phase_out",
      "phase_in": "gov.states.mn.tax.income.credits.cwfc.wfc.phase_in",
      "additional": "gov.states.mn.tax.income.credits.cwfc.wfc.additional",
      "threshold": "gov.states.mn.tax.income.credits.cwfc.phase_out.threshold",
      "rate": "gov.states.mn.tax.income.credits.cwfc.phase_out.rate"
    },
    "variables": [
      "filer_adjusted_earnings",
      "age",
      "ctc_qualifying_children",
      "mn_wfc_eligible",
      "is_child_dependent",
      "filing_status",
      "is_full_time_student",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota child and working families credits"
  },
  "mn_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mn/tax/income/credits/mn_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mn_cdcc",
      "mn_child_and_working_families_credits"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MN",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Minnesota refundable income tax credits",
    "adds_from_parameter": "gov.states.mn.tax.income.credits.refundable"
  },
  "nh_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nh/tax/income/nh_income_tax_before_refundable_credits.py",
    "parameters": {
      "p": "gov.states.nh.tax.income",
      "in_effect": "gov.states.nh.tax.income.in_effect",
      "rate": "gov.states.nh.tax.income.rate"
    },
    "variables": [
      "nh_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Hampshire income tax before refundable credits"
  },
  "nh_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nh/tax/income/nh_taxable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dividend_income",
      "interest_income"
    ],
    "subtracts": [
      "nh_total_exemptions"
    ],
    "defined_for": "StateCode.NH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Hampshire taxable income"
  },
  "nh_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nh/tax/income/nh_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Hampshire refundable credits"
  },
  "nh_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nh/tax/income/nh_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nh_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "nh_refundable_credits"
    ],
    "defined_for": "StateCode.NH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Hampshire income tax"
  },
  "nh_education_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nh/tax/credits/nh_education_tax_credit.py",
    "parameters": {
      "p": "gov.states.nh.tax.credits.education",
      "calc": "gov.states.nh.tax.credits.education.rate.calc",
      "rate": "gov.states.nh.tax.credits.education.rate"
    },
    "variables": [
      "charitable_cash_donations",
      "charitable_non_cash_donations"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Hampshire Education Tax Credit"
  },
  "nh_base_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nh/tax/income/exemptions/nh_base_exemption.py",
    "parameters": {
      "p": "gov.states.nh.tax.income.exemptions.amount",
      "base": "gov.states.nh.tax.income.exemptions.amount.base"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Hampshire base exemption"
  },
  "nh_old_age_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nh/tax/income/exemptions/nh_old_age_exemption.py",
    "parameters": {
      "p": "gov.states.nh.tax.income.exemptions",
      "old_age_addition": "gov.states.nh.tax.income.exemptions.amount.old_age_addition",
      "amount": "gov.states.nh.tax.income.exemptions.amount",
      "old_age_eligibility": "gov.states.nh.tax.income.exemptions.old_age_eligibility"
    },
    "variables": [
      "age_head",
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Hampshire old age exemption"
  },
  "nh_total_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nh/tax/income/exemptions/nh_total_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nh_base_exemption",
      "nh_blind_exemption",
      "nh_disabled_exemption",
      "nh_old_age_exemption"
    ],
    "subtracts": [],
    "defined_for": "StateCode.NH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Hampshire total exemption allowance"
  },
  "nh_blind_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nh/tax/income/exemptions/nh_blind_exemption.py",
    "parameters": {
      "p": "gov.states.nh.tax.income.exemptions.amount",
      "blind_addition": "gov.states.nh.tax.income.exemptions.amount.blind_addition"
    },
    "variables": [
      "blind_spouse",
      "blind_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Hampshire blind exemption"
  },
  "nh_disabled_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/nh/tax/income/exemptions/nh_disabled_exemption.py",
    "parameters": {
      "p": "gov.states.nh.tax.income.exemptions",
      "disability_age_threshold": "gov.states.nh.tax.income.exemptions.disability_age_threshold",
      "amount": "gov.states.nh.tax.income.exemptions.amount",
      "disabled_addition": "gov.states.nh.tax.income.exemptions.amount.disabled_addition"
    },
    "variables": [
      "age_head",
      "disabled_spouse",
      "age_spouse",
      "disabled_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.NH",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New Hampshire disabled exemption"
  },
  "al_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/al_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "al_non_refundable_credits",
      "al_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama income tax before refundable credits"
  },
  "al_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/al_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama non-refundable credits"
  },
  "al_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/al_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "p": "gov.states.al.tax.income.rates",
      "calc": "gov.states.al.tax.income.rates.head_of_household.calc",
      "rates": "gov.states.al.tax.income.rates"
    },
    "variables": [
      "filing_status",
      "al_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama income tax before non-refundable credits"
  },
  "al_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/al_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "al_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "al_refundable_credits"
    ],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama income tax"
  },
  "al_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/al_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama refundable credits"
  },
  "al_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/al_taxable_income.py",
    "parameters": {},
    "variables": [
      "al_deductions",
      "al_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama taxable income"
  },
  "al_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/al_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "irs_employment_income",
      "self_employment_income",
      "interest_income",
      "dividend_income",
      "alimony_income",
      "taxable_ira_distributions",
      "taxable_401k_distributions",
      "taxable_sep_distributions",
      "taxable_403b_distributions",
      "keogh_distributions",
      "pension_income",
      "rental_income",
      "capital_gains"
    ],
    "subtracts": [
      "traditional_ira_contributions",
      "alimony_expense",
      "self_employed_health_insurance_ald",
      "al_retirement_exemption"
    ],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama adjusted gross income",
    "adds_from_parameter": "gov.states.al.tax.income.agi.gross_income_sources",
    "subtracts_from_parameter": "gov.states.al.tax.income.agi.deductions"
  },
  "al_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/al_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.al.tax.income",
      "max": "gov.states.al.tax.income.deductions.standard.amount.max",
      "calc": "gov.states.al.tax.income.rates.single.calc",
      "amount": "gov.states.al.tax.income.deductions.standard.amount",
      "single": "gov.states.al.tax.income.rates.single",
      "standard": "gov.states.al.tax.income.deductions.standard",
      "rates": "gov.states.al.tax.income.rates",
      "deductions": "gov.states.al.tax.income.deductions"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama withheld income tax"
  },
  "al_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/deductions/al_standard_deduction.py",
    "parameters": {
      "p": "gov.states.al.tax.income.deductions.standard",
      "max": "gov.states.al.tax.income.deductions.standard.amount.max",
      "min": "gov.states.al.tax.income.deductions.standard.amount.min",
      "increment": "gov.states.al.tax.income.deductions.standard.phase_out.increment",
      "rate": "gov.states.al.tax.income.deductions.standard.phase_out.rate",
      "threshold": "gov.states.al.tax.income.deductions.standard.phase_out.threshold",
      "amount": "gov.states.al.tax.income.deductions.standard.amount",
      "phase_out": "gov.states.al.tax.income.deductions.standard.phase_out"
    },
    "variables": [
      "al_agi",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama standard deduction",
    "description": "https://alisondb.legislature.state.al.us/alison/CodeOfAlabama/1975/Coatoc.htm"
  },
  "al_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/deductions/al_deductions.py",
    "parameters": {},
    "variables": [
      "al_itemized_deductions",
      "al_standard_deduction",
      "al_dependent_exemption",
      "al_personal_exemption",
      "al_federal_income_tax_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama deductions"
  },
  "al_dependent_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/exemptions/al_dependent_exemption.py",
    "parameters": {
      "p": "gov.states.al.tax.income.exemptions",
      "calc": "gov.states.al.tax.income.exemptions.dependent.calc",
      "dependent": "gov.states.al.tax.income.exemptions.dependent"
    },
    "variables": [
      "al_agi",
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama dependent exemption",
    "description": "https://alisondb.legislature.state.al.us/alison/CodeOfAlabama/1975/Coatoc.htm"
  },
  "al_personal_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/exemptions/al_personal_exemption.py",
    "parameters": {
      "p": "gov.states.al.tax.income.exemptions",
      "personal": "gov.states.al.tax.income.exemptions.personal"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama personal exemption",
    "description": "https://alisondb.legislature.state.al.us/alison/CodeOfAlabama/1975/Coatoc.htm"
  },
  "al_retirement_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/exemptions/retirement/al_retirement_exemption_person.py",
    "parameters": {
      "p": "gov.states.al.tax.income.exemptions.retirement",
      "cap": "gov.states.al.tax.income.exemptions.retirement.cap"
    },
    "variables": [
      "taxable_pension_income",
      "taxable_retirement_distributions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "al_retirement_exemption_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama retirement exemption for each person",
    "description": "https://www.revenue.alabama.gov/wp-content/uploads/2024/01/23schrsinstr.pdf#page=1https://www.revenue.alabama.gov/ultraviewer/viewer/basic_viewer/index.html?form=2024/01/23f40bk.pdf#page=14https://casetext.com/statute/code-of-alabama/title-40-revenue-and-taxation/chapter-18-income-taxes/article-1-general-provisions/section-40-18-19-exemptions-generally"
  },
  "al_retirement_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/exemptions/retirement/al_retirement_exemption.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "al_retirement_exemption_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama retirement exemption",
    "description": "https://www.revenue.alabama.gov/wp-content/uploads/2024/01/23schrsinstr.pdf#page=1https://www.revenue.alabama.gov/ultraviewer/viewer/basic_viewer/index.html?form=2024/01/23f40bk.pdf#page=14https://casetext.com/statute/code-of-alabama/title-40-revenue-and-taxation/chapter-18-income-taxes/article-1-general-provisions/section-40-18-19-exemptions-generally"
  },
  "al_retirement_exemption_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/exemptions/retirement/al_retirement_exemption_eligible_person.py",
    "parameters": {
      "p": "gov.states.al.tax.income.exemptions.retirement",
      "age_threshold": "gov.states.al.tax.income.exemptions.retirement.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama retirement exemption",
    "description": "https://www.revenue.alabama.gov/wp-content/uploads/2024/01/23schrsinstr.pdf#page=1https://www.revenue.alabama.gov/ultraviewer/viewer/basic_viewer/index.html?form=2024/01/23f40bk.pdf#page=14https://casetext.com/statute/code-of-alabama/title-40-revenue-and-taxation/chapter-18-income-taxes/article-1-general-provisions/section-40-18-19-exemptions-generally"
  },
  "al_federal_income_tax_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/deductions/federal_income_tax/al_federal_income_tax_deduction.py",
    "parameters": {
      "p": "gov.states.al.tax.income.deductions.federal_tax",
      "credits": "gov.states.al.tax.income.deductions.federal_tax.credits"
    },
    "variables": [
      "income_tax_before_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama federal income tax deduction"
  },
  "al_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/deductions/itemized/al_itemized_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "real_estate_taxes",
      "employee_payroll_tax",
      "self_employment_tax",
      "charitable_deduction",
      "al_medical_expense_deduction",
      "al_casualty_loss_deduction",
      "al_misc_deduction",
      "al_interest_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama itemized deductions",
    "adds_from_parameter": "gov.states.al.tax.income.deductions.itemized.sources"
  },
  "al_medical_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/deductions/itemized/al_medical_expense_deduction.py",
    "parameters": {
      "p": "gov.states.al.tax.income.deductions.itemized.medical_expense",
      "income_floor": "gov.states.al.tax.income.deductions.itemized.medical_expense.income_floor"
    },
    "variables": [
      "al_agi",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama medical expense deduction"
  },
  "al_casualty_loss_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/deductions/itemized/al_casualty_loss_deduction.py",
    "parameters": {
      "deduction": "gov.irs.deductions.itemized.casualty",
      "floor": "gov.irs.deductions.itemized.casualty.floor"
    },
    "variables": [
      "casualty_loss",
      "al_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama casualty loss deduction"
  },
  "al_misc_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/al/tax/income/deductions/itemized/al_misc_deduction.py",
    "parameters": {
      "p": "gov.states.al.tax.income.deductions.itemized",
      "work_related_expense_rate": "gov.states.al.tax.income.deductions.itemized.work_related_expense_rate"
    },
    "variables": [
      "al_agi",
      "misc_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AL",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alabama Work Related Expense"
  },
  "ky_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/ky_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky additions"
  },
  "ky_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/ky_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ky_additions",
      "adjusted_gross_income_person"
    ],
    "subtracts": [
      "ky_subtractions"
    ],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky adjusted gross income"
  },
  "ky_income_tax_before_non_refundable_credits_unit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/ky_income_tax_before_non_refundable_credits_unit.py",
    "parameters": {},
    "variables": [
      "ky_income_tax_before_non_refundable_credits_indiv",
      "ky_files_separately",
      "ky_income_tax_before_non_refundable_credits_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky income tax before non-refundable credits combined"
  },
  "ky_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/ky_subtractions.py",
    "parameters": {
      "p": "gov.states.ky.tax.income",
      "subtractions": "gov.states.ky.tax.income.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky subtractions"
  },
  "ky_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/ky_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ky_non_refundable_credits",
      "ky_income_tax_before_non_refundable_credits_unit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky income tax before refundable credits"
  },
  "ky_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/ky_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ky.tax.income",
      "standard": "gov.states.ky.tax.income.deductions.standard",
      "deductions": "gov.states.ky.tax.income.deductions",
      "rate": "gov.states.ky.tax.income.rate"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky withheld income tax"
  },
  "ky_income_tax_before_non_refundable_credits_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/ky_income_tax_before_non_refundable_credits_joint.py",
    "parameters": {
      "p": "gov.states.ky.tax.income",
      "rate": "gov.states.ky.tax.income.rate"
    },
    "variables": [
      "ky_taxable_income_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky income tax before non-refundable credits when married filing jointly"
  },
  "ky_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/ky_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ky_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "ky_refundable_credits"
    ],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky income tax"
  },
  "ky_taxable_income_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/ky_taxable_income_indiv.py",
    "parameters": {},
    "variables": [
      "ky_agi",
      "ky_deductions_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky taxable income when married couples file separately"
  },
  "ky_filing_status": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/ky_filing_status.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_spouse",
      "is_separated"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "Enum",
    "possible_values": "KyFilingStatus",
    "enum_options": [
      {
        "key": "SINGLE",
        "value": "Single"
      },
      {
        "key": "JOINT",
        "value": "Joint"
      },
      {
        "key": "SEPARATE",
        "value": "Separate"
      }
    ],
    "label": "Filing status for the tax unit in Kentucky"
  },
  "ky_taxable_income_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/ky_taxable_income_joint.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "ky_agi",
      "ky_deductions_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky taxable income when married couples file jointly"
  },
  "ky_income_tax_before_non_refundable_credits_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/ky_income_tax_before_non_refundable_credits_indiv.py",
    "parameters": {
      "p": "gov.states.ky.tax.income",
      "rate": "gov.states.ky.tax.income.rate"
    },
    "variables": [
      "ky_taxable_income_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky income tax before non-refundable credits when married couples are filing separately"
  },
  "ky_tax_unit_itemizes": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/deductions/ky_tax_unit_itemizes.py",
    "parameters": {},
    "variables": [
      "ky_standard_deduction_indiv",
      "ky_itemized_deductions_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the tax unit in Kentucky itemizes the deductions when married filing separately"
  },
  "ky_itemized_deductions_unit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/deductions/ky_itemized_deductions_unit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "itemized_deductions_less_salt"
    ],
    "subtracts": [
      "medical_expense_deduction"
    ],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky itemized deductions"
  },
  "ky_deductions_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/deductions/ky_deductions_indiv.py",
    "parameters": {},
    "variables": [
      "ky_standard_deduction_indiv",
      "ky_tax_unit_itemizes",
      "ky_itemized_deductions_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky income deductions when married couples file separately"
  },
  "ky_standard_deduction_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/deductions/ky_standard_deduction_indiv.py",
    "parameters": {
      "p": "gov.states.ky.tax.income.deductions",
      "standard": "gov.states.ky.tax.income.deductions.standard"
    },
    "variables": [
      "is_tax_unit_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky standard deduction when married couples file separately"
  },
  "ky_deductions_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/deductions/ky_deductions_joint.py",
    "parameters": {},
    "variables": [
      "ky_itemized_deductions_joint",
      "ky_standard_deduction_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky itemized deductions when married couples file jointly"
  },
  "ky_standard_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/deductions/ky_standard_deduction_joint.py",
    "parameters": {
      "p": "gov.states.ky.tax.income.deductions",
      "standard": "gov.states.ky.tax.income.deductions.standard"
    },
    "variables": [
      "is_tax_unit_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky standard deduction when married couples file jointly"
  },
  "ky_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/ky_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ky_family_size_tax_credit",
      "ky_tuition_tax_credit",
      "ky_personal_tax_credits",
      "ky_cdcc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky non-refundable credits",
    "adds_from_parameter": "gov.states.ky.tax.income.credits.non_refundable"
  },
  "ky_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/ky_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky refundable credits"
  },
  "ky_family_size_tax_credit_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/family_size_credit/ky_family_size_tax_credit_rate.py",
    "parameters": {
      "fpg": "gov.hhs.fpg",
      "p": "gov.states.ky.tax.income.credits.family_size",
      "first_person": "gov.hhs.fpg.first_person",
      "additional_person": "gov.hhs.fpg.additional_person",
      "family_size_cap": "gov.states.ky.tax.income.credits.family_size.family_size_cap",
      "rate": "gov.states.ky.tax.income.credits.family_size.rate",
      "calc": "gov.states.ky.tax.income.credits.family_size.rate.calc"
    },
    "variables": [
      "state_group",
      "tax_unit_size",
      "ky_modified_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky family size tax credit rate",
    "unit": "/1"
  },
  "ky_modified_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/family_size_credit/ky_modified_agi.py",
    "parameters": {},
    "variables": [
      "ky_agi",
      "form_4972_lumpsum_distributions",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky modified adjusted gross income for the family size tax credit"
  },
  "ky_family_size_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/family_size_credit/ky_family_size_tax_credit.py",
    "parameters": {},
    "variables": [
      "ky_personal_tax_credits",
      "ky_income_tax_before_non_refundable_credits_unit",
      "ky_family_size_tax_credit_rate"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky family size tax credit",
    "unit": "/1"
  },
  "ky_personal_tax_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/personal/ky_personal_tax_credits.py",
    "parameters": {},
    "variables": [
      "ky_personal_tax_credits_indiv",
      "ky_files_separately",
      "ky_personal_tax_credits_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky personal tax credits combined"
  },
  "ky_personal_tax_credits_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/personal/ky_personal_tax_credits_joint.py",
    "parameters": {},
    "variables": [
      "ky_blind_personal_tax_credits",
      "is_tax_unit_head",
      "ky_military_personal_tax_credits",
      "ky_aged_personal_tax_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky personal tax credits when married couples file jointly"
  },
  "ky_aged_personal_tax_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/personal/ky_aged_personal_tax_credits.py",
    "parameters": {
      "p": "gov.states.ky.tax.income.credits.personal.amount",
      "calc": "gov.states.ky.tax.income.credits.personal.amount.aged.calc",
      "aged": "gov.states.ky.tax.income.credits.personal.amount.aged"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky personal tax credits aged amount",
    "description": "https://apps.legislature.ky.gov/law/statutes/statute.aspx?id=53500#page=3"
  },
  "ky_personal_tax_credits_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/personal/ky_personal_tax_credits_indiv.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ky_blind_personal_tax_credits",
      "ky_aged_personal_tax_credits",
      "ky_military_personal_tax_credits"
    ],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky personal tax credits when married couples file separately"
  },
  "ky_military_personal_tax_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/personal/ky_military_personal_tax_credits.py",
    "parameters": {
      "p": "gov.states.ky.tax.income.credits.personal.amount",
      "military": "gov.states.ky.tax.income.credits.personal.amount.military"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "military_service_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky personal tax credits military service amount"
  },
  "ky_blind_personal_tax_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/personal/ky_blind_personal_tax_credits.py",
    "parameters": {
      "p": "gov.states.ky.tax.income.credits.personal.amount",
      "blind": "gov.states.ky.tax.income.credits.personal.amount.blind"
    },
    "variables": [
      "is_blind",
      "is_tax_unit_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky personal tax credits blind amount",
    "description": "https://apps.legislature.ky.gov/law/statutes/statute.aspx?id=53500#page=3"
  },
  "ky_tuition_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/tuition_tax/ky_tuition_tax_credit.py",
    "parameters": {
      "rate": "gov.states.ky.tax.income.credits.tuition_tax.rate"
    },
    "variables": [
      "lifetime_learning_credit",
      "american_opportunity_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ky_tuition_tax_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky tuition tax credit"
  },
  "ky_tuition_tax_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/tuition_tax/ky_tuition_tax_credit_eligible.py",
    "parameters": {},
    "variables": [
      "ky_filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Kentucky tuition tax credit"
  },
  "ky_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/credits/dependent_care_service/ky_cdcc.py",
    "parameters": {
      "rate": "gov.states.ky.tax.income.credits.dependent_care_service.match"
    },
    "variables": [
      "cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky household and dependent care service credit"
  },
  "ky_pension_income_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/exclusions/pension_income/ky_pension_income_exclusion.py",
    "parameters": {
      "p": "gov.states.ky.tax.income.exclusions.pension_income",
      "threshold": "gov.states.ky.tax.income.exclusions.pension_income.threshold",
      "other_retirement_income_sources": "gov.states.ky.tax.income.exclusions.pension_income.other_retirement_income_sources"
    },
    "variables": [
      "ky_service_credits_percentage_pre_1998",
      "taxable_pension_income",
      "ky_pension_income_exclusion_exemption_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "KY Pension Income Exclusion"
  },
  "ky_service_credit_months_pre_1998": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/exclusions/pension_income/ky_service_credit_months_pre_1998.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky service credit months before 1998"
  },
  "ky_service_credits_percentage_pre_1998": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/exclusions/pension_income/ky_service_credits_percentage_pre_1998.py",
    "parameters": {},
    "variables": [
      "ky_service_credit_months_pre_1998",
      "ky_service_credit_months_post_1997"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Share of service credit months worked before 1998"
  },
  "ky_service_credit_months_post_1997": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/exclusions/pension_income/ky_service_credit_months_post_1997.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Kentucky service credit months after 1997"
  },
  "ky_pension_income_exclusion_exemption_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/exclusions/pension_income/ky_pension_income_exclusion_exemption_eligible.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "retired_from_federal_government",
      "retired_from_ky_government",
      "railroad_benefits"
    ],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "KY Pension Income Exclusion Exemption Eligible"
  },
  "retired_from_ky_government": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ky/tax/income/exclusions/pension_income/retired_from_ky_government.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.KY",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Retired from state or local government in Kentucky"
  },
  "ak_permanent_fund_dividend": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ak/dor/ak_permanent_fund_dividend.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alaska Permanent Fund Dividend",
    "adds_parameter_values": {
      "gov.states.ak.dor.permanent_fund_dividend": "$1,404"
    }
  },
  "ak_energy_relief": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ak/dor/ak_energy_relief.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.AK",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alaska One Time Energy Relief",
    "adds_parameter_values": {
      "gov.states.ak.dor.energy_relief": "$298"
    }
  },
  "ma_liheap_benefit_level": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/ma_liheap_benefit_level.py",
    "parameters": {
      "p": "gov.states.ma.doer.liheap.benefit_level",
      "calc": "gov.states.ma.doer.liheap.benefit_level.calc"
    },
    "variables": [
      "ma_liheap_income",
      "ma_liheap_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Benefit Level for Massachusetts LIHEAP payment",
    "bracket_parameters": {
      "p": "gov.states.ma.doer.liheap.benefit_level"
    },
    "parameter_details": {
      "p": {
        "path": "gov.states.ma.doer.liheap.benefit_level",
        "type": "bracket",
        "brackets": [
          {
            "threshold": 0,
            "amount": 1
          },
          {
            "threshold": 1,
            "amount": 2
          },
          {
            "threshold": 1.25,
            "amount": 3
          },
          {
            "threshold": 1.5,
            "amount": 4
          },
          {
            "threshold": 1.75,
            "amount": 5
          },
          {
            "threshold": 2,
            "amount": 6
          }
        ],
        "description": "Massachusetts calculates benefit level by comparing household's income and federal poverty guideline ratio with these thresholds under the Low Income Home Energy Assistance Program."
      }
    }
  },
  "ma_liheap_fpg": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/ma_liheap_fpg.py",
    "parameters": {
      "p_fpg": "gov.hhs.fpg",
      "first_person": "gov.hhs.fpg.first_person",
      "additional_person": "gov.hhs.fpg.additional_person"
    },
    "variables": [
      "state_group_str",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts LIHEAP federal poverty guideline"
  },
  "ma_liheap_heating_type": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/ma_liheap_heating_type.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "Enum",
    "possible_values": "MassachusettsLIHEAPHeatingType",
    "enum_options": [
      {
        "key": "HEATING_OIL_AND_PROPANE",
        "value": "Heating oil and Propane"
      },
      {
        "key": "NATURAL_GAS",
        "value": "Natural Gas"
      },
      {
        "key": "KEROSENE",
        "value": "Kerosene"
      },
      {
        "key": "ELECTRICITY",
        "value": "Electricity"
      },
      {
        "key": "OTHER",
        "value": "Other"
      },
      {
        "key": "NONE",
        "value": "None"
      }
    ],
    "label": "Massachusetts LIHEAP household's heating type"
  },
  "ma_liheap_utility_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/ma_liheap_utility_category.py",
    "parameters": {},
    "variables": [
      "heat_expense_included_in_rent",
      "ma_liheap_heating_type"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "Enum",
    "possible_values": "MassachusettsLIHEAPUtilityCategory",
    "enum_options": [
      {
        "key": "UTILITY_AND_HEAT_IN_RENT",
        "value": "Utility and Heat in Rent"
      },
      {
        "key": "DELIVERABLE_FUEL",
        "value": "Deliverable Fuel"
      },
      {
        "key": "NONE",
        "value": "None"
      }
    ],
    "label": "Massachusetts LIHEAP household's utility category"
  },
  "ma_liheap_state_median_income_threshold": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/ma_liheap_state_median_income_threshold.py",
    "parameters": {
      "p": "gov.hhs.liheap",
      "smi_limit": "gov.hhs.liheap.smi_limit"
    },
    "variables": [
      "hhs_smi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts LIHEAP state median income threshold"
  },
  "ma_liheap_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/ma_liheap_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "irs_gross_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts LIHEAP income"
  },
  "ma_liheap": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/payment/ma_liheap.py",
    "parameters": {},
    "variables": [
      "ma_liheap_hecs_payment",
      "gas_expense",
      "electricity_expense",
      "ma_liheap_standard_payment",
      "heating_cooling_expense"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ma_liheap_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts LIHEAP payment"
  },
  "ma_liheap_standard_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/payment/ma_liheap_standard_payment.py",
    "parameters": {
      "p": "gov.states.ma.doer.liheap.standard.amount",
      "subsidized": "gov.states.ma.doer.liheap.standard.amount.subsidized",
      "non_subsidized": "gov.states.ma.doer.liheap.standard.amount.non_subsidized"
    },
    "variables": [
      "ma_liheap_utility_category",
      "receives_housing_assistance",
      "ma_liheap_benefit_level"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ma_liheap_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts LIHEAP standard payment"
  },
  "ma_liheap_hecs_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/payment/ma_liheap_hecs_payment.py",
    "parameters": {
      "p": "gov.states.ma.doer.liheap.hecs.amount",
      "subsidized": "gov.states.ma.doer.liheap.hecs.amount.subsidized",
      "non_subsidized": "gov.states.ma.doer.liheap.hecs.amount.non_subsidized"
    },
    "variables": [
      "receives_housing_assistance",
      "ma_liheap_benefit_level"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ma_liheap_hecs_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts LIHEAP High Energy Cost Supplement (HECS) payment"
  },
  "ma_liheap_eligible_subsidized_housing": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/eligibility/ma_liheap_eligible_subsidized_housing.py",
    "parameters": {
      "p": "gov.states.ma.doer.liheap.eligibility",
      "rent_threshold_subsidized_housing": "gov.states.ma.doer.liheap.eligibility.rent_threshold_subsidized_housing"
    },
    "variables": [
      "ma_liheap_income",
      "rent",
      "receives_housing_assistance",
      "heat_expense_included_in_rent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts LIHEAP eligible subsidized housing"
  },
  "ma_liheap_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/eligibility/ma_liheap_eligible.py",
    "parameters": {},
    "variables": [
      "ma_liheap_eligible_subsidized_housing",
      "receives_housing_assistance"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ma_liheap_income_eligible",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Massachusetts LIHEAP"
  },
  "ma_liheap_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/eligibility/ma_liheap_income_eligible.py",
    "parameters": {},
    "variables": [
      "ma_liheap_income",
      "ma_liheap_state_median_income_threshold"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Massachusetts LIHEAP due to income"
  },
  "ma_liheap_hecs_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/doer/liheap/eligibility/ma_liheap_hecs_eligible.py",
    "parameters": {
      "p": "gov.states.ma.doer.liheap.hecs.eligibility",
      "prior_year_cost_threshold": "gov.states.ma.doer.liheap.hecs.eligibility.prior_year_cost_threshold"
    },
    "variables": [
      "heating_expense_last_year",
      "ma_liheap_heating_type"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ma_liheap_eligible",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Massachusetts LIHEAP High Energy Cost Supplement (HECS)"
  },
  "ma_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/ma_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_eitc",
      "ma_child_and_family_credit_or_dependent_care_credit",
      "ma_senior_circuit_breaker",
      "ma_covid_19_essential_employee_premium_pay_program"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA refundable credits",
    "adds_from_parameter": "gov.states.ma.tax.income.credits.refundable"
  },
  "ma_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/ma_income_tax_before_credits.py",
    "parameters": {
      "rates": "gov.states.ma.tax.income.rates",
      "calc": "gov.states.ma.tax.income.rates.additional.calc",
      "part_c": "gov.states.ma.tax.income.rates.part_c",
      "additional": "gov.states.ma.tax.income.rates.additional",
      "part_b": "gov.states.ma.tax.income.rates.part_b",
      "part_a": "gov.states.ma.tax.income.rates.part_a",
      "dividends": "gov.states.ma.tax.income.rates.part_a.dividends",
      "capital_gains": "gov.states.ma.tax.income.rates.part_a.capital_gains"
    },
    "variables": [
      "ma_part_a_taxable_capital_gains_income",
      "ma_part_c_taxable_income",
      "is_ma_income_tax_exempt",
      "ma_part_a_taxable_dividend_income",
      "ma_part_b_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA income tax before credits"
  },
  "is_ma_income_tax_exempt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/is_ma_income_tax_exempt.py",
    "parameters": {},
    "variables": [
      "ma_agi",
      "ma_income_tax_exemption_threshold"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "MA income tax exempt"
  },
  "ma_income_tax_exemption_threshold": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/ma_income_tax_exemption_threshold.py",
    "parameters": {
      "tax": "gov.states.ma.tax.income",
      "limit": "gov.states.ma.tax.income.exempt_status.limit",
      "exempt_status": "gov.states.ma.tax.income.exempt_status",
      "exemptions": "gov.states.ma.tax.income.exemptions",
      "personal": "gov.states.ma.tax.income.exemptions.personal",
      "dependent": "gov.states.ma.tax.income.exemptions.dependent"
    },
    "variables": [
      "filing_status",
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA income tax exemption threshold",
    "description": "MA AGI threshold below which an individual is exempt from State income tax."
  },
  "ma_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/ma_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ma_non_refundable_credits",
      "ma_income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA income tax before refundable credits"
  },
  "ma_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/ma_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_limited_income_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA non-refundable credits",
    "adds_from_parameter": "gov.states.ma.tax.income.credits.non_refundable"
  },
  "ma_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/ma_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ma.tax.income",
      "personal": "gov.states.ma.tax.income.exemptions.personal",
      "part_b": "gov.states.ma.tax.income.rates.part_b",
      "exemptions": "gov.states.ma.tax.income.exemptions",
      "rates": "gov.states.ma.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts withheld income tax"
  },
  "ma_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/ma_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "ma_refundable_credits"
    ],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA income tax",
    "description": "Massachusetts State income tax."
  },
  "ma_part_a_taxable_capital_gains_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/taxable_income/ma_part_a_taxable_capital_gains_income.py",
    "parameters": {},
    "variables": [
      "ma_part_a_agi",
      "ma_part_a_div_excess_exemption",
      "dividend_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part A taxable income from short-term capital gains"
  },
  "ma_part_a_cg_excess_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/taxable_income/ma_part_a_cg_excess_exemption.py",
    "parameters": {},
    "variables": [
      "ma_part_a_agi",
      "ma_part_a_div_excess_exemption",
      "dividend_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part A (short-term) capital gains excess exemption"
  },
  "ma_part_b_taxable_income_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/taxable_income/ma_part_b_taxable_income_exemption.py",
    "parameters": {
      "tax": "gov.states.ma.tax.income",
      "personal": "gov.states.ma.tax.income.exemptions.personal",
      "blind": "gov.states.ma.tax.income.exemptions.blind",
      "dependent": "gov.states.ma.tax.income.exemptions.dependent",
      "aged": "gov.states.ma.tax.income.exemptions.aged",
      "amount": "gov.states.ma.tax.income.exemptions.aged.amount",
      "age": "gov.states.ma.tax.income.exemptions.aged.age",
      "exemptions": "gov.states.ma.tax.income.exemptions"
    },
    "variables": [
      "is_blind",
      "filing_status",
      "age",
      "is_tax_unit_dependent",
      "tax_unit_dependents",
      "medical_expense_deduction",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part B taxable income exemption"
  },
  "ma_part_a_taxable_dividend_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/taxable_income/ma_part_a_taxable_dividend_income.py",
    "parameters": {},
    "variables": [
      "ma_part_b_excess_exemption",
      "dividend_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part A taxable income from dividends"
  },
  "ma_part_a_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/taxable_income/ma_part_a_taxable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_part_a_taxable_dividend_income",
      "ma_part_a_taxable_capital_gains_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part A taxable income"
  },
  "ma_part_b_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/taxable_income/ma_part_b_taxable_income.py",
    "parameters": {},
    "variables": [
      "ma_part_b_taxable_income_exemption",
      "ma_part_b_taxable_income_before_exemption"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part B taxable income"
  },
  "ma_part_c_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/taxable_income/ma_part_c_taxable_income.py",
    "parameters": {},
    "variables": [
      "ma_part_a_cg_excess_exemption",
      "ma_part_c_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part C taxable income"
  },
  "ma_part_b_excess_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/taxable_income/ma_part_b_excess_exemption.py",
    "parameters": {},
    "variables": [
      "ma_part_b_taxable_income_exemption",
      "ma_part_b_taxable_income_before_exemption"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part B excess exemption"
  },
  "ma_part_b_taxable_income_before_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/taxable_income/ma_part_b_taxable_income_before_exemption.py",
    "parameters": {},
    "variables": [
      "ma_part_b_agi",
      "ma_part_b_taxable_income_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part B taxable income before exemption"
  },
  "ma_part_a_div_excess_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/taxable_income/ma_part_a_div_excess_exemption.py",
    "parameters": {},
    "variables": [
      "ma_part_b_excess_exemption",
      "dividend_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part A dividends excess exemption"
  },
  "ma_part_b_taxable_income_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/taxable_income/ma_part_b_taxable_income_deductions.py",
    "parameters": {
      "tax": "gov.states.ma.tax.income",
      "in_effect": "gov.states.ma.tax.income.exemptions.interest.in_effect",
      "amount": "gov.states.ma.tax.income.exemptions.interest.amount",
      "public_retirement_contributions": "gov.states.ma.tax.income.deductions.public_retirement_contributions",
      "rent": "gov.states.ma.tax.income.deductions.rent",
      "interest": "gov.states.ma.tax.income.exemptions.interest",
      "share": "gov.states.ma.tax.income.deductions.rent.share",
      "cap": "gov.states.ma.tax.income.deductions.rent.cap",
      "deductions": "gov.states.ma.tax.income.deductions",
      "exemptions": "gov.states.ma.tax.income.exemptions"
    },
    "variables": [
      "employee_medicare_tax",
      "rent",
      "filing_status",
      "employee_social_security_tax",
      "taxable_interest_income",
      "self_employment_medicare_tax",
      "charitable_deduction",
      "is_tax_unit_head",
      "self_employment_social_security_tax",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part B taxable income deductions"
  },
  "ma_part_a_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/gross_income/ma_part_a_gross_income.py",
    "parameters": {},
    "variables": [
      "short_term_capital_gains",
      "dividend_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part A gross income"
  },
  "ma_part_b_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/gross_income/ma_part_b_gross_income.py",
    "parameters": {},
    "variables": [
      "ma_part_c_gross_income",
      "ma_gross_income",
      "ma_part_a_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part B gross income"
  },
  "ma_part_c_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/gross_income/ma_part_c_gross_income.py",
    "parameters": {},
    "variables": [
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part C gross income"
  },
  "ma_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/gross_income/ma_gross_income.py",
    "parameters": {},
    "variables": [
      "irs_gross_income",
      "foreign_earned_income_exclusion",
      "taxable_social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA gross income"
  },
  "ma_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/credits/ma_eitc.py",
    "parameters": {
      "rate": "gov.states.ma.tax.income.credits.eitc.match"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA EITC"
  },
  "ma_child_and_family_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/credits/ma_child_and_family_credit.py",
    "parameters": {
      "p": "gov.states.ma.tax.income.credits.child_and_family",
      "child_age_limit": "gov.states.ma.tax.income.credits.child_and_family.child_age_limit",
      "elderly_age_limit": "gov.states.ma.tax.income.credits.child_and_family.elderly_age_limit",
      "dependent_cap": "gov.states.ma.tax.income.credits.child_and_family.dependent_cap",
      "amount": "gov.states.ma.tax.income.credits.child_and_family.amount"
    },
    "variables": [
      "is_disabled",
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts child and family tax credit"
  },
  "ma_dependent_care_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/credits/ma_dependent_care_credit.py",
    "parameters": {
      "p": "gov.states.ma.tax.income.credits.dependent_care",
      "dependent_cap": "gov.states.ma.tax.income.credits.dependent_care.dependent_cap",
      "amount": "gov.states.ma.tax.income.credits.dependent_care.amount"
    },
    "variables": [
      "min_head_spouse_earned",
      "filing_status",
      "count_cdcc_eligible",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA dependent care credit"
  },
  "ma_limited_income_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/credits/ma_limited_income_tax_credit.py",
    "parameters": {
      "p": "gov.states.ma.tax.income.credits",
      "income_limit": "gov.states.ma.tax.income.credits.limited_income_credit.income_limit",
      "percent": "gov.states.ma.tax.income.credits.limited_income_credit.percent",
      "limited_income_credit": "gov.states.ma.tax.income.credits.limited_income_credit"
    },
    "variables": [
      "ma_agi",
      "ma_income_tax_exemption_threshold",
      "ma_income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Limited Income Credit"
  },
  "ma_child_and_family_credit_or_dependent_care_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/credits/ma_child_and_family_credit_or_dependent_care_credit.py",
    "parameters": {
      "p": "gov.states.ma.tax.income.credits.dependent_care",
      "in_effect": "gov.states.ma.tax.income.credits.dependent_care.in_effect"
    },
    "variables": [
      "ma_child_and_family_credit",
      "ma_dependent_care_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA dependent or dependent care credit",
    "description": "The CFTC replaces the Dependent Care Tax Credit and the Household Dependent Tax Credit with Child and Family Tax Credit for tax years beginning on or after January 1, 2023."
  },
  "ma_part_c_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/adjusted_gross_income/ma_part_c_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_part_c_gross_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part C AGI"
  },
  "ma_part_a_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/adjusted_gross_income/ma_part_a_agi.py",
    "parameters": {
      "tax": "gov.states.ma.tax.income",
      "deductible_against_interest_dividends": "gov.states.ma.tax.income.capital_gains.deductible_against_interest_dividends",
      "long_term_collectibles_deduction": "gov.states.ma.tax.income.capital_gains.long_term_collectibles_deduction",
      "capital_gains": "gov.states.ma.tax.income.capital_gains"
    },
    "variables": [
      "taxable_interest_income",
      "dividend_income",
      "long_term_capital_gains_on_collectibles",
      "long_term_capital_gains",
      "short_term_capital_gains",
      "ma_part_a_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part A AGI"
  },
  "ma_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/adjusted_gross_income/ma_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_part_a_agi",
      "ma_part_b_agi",
      "ma_part_c_agi"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA adjusted gross income"
  },
  "ma_part_b_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/adjusted_gross_income/ma_part_b_agi.py",
    "parameters": {
      "deductions": "gov.irs.ald.deductions",
      "disallowed": "gov.states.ma.tax.income.ald.disallowed",
      "ald": "gov.states.ma.tax.income.ald",
      "irs": "gov.irs",
      "states": "gov.states",
      "income": "gov.states.ma.tax.income",
      "tax": "gov.states.ma.tax",
      "ma": "gov.states.ma",
      "parameters": "gov"
    },
    "variables": [
      "ma_part_b_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Part B AGI"
  },
  "ma_covid_19_essential_employee_premium_pay_program": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/credits/ma_covid_19_essential_employee_premium_pay_program/ma_covid_19_essential_employee_premium_pay_program.py",
    "parameters": {
      "p": "gov.states.ma.tax.income.credits.covid_19_essential_employee_premium_pay_program",
      "min_earnings": "gov.states.ma.tax.income.credits.covid_19_essential_employee_premium_pay_program.min_earnings",
      "max_poverty_ratio": "gov.states.ma.tax.income.credits.covid_19_essential_employee_premium_pay_program.max_poverty_ratio",
      "amount": "gov.states.ma.tax.income.credits.covid_19_essential_employee_premium_pay_program.amount",
      "disqualifying_programs": "gov.states.ma.tax.income.credits.covid_19_essential_employee_premium_pay_program.disqualifying_programs"
    },
    "variables": [
      "earned_income",
      "adjusted_gross_income",
      "tax_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA COVID 19 Essential Employee Premium Pay Program"
  },
  "claimed_ma_covid_19_essential_employee_premium_pay_program_2020": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/credits/ma_covid_19_essential_employee_premium_pay_program/claimed_ma_covid_19_essential_employee_premium_pay_program_2020.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Claimed MA COVID 19 Essential Employee Premium Pay Program for 2020"
  },
  "ma_scb_total_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/credits/senior_circuit_breaker/ma_scb_total_income.py",
    "parameters": {
      "scb": "gov.states.ma.tax.income.credits.senior_circuit_breaker",
      "tax": "gov.states.ma.tax.income",
      "disallowed_deductions": "gov.states.ma.tax.income.credits.senior_circuit_breaker.income.disallowed_deductions",
      "blind": "gov.states.ma.tax.income.exemptions.blind",
      "dependent": "gov.states.ma.tax.income.exemptions.dependent",
      "aged": "gov.states.ma.tax.income.exemptions.aged",
      "amount": "gov.states.ma.tax.income.exemptions.aged.amount",
      "age": "gov.states.ma.tax.income.exemptions.aged.age",
      "income": "gov.states.ma.tax.income.credits.senior_circuit_breaker.income",
      "exemptions": "gov.states.ma.tax.income.exemptions"
    },
    "variables": [
      "is_blind",
      "age",
      "is_tax_unit_dependent",
      "tax_unit_dependents",
      "ma_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Total income for the MA Senior Circuit Breaker"
  },
  "ma_senior_circuit_breaker": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/tax/income/credits/senior_circuit_breaker/ma_senior_circuit_breaker.py",
    "parameters": {
      "scb": "gov.states.ma.tax.income.credits.senior_circuit_breaker",
      "min_age": "gov.states.ma.tax.income.credits.senior_circuit_breaker.eligibility.min_age",
      "max_income": "gov.states.ma.tax.income.credits.senior_circuit_breaker.eligibility.max_income",
      "max_property_value": "gov.states.ma.tax.income.credits.senior_circuit_breaker.eligibility.max_property_value",
      "rent_tax_share": "gov.states.ma.tax.income.credits.senior_circuit_breaker.amount.rent_tax_share",
      "min_real_estate_tax": "gov.states.ma.tax.income.credits.senior_circuit_breaker.amount.min_real_estate_tax",
      "max": "gov.states.ma.tax.income.credits.senior_circuit_breaker.amount.max",
      "eligibility": "gov.states.ma.tax.income.credits.senior_circuit_breaker.eligibility",
      "amount": "gov.states.ma.tax.income.credits.senior_circuit_breaker.amount"
    },
    "variables": [
      "rent",
      "filing_status",
      "age",
      "is_tax_unit_dependent",
      "real_estate_taxes",
      "ma_scb_total_income",
      "assessed_property_value"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "MA Senior Circuit Breaker Credit"
  },
  "ma_mbta_income_eligible_reduced_fare_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dot/mbta/income_eligible_reduced_fares/ma_mbta_income_eligible_reduced_fare_eligible.py",
    "parameters": {
      "p": "gov.states.ma.dot.mbta.income_eligible_reduced_fares.age_threshold",
      "calc": "gov.states.ma.dot.mbta.income_eligible_reduced_fares.age_threshold.calc"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ma_mbta_enrolled_in_applicable_programs",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Massachusetts Bay Transportation Authority income-eligible reduced fare program",
    "bracket_parameters": {
      "p": "gov.states.ma.dot.mbta.income_eligible_reduced_fares.age_threshold"
    },
    "parameter_details": {
      "p": {
        "path": "gov.states.ma.dot.mbta.income_eligible_reduced_fares.age_threshold",
        "type": "bracket",
        "brackets": [
          {
            "threshold": 0,
            "amount": false
          },
          {
            "threshold": 18,
            "amount": true
          },
          {
            "threshold": 65,
            "amount": false
          }
        ],
        "description": "Massachusetts Bay Transportation Authority (MBTA) provides the income-eligible reduced fare program to applicants who are within these age brackets."
      }
    }
  },
  "ma_mbta_enrolled_in_applicable_programs": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dot/mbta/income_eligible_reduced_fares/ma_mbta_enrolled_in_applicable_programs.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_eaedc",
      "ma_tafdc",
      "snap",
      "medicaid"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Enrolled in applicable programs to receive the Massachusetts Bay Transportation Authority income-eligible reduced fare program",
    "adds_from_parameter": "gov.states.ma.dot.mbta.income_eligible_reduced_fares.applicable_programs"
  },
  "ma_mbta_tap_charlie_card_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dot/mbta/tap_charlie_card/ma_mbta_tap_charlie_card_eligible.py",
    "parameters": {},
    "variables": [
      "is_disabled",
      "is_medicare_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Massachusetts Bay Transportation Authority Transportation Access Pass (TAP) Charlie Card program"
  },
  "ma_mbta_senior_charlie_card_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dot/mbta/senior_charlie_card/ma_mbta_senior_charlie_card_eligible.py",
    "parameters": {
      "p": "gov.states.ma.dot.mbta.senior_charlie_card",
      "age_threshold": "gov.states.ma.dot.mbta.senior_charlie_card.age_threshold"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Massachusetts Bay Transportation Authority Senior Charlie Card program"
  },
  "ma_tcap_gross_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/ma_tcap_gross_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Transitional Cash Assistance Program (TCAP) gross earned income",
    "adds_from_parameter": "gov.states.ma.dta.tcap.gross_income.earned"
  },
  "ma_tcap_gross_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/ma_tcap_gross_unearned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dividend_income",
      "interest_income",
      "social_security",
      "unemployment_compensation",
      "veterans_benefits",
      "pension_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Transitional Cash Assistance Program (TCAP) gross unearned income",
    "adds_from_parameter": "gov.states.ma.dta.tcap.gross_income.unearned"
  },
  "ma_tafdc_exceeds_eaedc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/ma_tafdc_exceeds_eaedc.py",
    "parameters": {},
    "variables": [
      "ma_tafdc_if_claimed",
      "ma_eaedc_if_claimed"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the TAFDC value exceeds the EAEDC value"
  },
  "ma_state_living_arrangement": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/ssp/ma_state_living_arrangement.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "Enum",
    "possible_values": "MAStateLivingArrangement",
    "enum_options": [
      {
        "key": "FULL_COST",
        "value": "Full cost of living"
      },
      {
        "key": "SHARED_EXPENSES",
        "value": "Shared expenses"
      },
      {
        "key": "HOUSEHOLD_OF_ANOTHER",
        "value": "Household of another"
      },
      {
        "key": "REST_HOME",
        "value": "Rest home"
      },
      {
        "key": "MEDICAID_FACILITY",
        "value": "Medicaid facility"
      },
      {
        "key": "ASSISTED_LIVING",
        "value": "Assisted living"
      }
    ],
    "label": "Massachusetts State Living Arrangement"
  },
  "ma_maximum_state_supplement": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/ssp/ma_maximum_state_supplement.py",
    "parameters": {
      "p": "gov.states.ma.dta.ssp.amount"
    },
    "variables": [
      "is_blind",
      "ssi_category",
      "is_ssi_disabled",
      "is_ssi_aged",
      "ma_state_living_arrangement",
      "ssi_claim_is_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_ssi_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts maximum State Supplement payment amount"
  },
  "ma_state_supplement": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/ssp/ma_state_supplement.py",
    "parameters": {},
    "variables": [
      "ma_maximum_state_supplement",
      "is_ssi_aged_blind_disabled",
      "uncapped_ssi",
      "ssi_claim_is_joint",
      "meets_ssi_resource_test"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts State Supplement payment amount"
  },
  "ma_eaedc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/ma_eaedc.py",
    "parameters": {},
    "variables": [
      "ma_tafdc_exceeds_eaedc",
      "ma_eaedc_if_claimed"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ma_eaedc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts EAEDC"
  },
  "ma_eaedc_if_claimed": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/ma_eaedc_if_claimed.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_eaedc_standard_assistance"
    ],
    "subtracts": [
      "ma_eaedc_net_income"
    ],
    "defined_for": "ma_eaedc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts EAEDC benefit amount if claimed"
  },
  "ma_eaedc_countable_assets": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/ma_eaedc_countable_assets.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "spm_unit_cash_assets",
      "retirement_distributions"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts EAEDC countable assets",
    "adds_from_parameter": "gov.states.ma.dta.tcap.eaedc.assets.sources"
  },
  "ma_tafdc_if_claimed": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/ma_tafdc_if_claimed.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_tafdc_potential_main_benefit",
      "ma_tafdc_clothing_allowance",
      "ma_tafdc_infant_benefit"
    ],
    "subtracts": [],
    "defined_for": "ma_tafdc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) benefit amount if claimed"
  },
  "ma_tafdc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/ma_tafdc.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_tafdc_if_claimed"
    ],
    "subtracts": [],
    "defined_for": "ma_tafdc_exceeds_eaedc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC)"
  },
  "is_tafdc_related_to_head_or_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/is_tafdc_related_to_head_or_spouse.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is related to the head or spouse under the TAFDC regulations"
  },
  "ma_tafdc_eligible_infant": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/ma_tafdc_eligible_infant.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.tafdc.eligibility.age_limit",
      "infant": "gov.states.ma.dta.tcap.tafdc.eligibility.age_limit.infant"
    },
    "variables": [
      "monthly_age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) eligible infant"
  },
  "ma_tafdc_potential_main_benefit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/payment/ma_tafdc_potential_main_benefit.py",
    "parameters": {},
    "variables": [
      "ma_tafdc_applicable_income_grant_amount",
      "ma_tafdc_payment_standard"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ma_tafdc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) potential main benefit"
  },
  "ma_tafdc_clothing_allowance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/payment/ma_tafdc_clothing_allowance.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.tafdc",
      "clothing_allowance": "gov.states.ma.dta.tcap.tafdc.clothing_allowance"
    },
    "variables": [
      "ma_tafdc_eligible_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) clothing allowance"
  },
  "ma_tafdc_infant_benefit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/payment/ma_tafdc_infant_benefit.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.tafdc",
      "infant_amount": "gov.states.ma.dta.tcap.tafdc.infant_amount"
    },
    "variables": [
      "ma_tafdc_eligible_infant"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) infant benefit"
  },
  "ma_tafdc_payment_standard": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/payment/ma_tafdc_payment_standard.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.tafdc.eligibility.income_limit",
      "max_unit_size": "gov.states.ma.dta.tcap.tafdc.eligibility.income_limit.max_unit_size",
      "additional_person": "gov.states.ma.dta.tcap.tafdc.eligibility.income_limit.additional_person",
      "base": "gov.states.ma.dta.tcap.tafdc.eligibility.income_limit.base",
      "calc": "gov.states.ma.dta.tcap.tafdc.eligibility.income_limit.base.private_housing.calc",
      "public_housing": "gov.states.ma.dta.tcap.tafdc.eligibility.income_limit.base.public_housing",
      "private_housing": "gov.states.ma.dta.tcap.tafdc.eligibility.income_limit.base.private_housing"
    },
    "variables": [
      "is_in_public_housing",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) payment standard"
  },
  "ma_tafdc_applicable_income_for_financial_eligibility": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/income/ma_tafdc_applicable_income_for_financial_eligibility.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_tafdc_earned_income_after_deductions",
      "ma_tafdc_countable_unearned_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Applicable income for the Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) financial eligibility check"
  },
  "ma_tafdc_applicable_income_grant_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/income/ma_tafdc_applicable_income_grant_amount.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_tafdc_countable_earned_income",
      "ma_tafdc_countable_unearned_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) countable income"
  },
  "ma_tafdc_financial_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/eligibility/ma_tafdc_financial_eligible.py",
    "parameters": {},
    "variables": [
      "ma_tafdc_applicable_income_for_financial_eligibility",
      "ma_tafdc_payment_standard"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) due to income"
  },
  "ma_tafdc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/eligibility/ma_tafdc_eligible.py",
    "parameters": {},
    "variables": [
      "ma_tafdc_non_financial_eligible",
      "ma_tafdc_financial_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC)"
  },
  "ma_tafdc_pregnancy_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/eligibility/non_financial/ma_tafdc_pregnancy_eligible.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.tafdc.eligibility",
      "pregnancy_month": "gov.states.ma.dta.tcap.tafdc.eligibility.pregnancy_month"
    },
    "variables": [
      "age",
      "current_pregnancy_month",
      "ma_tafdc_age_limit",
      "is_in_secondary_school",
      "is_pregnant"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) due to pregnancy"
  },
  "ma_tafdc_age_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/eligibility/non_financial/ma_tafdc_age_limit.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.tafdc.eligibility.age_limit",
      "teen_parent": "gov.states.ma.dta.tcap.tafdc.eligibility.age_limit.teen_parent",
      "student_dependent": "gov.states.ma.dta.tcap.tafdc.eligibility.age_limit.student_dependent",
      "dependent": "gov.states.ma.dta.tcap.tafdc.eligibility.age_limit.dependent"
    },
    "variables": [
      "is_pregnant",
      "is_in_secondary_school"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Applicable age limit for the Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC)"
  },
  "ma_tafdc_immigration_status_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/eligibility/non_financial/ma_tafdc_immigration_status_eligible.py",
    "parameters": {},
    "variables": [
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) due to immigration status"
  },
  "ma_tafdc_dependent_criteria_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/eligibility/non_financial/ma_tafdc_dependent_criteria_eligible.py",
    "parameters": {},
    "variables": [
      "ma_tafdc_pregnancy_eligible",
      "ma_tafdc_eligible_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible based on the dependent criteria for the Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC)"
  },
  "ma_tafdc_eligible_dependent": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/eligibility/non_financial/ma_tafdc_eligible_dependent.py",
    "parameters": {},
    "variables": [
      "ma_tafdc_age_limit",
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible dependent for the Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC)"
  },
  "ma_tafdc_non_financial_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/eligibility/non_financial/ma_tafdc_non_financial_eligible.py",
    "parameters": {},
    "variables": [
      "ma_tafdc_immigration_status_eligible",
      "ma_tafdc_dependent_criteria_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC)"
  },
  "ma_tafdc_earned_income_after_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/income/earned/ma_tafdc_earned_income_after_deductions.py",
    "parameters": {},
    "variables": [
      "ma_tafdc_work_related_expense_deduction",
      "ma_tcap_gross_earned_income",
      "ma_tafdc_dependent_care_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) earned income after deductions"
  },
  "ma_tafdc_partially_disregarded_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/income/earned/ma_tafdc_partially_disregarded_earned_income.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.tafdc.earned_income_disregard",
      "percentage": "gov.states.ma.dta.tcap.tafdc.earned_income_disregard.percentage"
    },
    "variables": [
      "filing_status",
      "ma_tafdc_work_related_expense_deduction",
      "ma_tcap_gross_earned_income",
      "ma_tafdc_dependent_care_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) partially disregarded earned income"
  },
  "ma_tafdc_countable_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/income/earned/ma_tafdc_countable_earned_income.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.tafdc.earned_income_disregard",
      "applicable_months": "gov.states.ma.dta.tcap.tafdc.earned_income_disregard.full_disregard.applicable_months",
      "percentage": "gov.states.ma.dta.tcap.tafdc.earned_income_disregard.full_disregard.percentage",
      "full_disregard": "gov.states.ma.dta.tcap.tafdc.earned_income_disregard.full_disregard"
    },
    "variables": [
      "ma_tafdc_full_earned_income_disregard_eligible",
      "ma_tcap_gross_earned_income",
      "ma_tafdc_partially_disregarded_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) countable earned income"
  },
  "ma_tafdc_full_earned_income_disregard_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/income/earned/ma_tafdc_full_earned_income_disregard_eligible.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.tafdc.earned_income_disregard.full_disregard",
      "fpg_limit": "gov.states.ma.dta.tcap.tafdc.earned_income_disregard.full_disregard.fpg_limit"
    },
    "variables": [
      "ma_tafdc_applicable_income_for_financial_eligibility",
      "spm_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is eligible for the full earned income disregard under the Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC)"
  },
  "ma_tafdc_work_related_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/income/deductions/ma_tafdc_work_related_expense_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) work-related expense deduction",
    "adds_parameter_values": {
      "gov.states.ma.dta.tcap.deductions.work_related_expenses.amount": "$200"
    }
  },
  "ma_tafdc_dependent_care_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/income/deductions/ma_tafdc_dependent_care_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_tafdc_dependent_care_deduction_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) dependent care deduction"
  },
  "ma_tafdc_child_support_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/income/deductions/ma_tafdc_child_support_deduction.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.deductions",
      "child_support_received": "gov.states.ma.dta.tcap.deductions.child_support_received"
    },
    "variables": [
      "alimony_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) child support deduction"
  },
  "ma_tafdc_dependent_care_deduction_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/income/deductions/ma_tafdc_dependent_care_deduction_person.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.deductions.dependent_care_expenses",
      "young_child_age_threshold": "gov.states.ma.dta.tcap.deductions.dependent_care_expenses.young_child_age_threshold",
      "amount": "gov.states.ma.dta.tcap.deductions.dependent_care_expenses.amount",
      "calc": "gov.states.ma.dta.tcap.deductions.dependent_care_expenses.amount.older.calc",
      "younger": "gov.states.ma.dta.tcap.deductions.dependent_care_expenses.amount.younger",
      "older": "gov.states.ma.dta.tcap.deductions.dependent_care_expenses.amount.older"
    },
    "variables": [
      "monthly_age",
      "weekly_hours_worked",
      "ma_tafdc_eligible_dependent",
      "pre_subsidy_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) dependent care deduction for each person"
  },
  "ma_tafdc_countable_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/tafdc/income/unearned/ma_tafdc_countable_unearned_income.py",
    "parameters": {},
    "variables": [
      "ma_tcap_gross_unearned_income",
      "ma_tafdc_child_support_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts Temporary Assistance for Families with Dependent Children (TAFDC) countable unearned income"
  },
  "ma_eaedc_countable_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/income/ma_eaedc_countable_earned_income.py",
    "parameters": {},
    "variables": [
      "ma_eaedc_earned_income_after_disregard_person",
      "ma_eaedc_dependent_care_deduction_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts EAEDC countable earned income"
  },
  "ma_eaedc_standard_assistance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/income/ma_eaedc_standard_assistance.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.eaedc.standard_assistance.amount",
      "base": "gov.states.ma.dta.tcap.eaedc.standard_assistance.amount.base",
      "additional": "gov.states.ma.dta.tcap.eaedc.standard_assistance.amount.additional"
    },
    "variables": [
      "ma_eaedc_living_arrangement",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts EAEDC standard assistance"
  },
  "ma_eaedc_net_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/income/ma_eaedc_net_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_tcap_gross_unearned_income",
      "ma_eaedc_countable_earned_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts EAEDC net income"
  },
  "ma_eaedc_earned_income_after_disregard_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/income/ma_eaedc_earned_income_after_disregard_person.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.eaedc.deductions.income_disregard",
      "rate": "gov.states.ma.dta.tcap.eaedc.deductions.income_disregard.percentage.rate",
      "months": "gov.states.ma.dta.tcap.eaedc.deductions.income_disregard.percentage.months",
      "flat": "gov.states.ma.dta.tcap.eaedc.deductions.income_disregard.flat",
      "percentage": "gov.states.ma.dta.tcap.eaedc.deductions.income_disregard.percentage"
    },
    "variables": [
      "ma_tafdc_work_related_expense_deduction",
      "ma_tcap_gross_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts EAEDC earned income after disregard for each person"
  },
  "ma_eaedc_living_arrangement": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/income/ma_eaedc_living_arrangement.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "Enum",
    "possible_values": "MassachusettsEAEDCLivingArrangement",
    "enum_options": [
      {
        "key": "A",
        "value": "A"
      },
      {
        "key": "B",
        "value": "B"
      },
      {
        "key": "C",
        "value": "C"
      },
      {
        "key": "D",
        "value": "D"
      },
      {
        "key": "E",
        "value": "E"
      },
      {
        "key": "F",
        "value": "F"
      },
      {
        "key": "H",
        "value": "H"
      },
      {
        "key": "NONE",
        "value": "None"
      }
    ],
    "label": "Massachusetts EAEDC living arrangement"
  },
  "ma_eaedc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/eligibility/ma_eaedc_eligible.py",
    "parameters": {},
    "variables": [
      "ma_eaedc_non_financial_eligible",
      "ma_eaedc_financial_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Massachusetts EAEDC"
  },
  "ma_eaedc_dependent_care_deduction_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/dependent_care_deduction/ma_eaedc_dependent_care_deduction_person.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.deductions.dependent_care_expenses",
      "young_child_age_threshold": "gov.states.ma.dta.tcap.deductions.dependent_care_expenses.young_child_age_threshold",
      "amount": "gov.states.ma.dta.tcap.deductions.dependent_care_expenses.amount",
      "calc": "gov.states.ma.dta.tcap.deductions.dependent_care_expenses.amount.older.calc",
      "younger": "gov.states.ma.dta.tcap.deductions.dependent_care_expenses.amount.younger",
      "older": "gov.states.ma.dta.tcap.deductions.dependent_care_expenses.amount.older"
    },
    "variables": [
      "monthly_age",
      "weekly_hours_worked",
      "ma_eaedc_eligible_dependent",
      "pre_subsidy_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts EAEDC dependent care deduction for each person"
  },
  "ma_eaedc_dependent_care_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/dependent_care_deduction/ma_eaedc_dependent_care_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_eaedc_dependent_care_deduction_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Massachusetts EAEDC dependent care deduction"
  },
  "ma_eaedc_eligible_dependent": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/dependent_care_deduction/ma_eaedc_eligible_dependent.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.eaedc.age_threshold",
      "dependent": "gov.states.ma.dta.tcap.eaedc.age_threshold.dependent"
    },
    "variables": [
      "monthly_age",
      "is_tax_unit_dependent",
      "is_tafdc_related_to_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible dependent for the Massachusetts EAEDC dependent care deduction"
  },
  "ma_eaedc_eligible_elderly_present": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/eligibility/non_financial/ma_eaedc_eligible_elderly_present.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.eaedc.age_threshold",
      "elderly": "gov.states.ma.dta.tcap.eaedc.age_threshold.elderly"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "monthly_age",
      "is_ssi_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible elderly present for the Massachusetts EAEDC"
  },
  "ma_eaedc_immigration_status_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/eligibility/non_financial/ma_eaedc_immigration_status_eligible.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Massachusetts EAEDC based on immigration status"
  },
  "ma_eaedc_eligible_caretaker_family": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/eligibility/non_financial/ma_eaedc_eligible_caretaker_family.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.eaedc.age_threshold",
      "caretaker": "gov.states.ma.dta.tcap.eaedc.age_threshold.caretaker"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "monthly_age",
      "ma_eaedc_eligible_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible caretaker family for the Massachusetts EAEDC"
  },
  "ma_eaedc_non_financial_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/eligibility/non_financial/ma_eaedc_non_financial_eligible.py",
    "parameters": {},
    "variables": [
      "ma_eaedc_eligible_disabled_head_or_spouse",
      "ma_eaedc_eligible_disabled_dependent_present",
      "ma_eaedc_eligible_elderly_present",
      "ma_eaedc_immigration_status_eligible",
      "ma_eaedc_eligible_caretaker_family"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Non-financial eligible for Massachusetts EAEDC"
  },
  "ma_eaedc_eligible_disabled_head_or_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/eligibility/non_financial/ma_eaedc_eligible_disabled_head_or_spouse.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "is_disabled",
      "is_ssi_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Disabled head or spouse present for Massachusetts EAEDC"
  },
  "ma_eaedc_eligible_disabled_dependent_present": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/eligibility/non_financial/ma_eaedc_eligible_disabled_dependent_present.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.eaedc.income",
      "disabled_limit": "gov.states.ma.dta.tcap.eaedc.income.disabled_limit"
    },
    "variables": [
      "is_tax_unit_dependent",
      "is_disabled",
      "ma_tcap_gross_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Disabled dependent present for Massachusetts EAEDC"
  },
  "ma_eaedc_financial_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/eligibility/financial/ma_eaedc_financial_eligible.py",
    "parameters": {},
    "variables": [
      "ma_eaedc_income_eligible",
      "ma_eaedc_assets_limit_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Financial eligible for Massachusetts EAEDC"
  },
  "ma_eaedc_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/eligibility/financial/ma_eaedc_income_eligible.py",
    "parameters": {},
    "variables": [
      "ma_eaedc_net_income",
      "ma_eaedc_standard_assistance"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Massachusetts EAEDC based on income"
  },
  "ma_eaedc_assets_limit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ma/dta/tcap/eaedc/eligibility/financial/ma_eaedc_assets_limit_eligible.py",
    "parameters": {
      "p": "gov.states.ma.dta.tcap.eaedc.assets",
      "limit": "gov.states.ma.dta.tcap.eaedc.assets.limit"
    },
    "variables": [
      "ma_eaedc_living_arrangement",
      "ma_eaedc_countable_assets"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible based on the asset limit for the Massachusetts EAEDC"
  },
  "mo_tanf_income_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/dss/tanf/mo_tanf_income_limit.py",
    "parameters": {
      "p": "gov.states.mo.dss.tanf",
      "income_limit": "gov.states.mo.dss.tanf.income_limit"
    },
    "variables": [
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri TANF income limit / maximum benefit"
  },
  "mo_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/mo_withheld_income_tax.py",
    "parameters": {
      "p_irs": "gov.irs.deductions.standard",
      "p": "gov.states.mo.tax.income",
      "amount": "gov.irs.deductions.standard.amount",
      "calc": "gov.states.mo.tax.income.rates.calc",
      "rates": "gov.states.mo.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri withheld income tax"
  },
  "mo_qualified_health_insurance_premiums": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/subtractions/mo_qualified_health_insurance_premiums.py",
    "parameters": {},
    "variables": [
      "taxable_income",
      "health_insurance_premiums",
      "tax_unit_itemizes",
      "medical_expense_deduction",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri qualified healh insurance premiums"
  },
  "mo_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/income_tax/mo_income_tax_before_credits.py",
    "parameters": {
      "rates": "gov.states.mo.tax.income.rates",
      "calc": "gov.states.mo.tax.income.rates.calc"
    },
    "variables": [
      "mo_taxable_income",
      "mo_income_tax_exempt"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri income tax before credits",
    "bracket_parameters": {
      "rates": "gov.states.mo.tax.income.rates"
    },
    "parameter_details": {
      "rates": {
        "path": "gov.states.mo.tax.income.rates",
        "type": "bracket",
        "brackets": [
          {
            "threshold": {
              "2019-01-01": 0
            },
            "amount": null
          },
          {
            "threshold": {
              "2019-01-01": 1053,
              "2020-01-01": 1073,
              "2021-01-01": 1088,
              "2022-01-01": 1121,
              "2023-01-01": 1207,
              "2024-01-01": 1273
            },
            "amount": null
          },
          {
            "threshold": {
              "2019-01-01": 2106,
              "2020-01-01": 2146,
              "2021-01-01": 2176,
              "2022-01-01": 2242,
              "2023-01-01": 2414,
              "2024-01-01": 2546
            },
            "amount": null
          },
          {
            "threshold": {
              "2019-01-01": 3159,
              "2020-01-01": 3219,
              "2021-01-01": 3264,
              "2022-01-01": 3363,
              "2023-01-01": 3621,
              "2024-01-01": 3819
            },
            "amount": null
          },
          {
            "threshold": {
              "2019-01-01": 4212,
              "2020-01-01": 4292,
              "2021-01-01": 4352,
              "2022-01-01": 4484,
              "2023-01-01": 4828,
              "2024-01-01": 5092
            },
            "amount": null
          },
          {
            "threshold": {
              "2019-01-01": 5265,
              "2020-01-01": 5365,
              "2021-01-01": 5440,
              "2022-01-01": 5605,
              "2023-01-01": 6035,
              "2024-01-01": 6365
            },
            "amount": null
          },
          {
            "threshold": {
              "2019-01-01": 6318,
              "2020-01-01": 6438,
              "2021-01-01": 6528,
              "2022-01-01": 6726,
              "2023-01-01": 7242,
              "2024-01-01": 7638
            },
            "amount": null
          },
          {
            "threshold": {
              "2019-01-01": 7371,
              "2020-01-01": 7511,
              "2021-01-01": 7616,
              "2022-01-01": 7847,
              "2023-01-01": 8449,
              "2024-01-01": 8911
            },
            "amount": null
          },
          {
            "threshold": {
              "2019-01-01": 8424,
              "2020-01-01": 8584,
              "2021-01-01": 8704,
              "2022-01-01": 8968,
              "2023-01-01": Infinity
            },
            "amount": null
          }
        ],
        "description": "Missouri taxes the individual residents with the following tax rates."
      }
    }
  },
  "mo_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/income_tax/mo_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "mo_non_refundable_credits",
      "mo_income_tax_before_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri income tax"
  },
  "mo_income_tax_exempt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/income_tax/mo_income_tax_exempt.py",
    "parameters": {
      "p": "gov.states.mo.tax.income",
      "minimum_taxable_income": "gov.states.mo.tax.income.minimum_taxable_income"
    },
    "variables": [
      "mo_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri income tax exempt"
  },
  "mo_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/income_tax/mo_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mo_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "mo_refundable_credits"
    ],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri income tax"
  },
  "mo_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/taxable_income/mo_taxable_income.py",
    "parameters": {},
    "variables": [
      "mo_adjusted_gross_income",
      "mo_federal_income_tax_deduction",
      "standard_deduction",
      "mo_itemized_deductions",
      "mo_pension_and_ss_or_ssd_deduction",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri AGI minus deductions"
  },
  "mo_net_state_income_taxes": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/taxable_income/mo_net_state_income_taxes.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized",
      "cap": "gov.irs.deductions.itemized.salt_and_real_estate.cap",
      "salt_and_real_estate": "gov.irs.deductions.itemized.salt_and_real_estate"
    },
    "variables": [
      "filing_status",
      "state_withheld_income_tax",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri net state income taxes"
  },
  "mo_business_income_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/deductions/mo_business_income_deduction.py",
    "parameters": {
      "p": "gov.states.mo.tax.income.deductions.business_income",
      "rate": "gov.states.mo.tax.income.deductions.business_income.rate"
    },
    "variables": [
      "qualified_business_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri business income deduction"
  },
  "mo_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/deductions/mo_itemized_deductions.py",
    "parameters": {
      "p": "gov.states.mo.tax.income",
      "itemized": "gov.states.mo.tax.income.deductions.itemized",
      "deductions": "gov.states.mo.tax.income.deductions"
    },
    "variables": [
      "mo_net_state_income_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Sum of itemized deductions applicable to Missouri taxable income calculation"
  },
  "mo_pension_and_ss_or_ssd_deduction_section_b": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/deductions/mo_pension_and_ss_or_ssd_deduction_section_b.py",
    "parameters": {
      "p": "gov.states.mo.tax.income.deductions",
      "mo_max_private_pension": "gov.states.mo.tax.income.deductions.mo_max_private_pension",
      "mo_private_pension_deduction_allowance": "gov.states.mo.tax.income.deductions.mo_private_pension_deduction_allowance"
    },
    "variables": [
      "mo_adjusted_gross_income",
      "filing_status",
      "taxable_private_pension_income",
      "taxable_social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri Pension and Social Security or SS Disability Deduction"
  },
  "mo_pension_and_ss_or_ssd_deduction_section_c": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/deductions/mo_pension_and_ss_or_ssd_deduction_section_c.py",
    "parameters": {
      "p": "gov.states.mo.tax.income.deductions.social_security_and_public_pension",
      "income_threshold_applies": "gov.states.mo.tax.income.deductions.social_security_and_public_pension.income_threshold_applies",
      "mo_ss_or_ssd_deduction_allowance": "gov.states.mo.tax.income.deductions.social_security_and_public_pension.mo_ss_or_ssd_deduction_allowance"
    },
    "variables": [
      "mo_adjusted_gross_income",
      "filing_status",
      "taxable_social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri Pension and Social Security or SS Disability Deduction"
  },
  "mo_pension_and_ss_or_ssd_deduction_section_a": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/deductions/mo_pension_and_ss_or_ssd_deduction_section_a.py",
    "parameters": {
      "p": "gov.states.mo.tax.income.deductions.social_security_and_public_pension",
      "mo_public_pension_deduction_allowance": "gov.states.mo.tax.income.deductions.social_security_and_public_pension.mo_public_pension_deduction_allowance",
      "mo_max_social_security_benefit": "gov.states.mo.tax.income.deductions.social_security_and_public_pension.mo_max_social_security_benefit",
      "mo_ss_or_ssdi_exemption_threshold": "gov.states.mo.tax.income.deductions.social_security_and_public_pension.mo_ss_or_ssdi_exemption_threshold",
      "income_threshold_applies": "gov.states.mo.tax.income.deductions.social_security_and_public_pension.income_threshold_applies"
    },
    "variables": [
      "mo_adjusted_gross_income",
      "filing_status",
      "taxable_social_security",
      "mo_pension_and_ss_or_ssd_deduction_section_c",
      "taxable_public_pension_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri Pension and Social Security or SS Disability Deduction"
  },
  "mo_federal_income_tax_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/deductions/mo_federal_income_tax_deduction.py",
    "parameters": {
      "p": "gov.states.mo.tax.income.deductions.federal_income_tax",
      "cap": "gov.states.mo.tax.income.deductions.federal_income_tax.cap",
      "ignored_credits": "gov.states.mo.tax.income.deductions.federal_income_tax.ignored_credits",
      "rate": "gov.states.mo.tax.income.deductions.federal_income_tax.rate",
      "calc": "gov.states.mo.tax.income.deductions.federal_income_tax.rate.calc"
    },
    "variables": [
      "mo_adjusted_gross_income",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri Federal income tax deduction"
  },
  "mo_pension_and_ss_or_ssd_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/deductions/mo_pension_and_ss_or_ssd_deduction.py",
    "parameters": {},
    "variables": [
      "mo_pension_and_ss_or_ssd_deduction_section_b",
      "mo_pension_and_ss_or_ssd_deduction_section_c",
      "mo_pension_and_ss_or_ssd_deduction_section_a"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri Pension and Social Security or SS Disability Deduction"
  },
  "mo_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/credits/mo_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mo_property_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri refundable credits",
    "adds_from_parameter": "gov.states.mo.tax.income.credits.refundable"
  },
  "mo_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/credits/mo_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mo_wftc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri non-refundable credits",
    "adds_from_parameter": "gov.states.mo.tax.income.credits.non_refundable"
  },
  "mo_wftc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/credits/mo_wftc.py",
    "parameters": {
      "rate": "gov.states.mo.tax.income.credits.wftc.match"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri Working Families Tax Credit"
  },
  "mo_adjusted_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/adjusted_gross_income/mo_adjusted_gross_income.py",
    "parameters": {},
    "variables": [
      "irs_gross_income",
      "filing_status",
      "self_employed_health_insurance_ald_person",
      "self_employment_tax_ald_person",
      "self_employed_pension_contribution_ald_person",
      "above_the_line_deductions",
      "mo_qualified_health_insurance_premiums",
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri adjusted gross income"
  },
  "mo_ptc_income_offset": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/credits/property_tax/mo_ptc_income_offset.py",
    "parameters": {
      "p": "gov.states.mo.tax.income.credits.property_tax",
      "non_joint": "gov.states.mo.tax.income.credits.property_tax.income_offset.non_joint",
      "joint_renter": "gov.states.mo.tax.income.credits.property_tax.income_offset.joint_renter",
      "joint_owner": "gov.states.mo.tax.income.credits.property_tax.income_offset.joint_owner",
      "income_offset": "gov.states.mo.tax.income.credits.property_tax.income_offset"
    },
    "variables": [
      "filing_status",
      "rents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri property tax credit gross income offset amount"
  },
  "mo_property_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/credits/property_tax/mo_property_tax_credit.py",
    "parameters": {
      "p": "gov.states.mo.tax.income.credits.property_tax",
      "property_tax_rent_ratio": "gov.states.mo.tax.income.credits.property_tax.property_tax_rent_ratio",
      "rent_property_tax_limit": "gov.states.mo.tax.income.credits.property_tax.rent_property_tax_limit",
      "property_tax_limit": "gov.states.mo.tax.income.credits.property_tax.property_tax_limit",
      "phase_out": "gov.states.mo.tax.income.credits.property_tax.phase_out",
      "threshold": "gov.states.mo.tax.income.credits.property_tax.phase_out.threshold",
      "step": "gov.states.mo.tax.income.credits.property_tax.phase_out.step",
      "rate": "gov.states.mo.tax.income.credits.property_tax.phase_out.rate"
    },
    "variables": [
      "mo_ptc_net_income",
      "rent",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mo_ptc_taxunit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri property tax credit"
  },
  "mo_ptc_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/credits/property_tax/mo_ptc_gross_income.py",
    "parameters": {
      "pa_sources": "gov.states.mo.tax.income.credits.property_tax.public_assistance_types"
    },
    "variables": [
      "mo_adjusted_gross_income",
      "veterans_benefits",
      "tax_exempt_social_security",
      "tax_exempt_pension_income",
      "tax_exempt_interest_income",
      "limited_capital_loss",
      "is_fully_disabled_service_connected_veteran"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri property tax credit gross income"
  },
  "mo_ptc_taxunit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/credits/property_tax/mo_ptc_taxunit_eligible.py",
    "parameters": {
      "p": "gov.states.mo.tax.income.credits.property_tax",
      "aged_survivor_min_age": "gov.states.mo.tax.income.credits.property_tax.aged_survivor_min_age",
      "age_threshold": "gov.states.mo.tax.income.credits.property_tax.age_threshold"
    },
    "variables": [
      "age_head",
      "age_spouse",
      "social_security_survivors",
      "disabled_spouse",
      "military_disabled_head",
      "military_disabled_spouse",
      "disabled_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri property tax credit taxunit eligible"
  },
  "mo_ptc_net_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mo/tax/income/credits/property_tax/mo_ptc_net_income.py",
    "parameters": {},
    "variables": [
      "mo_ptc_gross_income",
      "mo_ptc_income_offset"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MO",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Missouri property tax credit net income"
  },
  "mt_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/subtractions/mt_subtractions.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.subtractions",
      "subtractions": "gov.states.mt.tax.income.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana subtractions from federal adjusted gross income"
  },
  "mt_regular_income_tax_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_regular_income_tax_joint.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.main",
      "in_effect": "gov.states.mt.tax.income.main.capital_gains.in_effect",
      "main": "gov.states.mt.tax.income.main",
      "calc": "gov.states.mt.tax.income.main.surviving_spouse.calc"
    },
    "variables": [
      "filing_status",
      "long_term_capital_gains",
      "mt_taxable_income_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana income (subtracting capital gains since 2024) tax before refundable credits, when married couples file separately"
  },
  "mt_regular_income_tax_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_regular_income_tax_indiv.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.main",
      "in_effect": "gov.states.mt.tax.income.main.capital_gains.in_effect",
      "main": "gov.states.mt.tax.income.main",
      "calc": "gov.states.mt.tax.income.main.surviving_spouse.calc"
    },
    "variables": [
      "state_filing_status_if_married_filing_separately_on_same_return",
      "mt_taxable_income_indiv",
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana income (subtracting capital gains before 2024) tax before refundable credits, when married couples file separately"
  },
  "mt_income_tax_before_non_refundable_credits_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_income_tax_before_non_refundable_credits_joint.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mt_capital_gains_tax_joint",
      "mt_regular_income_tax_joint"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana income tax before refundable credits when married couples file jointly"
  },
  "mt_income_tax_before_refundable_credits_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_income_tax_before_refundable_credits_indiv.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "mt_income_tax_before_non_refundable_credits_indiv",
      "mt_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana income tax before refundable credits when married couples are filing separately"
  },
  "mt_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mt_refundable_credits_before_renter_credit",
      "mt_elderly_homeowner_or_renter_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana refundable credits"
  },
  "mt_income_tax_before_refundable_credits_unit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_income_tax_before_refundable_credits_unit.py",
    "parameters": {},
    "variables": [
      "mt_income_tax_before_refundable_credits_indiv",
      "mt_income_tax_before_refundable_credits_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana income tax before refundable credits"
  },
  "mt_income_tax_before_refundable_credits_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_income_tax_before_refundable_credits_joint.py",
    "parameters": {},
    "variables": [
      "mt_non_refundable_credits",
      "mt_income_tax_before_non_refundable_credits_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana income tax before refundable credits when married couples are filing jointly"
  },
  "mt_income_tax_before_non_refundable_credits_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_income_tax_before_non_refundable_credits_indiv.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mt_capital_gains_tax_indiv",
      "mt_regular_income_tax_indiv"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana income tax before refundable credits when married couples file separately"
  },
  "mt_income_tax_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_income_tax_joint.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mt_income_tax_before_refundable_credits_joint"
    ],
    "subtracts": [
      "mt_refundable_credits"
    ],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana income tax when married couples are filing jointly"
  },
  "mt_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana refundable credits"
  },
  "mt_income_tax_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_income_tax_indiv.py",
    "parameters": {},
    "variables": [
      "mt_income_tax_before_refundable_credits_indiv",
      "mt_refundable_credits",
      "is_tax_unit_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana income tax when married couples are filing separately"
  },
  "mt_taxable_income_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_taxable_income_indiv.py",
    "parameters": {},
    "variables": [
      "mt_pre_dependent_exemption_taxable_income_indiv",
      "mt_dependent_exemptions_person",
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana taxable income when married couples are filing separately"
  },
  "mt_pre_dependent_exemption_taxable_income_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_pre_dependent_exemption_taxable_income_indiv.py",
    "parameters": {},
    "variables": [
      "mt_deductions_indiv",
      "mt_personal_exemptions_indiv",
      "mt_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana taxable income before the dependent exemption when married couples are filing separately"
  },
  "mt_refundable_credits_before_renter_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_refundable_credits_before_renter_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mt_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana refundable credits before adding the elderly homeowner or renter credit",
    "adds_from_parameter": "gov.states.mt.tax.income.credits.refundable"
  },
  "mt_taxable_income_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/tax_calculation/mt_taxable_income_joint.py",
    "parameters": {},
    "variables": [
      "mt_standard_deduction_joint",
      "mt_agi",
      "mt_dependent_exemptions_person",
      "mt_personal_exemptions_joint",
      "is_tax_unit_head",
      "mt_itemized_deductions_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana taxable income when married couples file jointly"
  },
  "mt_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/additions/mt_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana additions to federal adjusted gross income"
  },
  "mt_deductions_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/mt_deductions_indiv.py",
    "parameters": {},
    "variables": [
      "mt_standard_deduction_indiv",
      "mt_itemized_deductions_indiv",
      "mt_tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "The total amount of Montana deductions and exemptions when married filing separately"
  },
  "mt_capital_gains_tax_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/capital_gains/mt_capital_gains_tax_joint.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.main.capital_gains",
      "in_effect": "gov.states.mt.tax.income.main.capital_gains.in_effect",
      "rates": "gov.states.mt.tax.income.main.capital_gains.rates",
      "amounts": "gov.states.mt.tax.income.main.capital_gains.rates.head_of_household.amounts"
    },
    "variables": [
      "mt_capital_gains_tax_applicable_threshold_joint",
      "filing_status",
      "long_term_capital_gains",
      "mt_taxable_income_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana net long-term capital gains tax when married couples file jointly"
  },
  "mt_capital_gains_tax_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/capital_gains/mt_capital_gains_tax_indiv.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.main.capital_gains",
      "in_effect": "gov.states.mt.tax.income.main.capital_gains.in_effect",
      "rates": "gov.states.mt.tax.income.main.capital_gains.rates",
      "amounts": "gov.states.mt.tax.income.main.capital_gains.rates.head_of_household.amounts",
      "single": "gov.states.mt.tax.income.main.capital_gains.rates.single",
      "separate": "gov.states.mt.tax.income.main.capital_gains.rates.separate",
      "surviving_spouse": "gov.states.mt.tax.income.main.capital_gains.rates.surviving_spouse",
      "head_of_household": "gov.states.mt.tax.income.main.capital_gains.rates.head_of_household"
    },
    "variables": [
      "state_filing_status_if_married_filing_separately_on_same_return",
      "long_term_capital_gains",
      "mt_capital_gains_tax_applicable_threshold_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana net long-term capital gains tax when married couples file separately"
  },
  "mt_capital_gains_tax_applicable_threshold_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/capital_gains/mt_capital_gains_tax_applicable_threshold_joint.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.main.capital_gains",
      "thresholds": "gov.states.mt.tax.income.main.capital_gains.rates.surviving_spouse.thresholds",
      "rates": "gov.states.mt.tax.income.main.capital_gains.rates"
    },
    "variables": [
      "mt_taxable_income_indiv",
      "filing_status",
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana applicable threshold for the capital gains tax when married couples file jointly"
  },
  "mt_capital_gains_tax_applicable_threshold_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/capital_gains/mt_capital_gains_tax_applicable_threshold_indiv.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.main.capital_gains",
      "thresholds": "gov.states.mt.tax.income.main.capital_gains.rates.surviving_spouse.thresholds",
      "single": "gov.states.mt.tax.income.main.capital_gains.rates.single",
      "separate": "gov.states.mt.tax.income.main.capital_gains.rates.separate",
      "head_of_household": "gov.states.mt.tax.income.main.capital_gains.rates.head_of_household",
      "surviving_spouse": "gov.states.mt.tax.income.main.capital_gains.rates.surviving_spouse",
      "rates": "gov.states.mt.tax.income.main.capital_gains.rates"
    },
    "variables": [
      "state_filing_status_if_married_filing_separately_on_same_return",
      "mt_taxable_income_indiv",
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana applicable threshold for the capital gains tax when married couples file separately"
  },
  "mt_files_separately": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/filing/mt_files_separately.py",
    "parameters": {
      "p": "gov.states.mt.tax.income",
      "married_filing_separately_on_same_return_allowed": "gov.states.mt.tax.income.married_filing_separately_on_same_return_allowed"
    },
    "variables": [
      "mt_income_tax_indiv",
      "mt_income_tax_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "married couple files separately on Montana tax return"
  },
  "mt_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/base/mt_agi.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.social_security",
      "applies": "gov.states.mt.tax.income.social_security.applies"
    },
    "variables": [
      "mt_taxable_social_security",
      "taxable_social_security",
      "adjusted_gross_income_person",
      "is_tax_unit_dependent",
      "mt_subtractions",
      "is_tax_unit_head",
      "mt_additions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana Adjusted Gross Income for each individual"
  },
  "mt_taxable_social_security": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/base/mt_taxable_social_security.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.social_security.amount",
      "p_irs": "gov.irs.social_security.taxability.rate",
      "lower": "gov.states.mt.tax.income.social_security.amount.lower",
      "upper": "gov.states.mt.tax.income.social_security.amount.upper",
      "base": "gov.irs.social_security.taxability.rate.base",
      "additional": "gov.irs.social_security.taxability.rate.additional"
    },
    "variables": [
      "irs_gross_income",
      "filing_status",
      "social_security",
      "taxable_social_security",
      "mt_applicable_ald_deductions",
      "mt_subtractions",
      "tax_exempt_interest_income",
      "student_loan_interest_ald"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana taxable social security benefits"
  },
  "mt_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/base/mt_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.mt.tax.income",
      "cap": "gov.states.mt.tax.income.deductions.standard.cap",
      "calc": "gov.states.mt.tax.income.main.single.calc",
      "standard": "gov.states.mt.tax.income.deductions.standard",
      "single": "gov.states.mt.tax.income.main.single",
      "deductions": "gov.states.mt.tax.income.deductions",
      "main": "gov.states.mt.tax.income.main"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana withheld income tax"
  },
  "mt_applicable_ald_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/base/mt_applicable_ald_deductions.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "above_the_line_deductions",
      "head_spouse_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana applicable above-the-line deductions "
  },
  "mt_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/base/mt_income_tax.py",
    "parameters": {},
    "variables": [
      "mt_files_separately",
      "mt_income_tax_indiv",
      "mt_income_tax_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana income tax"
  },
  "mt_elderly_homeowner_or_renter_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/credits/mt_elderly_homeowner_or_renter/mt_elderly_homeowner_or_renter_credit.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter",
      "rent_equivalent_tax_rate": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter.rent_equivalent_tax_rate",
      "cap": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter.cap",
      "multiplier": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter.multiplier",
      "calc": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter.multiplier.calc"
    },
    "variables": [
      "rent",
      "real_estate_taxes",
      "mt_elderly_homeowner_or_renter_credit_net_household_income",
      "is_tax_unit_head",
      "mt_elderly_homeowner_or_renter_credit_gross_household_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mt_elderly_homeowner_or_renter_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana Elderly Homeowner/Renter Credit"
  },
  "mt_elderly_homeowner_or_renter_credit_net_household_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/credits/mt_elderly_homeowner_or_renter/mt_elderly_homeowner_or_renter_credit_net_household_income.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter",
      "standard_exclusion": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter.net_household_income.standard_exclusion",
      "reduction_rate": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter.net_household_income.reduction_rate",
      "net_household_income": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter.net_household_income",
      "calc": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter.net_household_income.reduction_rate.calc"
    },
    "variables": [
      "is_tax_unit_head",
      "mt_elderly_homeowner_or_renter_credit_gross_household_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mt_elderly_homeowner_or_renter_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Net household income for Montana elderly homeowner or renter credit"
  },
  "mt_elderly_homeowner_or_renter_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/credits/mt_elderly_homeowner_or_renter/mt_elderly_homeowner_or_renter_credit_eligible.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter",
      "age_threshold": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter.age_threshold"
    },
    "variables": [
      "greater_age_head_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Montana Elderly Homeowner/Renter Credit"
  },
  "mt_elderly_homeowner_or_renter_credit_gross_household_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/credits/mt_elderly_homeowner_or_renter/mt_elderly_homeowner_or_renter_credit_gross_household_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income_person",
      "tax_exempt_interest_income",
      "taxable_ira_distributions",
      "tax_exempt_ira_distributions",
      "pension_income",
      "mt_refundable_credits_before_renter_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana gross household income for the elderly homeowner/renter credit",
    "adds_from_parameter": "gov.states.mt.tax.income.credits.elderly_homeowner_or_renter.gross_income_sources"
  },
  "mt_income_tax_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/credits/rebate/mt_income_tax_rebate.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.credits.rebate",
      "amount": "gov.states.mt.tax.income.credits.rebate.amount"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana 2023 income tax rebate"
  },
  "mt_property_tax_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/credits/rebate/mt_property_tax_rebate.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.credits.rebate.property",
      "amount": "gov.states.mt.tax.income.credits.rebate.property.amount"
    },
    "variables": [
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana property tax rebate"
  },
  "mt_capital_gain_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/credits/capital_gain/mt_capital_gain_credit.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.credits.capital_gain",
      "percentage": "gov.states.mt.tax.income.credits.capital_gain.percentage"
    },
    "variables": [
      "capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana capital gain credit"
  },
  "mt_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/credits/eitc/mt_eitc.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.credits.eitc",
      "match": "gov.states.mt.tax.income.credits.eitc.match"
    },
    "variables": [
      "is_tax_unit_head",
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana EITC"
  },
  "mt_personal_exemptions_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/exemptions/personal/mt_personal_exemptions_joint.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "mt_personal_exemptions_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana exemptions when married couple files jointly"
  },
  "mt_personal_exemptions_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/exemptions/personal/mt_personal_exemptions_indiv.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.exemptions",
      "applies": "gov.states.mt.tax.income.exemptions.applies",
      "amount": "gov.states.mt.tax.income.exemptions.amount"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "is_tax_unit_head",
      "mt_aged_exemption_eligible_person",
      "is_blind"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana exemptions when married couples file separately"
  },
  "mt_interest_exemption_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/exemptions/interest/mt_interest_exemption_eligible_person.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.exemptions",
      "applies": "gov.states.mt.tax.income.exemptions.applies",
      "interest": "gov.states.mt.tax.income.exemptions.interest",
      "age_threshold": "gov.states.mt.tax.income.exemptions.interest.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Montana interest exemption"
  },
  "mt_interest_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/exemptions/interest/mt_interest_exemption_person.py",
    "parameters": {},
    "variables": [
      "mt_interest_exemption",
      "taxable_interest_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mt_interest_exemption_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana interest exemption for each person"
  },
  "mt_interest_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/exemptions/interest/mt_interest_exemption.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.exemptions",
      "applies": "gov.states.mt.tax.income.exemptions.applies",
      "interest": "gov.states.mt.tax.income.exemptions.interest",
      "cap": "gov.states.mt.tax.income.exemptions.interest.cap"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "filing_status",
      "taxable_interest_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana interest exemption for the tax unit"
  },
  "mt_dependent_exemptions_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/exemptions/dependent/mt_dependent_exemptions_person.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.exemptions",
      "applies": "gov.states.mt.tax.income.exemptions.applies",
      "amount": "gov.states.mt.tax.income.exemptions.amount"
    },
    "variables": [
      "is_disabled",
      "is_child_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana dependent exemption for each dependent"
  },
  "mt_aged_exemption_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/exemptions/aged/mt_aged_exemption_eligible_person.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.exemptions",
      "applies": "gov.states.mt.tax.income.exemptions.applies",
      "age_threshold": "gov.states.mt.tax.income.exemptions.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana aged exemptions when married couples file separately"
  },
  "mt_tax_unit_itemizes": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/general/mt_tax_unit_itemizes.py",
    "parameters": {},
    "variables": [
      "mt_standard_deduction_indiv",
      "mt_itemized_deductions_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the tax unit in Montana itemizes the deductions when married filing separately"
  },
  "mt_standard_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/standard/mt_standard_deduction_joint.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.deductions.standard",
      "state_specific_deduction_applies": "gov.states.mt.tax.income.deductions.standard.state_specific_deduction_applies",
      "floor": "gov.states.mt.tax.income.deductions.standard.floor",
      "cap": "gov.states.mt.tax.income.deductions.standard.cap",
      "rate": "gov.states.mt.tax.income.deductions.standard.rate"
    },
    "variables": [
      "standard_deduction",
      "is_tax_unit_head",
      "filing_status",
      "mt_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana standard deduction when married couples are filing jointly"
  },
  "mt_standard_deduction_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/standard/mt_standard_deduction_indiv.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.deductions.standard",
      "state_specific_deduction_applies": "gov.states.mt.tax.income.deductions.standard.state_specific_deduction_applies",
      "floor": "gov.states.mt.tax.income.deductions.standard.floor",
      "cap": "gov.states.mt.tax.income.deductions.standard.cap",
      "rate": "gov.states.mt.tax.income.deductions.standard.rate"
    },
    "variables": [
      "state_filing_status_if_married_filing_separately_on_same_return",
      "standard_deduction",
      "mt_agi",
      "is_tax_unit_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana standard deduction when married couples are filing separately"
  },
  "mt_child_dependent_care_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/cdcc/mt_child_dependent_care_expense_deduction.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.deductions.child_dependent_care_expense",
      "calc": "gov.states.mt.tax.income.deductions.child_dependent_care_expense.phase_out.calc",
      "cap": "gov.states.mt.tax.income.deductions.child_dependent_care_expense.cap",
      "phase_out": "gov.states.mt.tax.income.deductions.child_dependent_care_expense.phase_out"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "mt_agi",
      "mt_child_dependent_care_expense_deduction_eligible_children",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana child dependent care expense deduction"
  },
  "mt_child_dependent_care_expense_deduction_eligible_children": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/cdcc/mt_child_dependent_care_expense_deduction_eligible_children.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mt_child_dependent_care_expense_deduction_eligible_child"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible children for the Montana child dependent care expense deduction "
  },
  "mt_federal_income_tax_deduction_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/itemized/federal_tax/mt_federal_income_tax_deduction_indiv.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.deductions.itemized.federal_income_tax",
      "cap": "gov.states.mt.tax.income.deductions.itemized.federal_income_tax.cap"
    },
    "variables": [
      "state_filing_status_if_married_filing_separately_on_same_return",
      "mt_federal_income_tax_deduction_unit",
      "mt_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana federal income tax deduction when married couples are filing separately"
  },
  "mt_federal_income_tax_deduction_unit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/itemized/federal_tax/mt_federal_income_tax_deduction_unit.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.deductions.itemized.federal_income_tax",
      "cap": "gov.states.mt.tax.income.deductions.itemized.federal_income_tax.cap"
    },
    "variables": [
      "income_tax_before_refundable_credits",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana federal income tax deduction for the entire tax unit"
  },
  "mt_itemized_deductions_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/itemized/general/mt_itemized_deductions_joint.py",
    "parameters": {},
    "variables": [
      "mt_misc_deductions",
      "investment_interest_expense",
      "mt_federal_income_tax_deduction_unit",
      "mortgage_interest",
      "mt_salt_deduction",
      "charitable_deduction",
      "mt_medical_expense_deduction_joint",
      "is_tax_unit_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana itemized deductions when married couples are filing jointly"
  },
  "mt_itemized_deductions_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/itemized/general/mt_itemized_deductions_indiv.py",
    "parameters": {
      "p": "gov.irs.deductions"
    },
    "variables": [
      "mt_misc_deductions",
      "investment_interest_expense",
      "mortgage_interest",
      "is_tax_unit_head_or_spouse",
      "charitable_deduction",
      "mt_salt_deduction",
      "mt_federal_income_tax_deduction_indiv",
      "mt_medical_expense_deduction_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana itemized deductions when married couples are filing separately"
  },
  "mt_misc_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/itemized/general/mt_misc_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana miscellaneous deductions"
  },
  "mt_salt_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/itemized/salt/mt_salt_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions",
      "cap": "gov.irs.deductions.itemized.salt_and_real_estate.cap",
      "salt_and_real_estate": "gov.irs.deductions.itemized.salt_and_real_estate",
      "itemized": "gov.irs.deductions.itemized"
    },
    "variables": [
      "filing_status",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana state and local tax deduction"
  },
  "mt_medical_expense_deduction_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/itemized/medical/mt_medical_expense_deduction_indiv.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.medical",
      "floor": "gov.irs.deductions.itemized.medical.floor"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "medical_out_of_pocket_expenses",
      "mt_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana medical expense deduction when married couples are filing separately"
  },
  "mt_medical_expense_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/deductions/itemized/medical/mt_medical_expense_deduction_joint.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.medical",
      "floor": "gov.irs.deductions.itemized.medical.floor"
    },
    "variables": [
      "is_tax_unit_head",
      "medical_out_of_pocket_expenses",
      "mt_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana medical expense deduction when married couples are filing jointly"
  },
  "mt_tuition_subtraction_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/subtractions/tuition/mt_tuition_subtraction_person.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.subtractions.tuition",
      "cap": "gov.states.mt.tax.income.subtractions.tuition.cap"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "investment_in_529_plan_indv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana tuition subtraction"
  },
  "mt_tuition_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/subtractions/tuition/mt_tuition_subtraction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mt_tuition_subtraction_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana tuition subtraction"
  },
  "mt_old_age_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/subtractions/old_age/mt_old_age_subtraction.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.subtractions.old_age",
      "calc": "gov.states.mt.tax.income.subtractions.old_age.amount.calc",
      "amount": "gov.states.mt.tax.income.subtractions.old_age.amount"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana old age subtraction"
  },
  "mt_disability_income_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/subtractions/disability/mt_disability_income_exclusion.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "mt_disability_income_exclusion_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana disability income exclusion"
  },
  "mt_disability_income_exclusion_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/subtractions/disability/mt_disability_income_exclusion_eligible_person.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.subtractions.disability_income",
      "age_threshold": "gov.states.mt.tax.income.subtractions.disability_income.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age",
      "retired_on_total_disability"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana disability income exclusion eligible person"
  },
  "mt_disability_income_exclusion_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/mt/tax/income/subtractions/disability/mt_disability_income_exclusion_person.py",
    "parameters": {
      "p": "gov.states.mt.tax.income.subtractions.disability_income",
      "cap": "gov.states.mt.tax.income.subtractions.disability_income.cap"
    },
    "variables": [
      "disability_benefits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "mt_disability_income_exclusion_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Montana disability income exclusion for each person"
  },
  "ms_files_separately": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/ms_files_separately.py",
    "parameters": {},
    "variables": [
      "ms_income_tax_before_credits_joint",
      "ms_income_tax_before_credits_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "married couple files separately on Mississippi tax return"
  },
  "ms_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/ms_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ms.tax.income",
      "amount": "gov.states.ms.tax.income.deductions.standard.amount",
      "calc": "gov.states.ms.tax.income.rate.calc",
      "standard": "gov.states.ms.tax.income.deductions.standard",
      "rate": "gov.states.ms.tax.income.rate",
      "deductions": "gov.states.ms.tax.income.deductions"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi withheld income tax"
  },
  "ms_agi_adjustments": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/ms_agi_adjustments.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "traditional_ira_contributions",
      "ms_self_employment_adjustment",
      "ms_national_guard_or_reserve_pay_adjustment",
      "alimony_expense",
      "ms_retirement_income_exemption"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi adjustments to federal adjusted gross income",
    "adds_from_parameter": "gov.states.ms.tax.income.adjustments.adjustments"
  },
  "ms_prorate_fraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/ms_prorate_fraction.py",
    "parameters": {},
    "variables": [
      "ms_agi",
      "is_tax_unit_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Share of Mississippi AGI within tax unit"
  },
  "ms_income_tax_before_credits_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/ms_income_tax_before_credits_indiv.py",
    "parameters": {
      "rate": "gov.states.ms.tax.income.rate",
      "calc": "gov.states.ms.tax.income.rate.calc"
    },
    "variables": [
      "ms_taxable_income_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi income tax before credits when married couples file separately",
    "bracket_parameters": {
      "rate": "gov.states.ms.tax.income.rate"
    },
    "parameter_details": {
      "rate": {
        "path": "gov.states.ms.tax.income.rate",
        "type": "bracket",
        "brackets": [
          {
            "threshold": 0,
            "amount": null
          },
          {
            "threshold": 10000,
            "amount": null
          },
          {
            "threshold": Infinity,
            "amount": null
          },
          {
            "threshold": Infinity,
            "amount": null
          }
        ],
        "description": "Mississippi taxes personal income using these income tax brackets."
      }
    }
  },
  "ms_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/ms_income_tax.py",
    "parameters": {},
    "variables": [
      "ms_non_refundable_credits",
      "ms_income_tax_before_credits_unit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi income tax"
  },
  "ms_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/ms_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ms_charitable_contributions_credit",
      "ms_cdcc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi non-refundable credits",
    "adds_from_parameter": "gov.states.ms.tax.income.credits.non_refundable"
  },
  "ms_income_tax_before_credits_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/ms_income_tax_before_credits_joint.py",
    "parameters": {
      "rate": "gov.states.ms.tax.income.rate",
      "calc": "gov.states.ms.tax.income.rate.calc"
    },
    "variables": [
      "ms_taxable_income_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi income tax before credits when married couples file jointly",
    "bracket_parameters": {
      "rate": "gov.states.ms.tax.income.rate"
    },
    "parameter_details": {
      "rate": {
        "path": "gov.states.ms.tax.income.rate",
        "type": "bracket",
        "brackets": [
          {
            "threshold": 0,
            "amount": null
          },
          {
            "threshold": 10000,
            "amount": null
          },
          {
            "threshold": Infinity,
            "amount": null
          },
          {
            "threshold": Infinity,
            "amount": null
          }
        ],
        "description": "Mississippi taxes personal income using these income tax brackets."
      }
    }
  },
  "ms_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/ms_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi refundable credits"
  },
  "ms_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/ms_agi.py",
    "parameters": {
      "p": "gov.states.ms.tax.income",
      "income_sources": "gov.states.ms.tax.income.income_sources"
    },
    "variables": [
      "ms_agi_adjustments",
      "is_tax_unit_head",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi adjusted gross income"
  },
  "ms_income_tax_before_credits_unit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/ms_income_tax_before_credits_unit.py",
    "parameters": {},
    "variables": [
      "ms_files_separately",
      "ms_income_tax_before_credits_indiv",
      "ms_income_tax_before_credits_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi income tax before credits"
  },
  "ms_taxable_income_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/taxable_income/ms_taxable_income_indiv.py",
    "parameters": {},
    "variables": [
      "ms_deductions_indiv",
      "ms_pre_deductions_taxable_income_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi taxable income when married couple file separately"
  },
  "ms_taxable_income_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/taxable_income/ms_taxable_income_joint.py",
    "parameters": {},
    "variables": [
      "ms_agi",
      "ms_total_exemptions_joint",
      "ms_deductions_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi taxable income when married couple file jointly"
  },
  "ms_pre_deductions_taxable_income_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/taxable_income/ms_pre_deductions_taxable_income_indiv.py",
    "parameters": {},
    "variables": [
      "ms_agi",
      "ms_total_exemptions_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi pre deductions taxable income when married couple file separately"
  },
  "ms_deductions_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/deductions/ms_deductions_joint.py",
    "parameters": {},
    "variables": [
      "ms_standard_deduction_joint",
      "ms_itemized_deductions_joint"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi deductions when married couples file jointly"
  },
  "ms_tax_unit_itemizes": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/deductions/ms_tax_unit_itemizes.py",
    "parameters": {},
    "variables": [
      "ms_itemized_deductions_indiv",
      "ms_standard_deduction_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the tax unit in Mississippi itemizes the deductions when married filing separately"
  },
  "ms_deductions_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/deductions/ms_deductions_indiv.py",
    "parameters": {},
    "variables": [
      "ms_tax_unit_itemizes",
      "ms_itemized_deductions_indiv",
      "ms_standard_deduction_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi deductions when married couples file separately"
  },
  "ms_retirement_income_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/adjustments/ms_retirement_income_exemption.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "taxable_pension_income",
      "taxable_social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi retirement income exemption"
  },
  "ms_self_employment_adjustment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/adjustments/ms_self_employment_adjustment.py",
    "parameters": {
      "p": "gov.states.ms.tax.income.adjustments.self_employment",
      "rate": "gov.states.ms.tax.income.adjustments.self_employment.rate"
    },
    "variables": [
      "self_employment_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi self employment adjustment"
  },
  "ms_national_guard_or_reserve_pay_adjustment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/adjustments/ms_national_guard_or_reserve_pay_adjustment.py",
    "parameters": {
      "p": "gov.states.ms.tax.income.adjustments.national_guard_or_reserve_pay",
      "cap": "gov.states.ms.tax.income.adjustments.national_guard_or_reserve_pay.cap"
    },
    "variables": [
      "military_service_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi national guard or reserve pay adjustment"
  },
  "ms_total_exemptions_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/exemptions/ms_total_exemptions_joint.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "ms_total_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi total exemptions when married couples file jointly"
  },
  "ms_dependents_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/exemptions/ms_dependents_exemption.py",
    "parameters": {
      "p": "gov.states.ms.tax.income.exemptions.dependents",
      "amount": "gov.states.ms.tax.income.exemptions.dependents.amount"
    },
    "variables": [
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi qualified and other dependent children exemption"
  },
  "ms_total_exemptions_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/exemptions/ms_total_exemptions_indiv.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "ms_total_exemptions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi total exemptions when married couples file separately"
  },
  "ms_aged_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/exemptions/ms_aged_exemption.py",
    "parameters": {
      "p": "gov.states.ms.tax.income.exemptions.aged",
      "amount": "gov.states.ms.tax.income.exemptions.aged.amount",
      "age_threshold": "gov.states.ms.tax.income.exemptions.aged.age_threshold"
    },
    "variables": [
      "age_head",
      "filing_status",
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi aged exemption"
  },
  "ms_blind_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/exemptions/ms_blind_exemption.py",
    "parameters": {
      "p": "gov.states.ms.tax.income.exemptions.blind",
      "amount": "gov.states.ms.tax.income.exemptions.blind.amount"
    },
    "variables": [
      "blind_spouse",
      "filing_status",
      "blind_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi blind exemption"
  },
  "ms_regular_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/exemptions/ms_regular_exemption.py",
    "parameters": {
      "p": "gov.states.ms.tax.income.exemptions",
      "amount": "gov.states.ms.tax.income.exemptions.regular.amount",
      "regular": "gov.states.ms.tax.income.exemptions.regular"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi regular exemption"
  },
  "ms_total_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/exemptions/ms_total_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ms_regular_exemption",
      "ms_dependents_exemption",
      "ms_aged_exemption",
      "ms_blind_exemption"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi total exemptions"
  },
  "ms_charitable_contributions_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/credits/charitable_contribution/ms_charitable_contributions_credit.py",
    "parameters": {
      "p": "gov.states.ms.tax.income.credits.charitable_contribution",
      "cap": "gov.states.ms.tax.income.credits.charitable_contribution.cap"
    },
    "variables": [
      "ms_charitable_contributions_to_qualifying_foster_care_organizations",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi charitable contributions credit"
  },
  "ms_charitable_contributions_to_qualifying_foster_care_organizations": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/credits/charitable_contribution/ms_charitable_contributions_to_qualifying_foster_care_organizations.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Charitable contributions to qualifying foster care organizations in Mississippi"
  },
  "ms_cdcc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/credits/cdcc/ms_cdcc_eligible.py",
    "parameters": {
      "p": "gov.states.ms.tax.income.credits.cdcc",
      "income_limit": "gov.states.ms.tax.income.credits.cdcc.income_limit"
    },
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Mississippi child and dependent care credit"
  },
  "ms_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/credits/cdcc/ms_cdcc.py",
    "parameters": {
      "p": "gov.states.ms.tax.income.credits.cdcc",
      "match": "gov.states.ms.tax.income.credits.cdcc.match"
    },
    "variables": [
      "cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ms_cdcc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi child and dependent care credit"
  },
  "ms_itemized_deductions_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/deductions/itemized/ms_itemized_deductions_joint.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "ms_itemized_deductions_unit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi itemized deductions for joint couples"
  },
  "ms_itemized_deductions_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/deductions/itemized/ms_itemized_deductions_indiv.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "ms_itemized_deductions_unit",
      "is_tax_unit_spouse",
      "ms_pre_deductions_taxable_income_indiv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi itemized deductions for individual couples"
  },
  "ms_itemized_deductions_unit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/deductions/itemized/ms_itemized_deductions_unit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "itemized_deductions_less_salt",
      "misc_deduction",
      "ms_real_estate_tax_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi itemized deductions"
  },
  "ms_real_estate_tax_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/deductions/itemized/ms_real_estate_tax_deduction.py",
    "parameters": {
      "p": "gov.irs.deductions.itemized.salt_and_real_estate",
      "cap": "gov.irs.deductions.itemized.salt_and_real_estate.cap"
    },
    "variables": [
      "filing_status",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi real estate tax deduction"
  },
  "ms_standard_deduction_indiv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/deductions/standard/ms_standard_deduction_indiv.py",
    "parameters": {
      "p": "gov.states.ms.tax.income.deductions.standard",
      "amount": "gov.states.ms.tax.income.deductions.standard.amount"
    },
    "variables": [
      "state_filing_status_if_married_filing_separately_on_same_return",
      "is_tax_unit_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi standard deduction when married couples file separately"
  },
  "ms_standard_deduction_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ms/tax/income/deductions/standard/ms_standard_deduction_joint.py",
    "parameters": {
      "p": "gov.states.ms.tax.income.deductions.standard",
      "amount": "gov.states.ms.tax.income.deductions.standard.amount"
    },
    "variables": [
      "is_tax_unit_head",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.MS",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mississippi personal standard deduction for married couples filing jointly"
  },
  "ga_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/ga_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.ga.tax.income",
      "amount": "gov.states.ga.tax.income.deductions.standard.amount",
      "calc": "gov.states.ga.tax.income.main.single.calc",
      "standard": "gov.states.ga.tax.income.deductions.standard",
      "single": "gov.states.ga.tax.income.main.single",
      "deductions": "gov.states.ga.tax.income.deductions",
      "main": "gov.states.ga.tax.income.main"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia withheld income tax"
  },
  "ga_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/ga_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia refundable credits"
  },
  "ga_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/ga_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ga_cdcc",
      "ga_low_income_credit",
      "ga_ctc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia non-refundable credits",
    "adds_from_parameter": "gov.states.ga.tax.income.credits.non_refundable"
  },
  "ga_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/ga_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.main",
      "calc": "gov.states.ga.tax.income.main.surviving_spouse.calc",
      "main": "gov.states.ga.tax.income.main"
    },
    "variables": [
      "filing_status",
      "ga_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia income tax before non-refundable credits"
  },
  "ga_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/ga_taxable_income.py",
    "parameters": {},
    "variables": [
      "ga_exemptions",
      "ga_agi",
      "ga_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia taxable income"
  },
  "ga_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/ga_subtractions.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.subtractions",
      "subtractions": "gov.states.ga.tax.income.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia subtractions from federal adjusted gross income"
  },
  "ga_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/ga_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "form_4972_lumpsum_distributions"
    ],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia additions to federal adjusted gross income",
    "adds_from_parameter": "gov.states.ga.tax.income.additions.additions"
  },
  "ga_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/ga_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ga_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "ga_refundable_credits"
    ],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia income tax after refundable credits"
  },
  "ga_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/ga_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "ga_additions"
    ],
    "subtracts": [
      "ga_subtractions"
    ],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia adjusted gross income"
  },
  "ga_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/ga_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ga_income_tax_before_non_refundable_credits",
      "ga_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia income tax before refundable credits"
  },
  "ga_investment_in_529_plan_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/subtractions/ga_investment_in_529_plan_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia investment in 529 plan deduction"
  },
  "ga_additional_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/deductions/ga_additional_standard_deduction.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.deductions.standard",
      "age_threshold": "gov.states.ga.tax.income.deductions.standard.aged.age_threshold",
      "amount": "gov.states.ga.tax.income.deductions.standard.aged.amount",
      "aged": "gov.states.ga.tax.income.deductions.standard.aged",
      "blind": "gov.states.ga.tax.income.deductions.standard.blind",
      "head": "gov.states.ga.tax.income.deductions.standard.aged.amount.head",
      "spouse": "gov.states.ga.tax.income.deductions.standard.aged.amount.spouse"
    },
    "variables": [
      "age_head",
      "filing_status",
      "age_spouse",
      "blind_head",
      "blind_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia additional standard deduction"
  },
  "ga_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/deductions/ga_deductions.py",
    "parameters": {
      "p": "gov.irs.deductions",
      "itemized_deductions": "gov.irs.deductions.itemized_deductions"
    },
    "variables": [
      "ga_standard_deduction",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia deductions"
  },
  "ga_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/deductions/ga_standard_deduction.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.deductions.standard",
      "amount": "gov.states.ga.tax.income.deductions.standard.amount",
      "applies": "gov.states.ga.tax.income.deductions.standard.applies"
    },
    "variables": [
      "filing_status",
      "ga_additional_standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia standard deduction"
  },
  "ga_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/exemptions/ga_exemptions.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.exemptions",
      "availability": "gov.states.ga.tax.income.exemptions.personal.availability",
      "amount": "gov.states.ga.tax.income.exemptions.personal.amount",
      "dependent": "gov.states.ga.tax.income.exemptions.dependent",
      "personal": "gov.states.ga.tax.income.exemptions.personal"
    },
    "variables": [
      "filing_status",
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia Exemptions"
  },
  "ga_surplus_tax_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/credits/ga_surplus_tax_rebate.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.credits.surplus_tax_rebate",
      "amount": "gov.states.ga.tax.income.credits.surplus_tax_rebate.amount"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia surplus tax rebate"
  },
  "ga_low_income_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/credits/ga_low_income_credit.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.credits.low_income",
      "supplement_age_eligibility": "gov.states.ga.tax.income.credits.low_income.supplement_age_eligibility",
      "amount": "gov.states.ga.tax.income.credits.low_income.amount",
      "calc": "gov.states.ga.tax.income.credits.low_income.amount.calc"
    },
    "variables": [
      "age_head",
      "exemptions_count",
      "age_spouse",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia low income credit"
  },
  "ga_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/credits/ctc/ga_ctc.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.credits.ctc",
      "age_threshold": "gov.states.ga.tax.income.credits.ctc.age_threshold",
      "amount": "gov.states.ga.tax.income.credits.ctc.amount"
    },
    "variables": [
      "ctc_qualifying_child",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia Child Tax Credit"
  },
  "ga_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/credits/cdcc/ga_cdcc.py",
    "parameters": {
      "rate": "gov.states.ga.tax.income.credits.cdcc.rate"
    },
    "variables": [
      "cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia non-refundable dependent care credit"
  },
  "ga_retirement_income_exclusion_retirement_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/subtractions/retirement/ga_retirement_income_exclusion_retirement_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "interest_income",
      "dividend_income",
      "rental_income",
      "capital_gains",
      "alimony_income",
      "taxable_pension_income",
      "taxable_ira_distributions",
      "ga_retirement_exclusion_countable_earned_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia retirement income for the retirement income exclusion",
    "adds_from_parameter": "gov.states.ga.tax.income.agi.exclusions.retirement.sources"
  },
  "ga_retirement_exclusion_countable_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/subtractions/retirement/ga_retirement_exclusion_countable_earned_income.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.agi.exclusions.retirement.cap",
      "earned_income": "gov.states.ga.tax.income.agi.exclusions.retirement.cap.earned_income"
    },
    "variables": [
      "earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Countable earned income for the Georgia retirement exclusion for each person"
  },
  "ga_retirement_exclusion_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/subtractions/retirement/ga_retirement_exclusion_person.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.agi.exclusions.retirement",
      "older": "gov.states.ga.tax.income.agi.exclusions.retirement.cap.older",
      "younger": "gov.states.ga.tax.income.agi.exclusions.retirement.cap.younger",
      "age_threshold": "gov.states.ga.tax.income.agi.exclusions.retirement.age_threshold",
      "cap": "gov.states.ga.tax.income.agi.exclusions.retirement.cap"
    },
    "variables": [
      "ga_retirement_income_exclusion_retirement_income",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ga_retirement_exclusion_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia retirement exclusion for each person"
  },
  "ga_retirement_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/subtractions/retirement/ga_retirement_exclusion.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ga_retirement_exclusion_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia retirement exclusion"
  },
  "ga_retirement_exclusion_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/subtractions/retirement/ga_retirement_exclusion_eligible_person.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.agi.exclusions.retirement",
      "younger": "gov.states.ga.tax.income.agi.exclusions.retirement.age_threshold.younger",
      "age_threshold": "gov.states.ga.tax.income.agi.exclusions.retirement.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Georgia retirement exclusion"
  },
  "ga_military_retirement_exclusion_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/subtractions/retirement/military/ga_military_retirement_exclusion_person.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.agi.exclusions.military_retirement",
      "earned_income_threshold": "gov.states.ga.tax.income.agi.exclusions.military_retirement.additional.earned_income_threshold",
      "amount": "gov.states.ga.tax.income.agi.exclusions.military_retirement.additional.amount",
      "base": "gov.states.ga.tax.income.agi.exclusions.military_retirement.base",
      "additional": "gov.states.ga.tax.income.agi.exclusions.military_retirement.additional"
    },
    "variables": [
      "earned_income",
      "military_retirement_pay"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ga_military_retirement_exclusion_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia military retirement exclusion"
  },
  "ga_military_retirement_exclusion_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/subtractions/retirement/military/ga_military_retirement_exclusion_eligible_person.py",
    "parameters": {
      "p": "gov.states.ga.tax.income.agi.exclusions.military_retirement",
      "age_limit": "gov.states.ga.tax.income.agi.exclusions.military_retirement.age_limit"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Georgia military retirement exclusion"
  },
  "ga_military_retirement_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ga/tax/income/subtractions/retirement/military/ga_military_retirement_exclusion.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ga_military_retirement_exclusion_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.GA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Georgia military retirement exclusion"
  },
  "ut_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/ut_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ut_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "ut_refundable_credits"
    ],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah income tax"
  },
  "ut_income_tax_exempt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/ut_income_tax_exempt.py",
    "parameters": {},
    "variables": [
      "basic_standard_deduction",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "exempt from Utah income tax",
    "description": "Form TC-40, line 21"
  },
  "ut_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/ut_income_tax_before_credits.py",
    "parameters": {
      "p": "gov.states.ut.tax.income",
      "rate": "gov.states.ut.tax.income.rate"
    },
    "variables": [
      "ut_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah income tax before credits",
    "description": "Form TC-40, line 10"
  },
  "ut_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/ut_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ut_income_tax_before_non_refundable_credits",
      "ut_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah income tax before refundable credits",
    "description": "Form TC-40, line 32"
  },
  "ut_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/ut_withheld_income_tax.py",
    "parameters": {
      "p_irs": "gov.irs.deductions.standard",
      "p": "gov.states.ut.tax.income",
      "amount": "gov.irs.deductions.standard.amount",
      "rate": "gov.states.ut.tax.income.rate"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah withheld income tax"
  },
  "ut_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/ut_income_tax_before_non_refundable_credits.py",
    "parameters": {},
    "variables": [
      "ut_income_tax_exempt",
      "ut_income_tax_before_credits",
      "ut_taxpayer_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah income tax before non-refundable credits"
  },
  "ut_state_tax_refund": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/taxable_income/ut_state_tax_refund.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "salt_refund_last_year"
    ],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah state tax refund",
    "description": "Form TC-40, line 7"
  },
  "ut_total_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/taxable_income/ut_total_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "ut_additions"
    ],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah total income",
    "description": "Form TC-40, line 6"
  },
  "ut_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/taxable_income/ut_taxable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ut_total_income"
    ],
    "subtracts": [
      "ut_subtractions",
      "ut_state_tax_refund"
    ],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah taxable income",
    "description": "Form TC-40, line 9"
  },
  "ut_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/taxable_income/ut_subtractions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah subtractions",
    "description": "Form TC-40, line 8"
  },
  "ut_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/taxable_income/ut_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah additions to income",
    "description": "Form TC-40, line 5"
  },
  "ut_at_home_parent_credit_earned_income_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/ut_at_home_parent_credit_earned_income_eligible_person.py",
    "parameters": {
      "p": "gov.states.ut.tax.income.credits.at_home_parent",
      "parent_max_earnings": "gov.states.ut.tax.income.credits.at_home_parent.parent_max_earnings"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Utah at-home parent credit income based on the earned income"
  },
  "ut_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/ut_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ut_eitc",
      "ut_retirement_credit",
      "ut_ss_benefits_credit",
      "ut_at_home_parent_credit",
      "ut_ctc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah non-refundable tax credits",
    "adds_from_parameter": "gov.states.ut.tax.income.credits.non_refundable"
  },
  "ut_at_home_parent_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/ut_at_home_parent_credit.py",
    "parameters": {
      "p": "gov.states.ut.tax.income.credits.at_home_parent",
      "max_child_age": "gov.states.ut.tax.income.credits.at_home_parent.max_child_age",
      "amount": "gov.states.ut.tax.income.credits.at_home_parent.amount"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent",
      "ut_at_home_parent_credit_earned_income_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ut_at_home_parent_credit_agi_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah at-home parent credit"
  },
  "ut_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/ut_eitc.py",
    "parameters": {
      "p": "gov.states.ut.tax.income.credits.earned_income",
      "rate": "gov.states.ut.tax.income.credits.earned_income.rate"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah Earned Income Tax Credit",
    "description": "This credit is a fraction of the federal EITC."
  },
  "ut_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/ut_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah refundable credits"
  },
  "ut_at_home_parent_credit_agi_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/ut_at_home_parent_credit_agi_eligible.py",
    "parameters": {
      "p": "gov.states.ut.tax.income.credits.at_home_parent",
      "max_agi": "gov.states.ut.tax.income.credits.at_home_parent.max_agi"
    },
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Utah at-home parent credit based on adjusted gross income"
  },
  "ut_ss_benefits_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/ss_benefits_credit/ut_ss_benefits_credit.py",
    "parameters": {},
    "variables": [
      "ut_claims_retirement_credit",
      "ut_ss_benefits_credit_max"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah Social Security Benefits Credit"
  },
  "ut_ss_benefits_credit_max": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/ss_benefits_credit/ut_ss_benefits_credit_max.py",
    "parameters": {
      "p": "gov.states.ut.tax.income",
      "rate": "gov.states.ut.tax.income.credits.ss_benefits.phase_out.rate",
      "threshold": "gov.states.ut.tax.income.credits.ss_benefits.phase_out.threshold",
      "phase_out": "gov.states.ut.tax.income.credits.ss_benefits.phase_out",
      "ss_benefits": "gov.states.ut.tax.income.credits.ss_benefits",
      "credits": "gov.states.ut.tax.income.credits"
    },
    "variables": [
      "ut_total_income",
      "tax_exempt_interest_income",
      "filing_status",
      "taxable_social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah Social Security Benefits Credit maximum amount"
  },
  "ut_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/child_tax_credit/ut_ctc.py",
    "parameters": {
      "p": "gov.states.ut.tax.income.credits.ctc",
      "start": "gov.states.ut.tax.income.credits.ctc.reduction.start",
      "rate": "gov.states.ut.tax.income.credits.ctc.reduction.rate",
      "calc": "gov.states.ut.tax.income.credits.ctc.child_age_threshold.calc",
      "amount": "gov.states.ut.tax.income.credits.ctc.amount",
      "child_age_threshold": "gov.states.ut.tax.income.credits.ctc.child_age_threshold",
      "reduction": "gov.states.ut.tax.income.credits.ctc.reduction"
    },
    "variables": [
      "filing_status",
      "age",
      "ctc_qualifying_child",
      "tax_exempt_interest_income",
      "ut_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah Child Tax Credit"
  },
  "ut_federal_deductions_for_taxpayer_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/taxpayer_credit/ut_federal_deductions_for_taxpayer_credit.py",
    "parameters": {
      "p": "gov.irs.deductions",
      "cap": "gov.irs.deductions.itemized.salt_and_real_estate.cap",
      "itemized_deductions": "gov.irs.deductions.itemized_deductions",
      "itemized": "gov.irs.deductions.itemized",
      "salt_and_real_estate": "gov.irs.deductions.itemized.salt_and_real_estate"
    },
    "variables": [
      "filing_status",
      "real_estate_taxes",
      "tax_unit_itemizes",
      "standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah federal deductions considered for taxpayer credit",
    "description": "These federal deductions are added to the Utah personal exemption to determine the Utah taxpayer credit."
  },
  "ut_taxpayer_credit_reduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/taxpayer_credit/ut_taxpayer_credit_reduction.py",
    "parameters": {
      "phase_out_rate": "gov.states.ut.tax.income.credits.taxpayer.phase_out.rate"
    },
    "variables": [
      "ut_taxpayer_credit_phase_out_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah taxpayer credit reduction",
    "description": "Form TC-40, line 19"
  },
  "ut_personal_exemption_additional_dependents": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/taxpayer_credit/ut_personal_exemption_additional_dependents.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ut_personal_exemption_additional_dependent_eligible"
    ],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah total additional dependents under the personal exemption"
  },
  "ut_taxpayer_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/taxpayer_credit/ut_taxpayer_credit.py",
    "parameters": {},
    "variables": [
      "ut_taxpayer_credit_max",
      "ut_taxpayer_credit_reduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah taxpayer credit",
    "description": "Form TC-40, line 20"
  },
  "ut_taxpayer_credit_max": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/taxpayer_credit/ut_taxpayer_credit_max.py",
    "parameters": {
      "rate": "gov.states.ut.tax.income.credits.taxpayer.rate"
    },
    "variables": [
      "ut_federal_deductions_for_taxpayer_credit",
      "ut_personal_exemption"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah initial taxpayer credit",
    "description": "Form TC-40, line (12 through) 16"
  },
  "ut_personal_exemption_additional_dependent_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/taxpayer_credit/ut_personal_exemption_additional_dependent_eligible.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_dependent",
      "birth_year"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah additional dependent personal exemption eligible"
  },
  "ut_taxpayer_credit_phase_out_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/taxpayer_credit/ut_taxpayer_credit_phase_out_income.py",
    "parameters": {
      "thresholds": "gov.states.ut.tax.income.credits.taxpayer.phase_out.threshold"
    },
    "variables": [
      "filing_status",
      "ut_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah taxpayer credit phase-out income",
    "description": "Income that reduces the Utah taxpayer credit. Form TC-40, line 18"
  },
  "ut_total_dependents": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/taxpayer_credit/ut_total_dependents.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_unit_count_dependents"
    ],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah total dependents",
    "description": "Form TC-40, line 2c"
  },
  "ut_personal_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/taxpayer_credit/ut_personal_exemption.py",
    "parameters": {
      "p": "gov.states.ut.tax.income.credits.taxpayer",
      "in_effect": "gov.states.ut.tax.income.credits.taxpayer.in_effect",
      "personal_exemption": "gov.states.ut.tax.income.credits.taxpayer.personal_exemption"
    },
    "variables": [
      "ut_personal_exemption_additional_dependents",
      "ut_total_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah personal exemption"
  },
  "ut_claims_retirement_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/retirement_credit/ut_claims_retirement_credit.py",
    "parameters": {},
    "variables": [
      "ut_ss_benefits_credit_max",
      "ut_retirement_credit_max"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "claims the Utah retirement credit",
    "description": "Utah residents can claim only one of the retirement credit or the social security benefits credit. We assume they claim the one with higher value."
  },
  "ut_retirement_credit_max": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/retirement_credit/ut_retirement_credit_max.py",
    "parameters": {
      "p": "gov.states.ut.tax.income",
      "retirement": "gov.states.ut.tax.income.credits.retirement",
      "credits": "gov.states.ut.tax.income.credits"
    },
    "variables": [
      "ut_total_income",
      "tax_exempt_interest_income",
      "age",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.UT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah retirement credit maximum amount"
  },
  "ut_retirement_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/ut/tax/income/credits/retirement_credit/ut_retirement_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ut_retirement_credit_max"
    ],
    "subtracts": [],
    "defined_for": "ut_claims_retirement_credit",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utah retirement credit"
  },
  "sc_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/sc_taxable_income.py",
    "parameters": {},
    "variables": [
      "sc_subtractions",
      "taxable_income",
      "sc_additions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina taxable income"
  },
  "sc_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/sc_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "sc_non_refundable_credits",
      "sc_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina income tax before refundable credits"
  },
  "sc_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/sc_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "p": "gov.states.sc.tax.income.rates",
      "calc": "gov.states.sc.tax.income.rates.calc"
    },
    "variables": [
      "sc_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina income tax before non-refundable credits",
    "bracket_parameters": {
      "p": "gov.states.sc.tax.income.rates"
    },
    "parameter_details": {
      "p": {
        "path": "gov.states.sc.tax.income.rates",
        "type": "bracket",
        "brackets": [
          {
            "threshold": 0,
            "amount": null
          },
          {
            "threshold": 3460,
            "amount": null
          },
          {
            "threshold": 17330,
            "amount": null
          },
          {
            "threshold": Infinity,
            "amount": null
          },
          {
            "threshold": Infinity,
            "amount": null
          },
          {
            "threshold": Infinity,
            "amount": null
          },
          {
            "threshold": Infinity,
            "amount": null
          }
        ],
        "description": "South Carolina taxes the income of individuals at this rate."
      }
    }
  },
  "sc_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/sc_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "sc_tuition_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina refundable credits",
    "adds_from_parameter": "gov.states.sc.tax.income.credits.refundable"
  },
  "sc_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/sc_withheld_income_tax.py",
    "parameters": {
      "p_irs": "gov.irs.deductions.standard",
      "p": "gov.states.sc.tax.income",
      "amount": "gov.irs.deductions.standard.amount",
      "calc": "gov.states.sc.tax.income.rates.calc",
      "rates": "gov.states.sc.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina withheld income tax"
  },
  "sc_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/sc_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "sc_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "sc_refundable_credits"
    ],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina income tax"
  },
  "sc_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/sc_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "sc_cdcc",
      "sc_eitc",
      "sc_two_wage_earner_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina non-refundable credits",
    "adds_from_parameter": "gov.states.sc.tax.income.credits.non_refundable"
  },
  "sc_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/subtractions/sc_subtractions.py",
    "parameters": {
      "p": "gov.states.sc.tax.income.subtractions",
      "subtractions": "gov.states.sc.tax.income.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina subtractions"
  },
  "sc_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/additions/sc_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "sc_state_tax_addback",
      "qualified_business_income_deduction"
    ],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina additions",
    "adds_from_parameter": "gov.states.sc.tax.income.additions.additions"
  },
  "sc_state_tax_addback": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/additions/sc_state_tax_addback.py",
    "parameters": {
      "p_us": "gov.irs.deductions",
      "cap": "gov.irs.deductions.itemized.salt_and_real_estate.cap",
      "salt_and_real_estate": "gov.irs.deductions.itemized.salt_and_real_estate",
      "itemized": "gov.irs.deductions.itemized"
    },
    "variables": [
      "filing_status",
      "standard_deduction",
      "itemized_taxable_income_deductions",
      "real_estate_taxes",
      "state_and_local_sales_or_income_tax",
      "tax_unit_itemizes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina State Tax addback"
  },
  "sc_young_child_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/deductions/sc_young_child_deduction.py",
    "parameters": {
      "p": "gov.states.sc.tax.income.deductions.young_child",
      "ineligible_age": "gov.states.sc.tax.income.deductions.young_child.ineligible_age",
      "amount": "gov.states.sc.tax.income.deductions.young_child.amount"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina young child deduction"
  },
  "sc_dependent_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/exemptions/sc_dependent_exemption.py",
    "parameters": {
      "p": "gov.states.sc.tax.income.deductions.young_child",
      "amount": "gov.states.sc.tax.income.deductions.young_child.amount"
    },
    "variables": [
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina dependent exemption"
  },
  "sc_tuition_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/credits/college_tuition/sc_tuition_credit_eligible.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the South Carolina Tuition Credit"
  },
  "sc_tuition_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/credits/college_tuition/sc_tuition_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "sc_tuition_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina Tuition Credit"
  },
  "sc_two_wage_earner_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/credits/two_wage_earner/sc_two_wage_earner_credit.py",
    "parameters": {
      "p": "gov.states.sc.tax.income.credits.two_wage_earner",
      "calc": "gov.states.sc.tax.income.credits.two_wage_earner.rate.calc",
      "rate": "gov.states.sc.tax.income.credits.two_wage_earner.rate"
    },
    "variables": [
      "is_tax_unit_head",
      "filing_status",
      "is_tax_unit_spouse",
      "sc_gross_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina two wage earner credit"
  },
  "sc_gross_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/credits/two_wage_earner/sc_gross_earned_income.py",
    "parameters": {
      "p": "gov.states.sc.tax.income.credits.two_wage_earner.earned_income",
      "subtractions": "gov.states.sc.tax.income.credits.two_wage_earner.earned_income.subtractions"
    },
    "variables": [
      "earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina gross earned income"
  },
  "sc_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/credits/cdcc/sc_cdcc.py",
    "parameters": {
      "p_sc": "gov.states.sc.tax.income.credits.cdcc",
      "p_us": "gov.irs.credits.cdcc",
      "sc_max_care_expense": "gov.irs.credits.cdcc.max",
      "eligibility": "gov.irs.credits.cdcc.eligibility",
      "max_care_expense_year_offset": "gov.states.sc.tax.income.credits.cdcc.max_care_expense_year_offset",
      "rate": "gov.states.sc.tax.income.credits.cdcc.rate",
      "max": "gov.irs.credits.cdcc.eligibility.max"
    },
    "variables": [
      "filing_status",
      "count_cdcc_eligible",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina CDCC",
    "description": "South Carolina Child and Dependent Care Credit"
  },
  "sc_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/credits/eitc/sc_eitc.py",
    "parameters": {
      "rate": "gov.states.sc.tax.income.credits.eitc.rate"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina EITC"
  },
  "sc_senior_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/exemptions/senior/sc_senior_exemption.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "sc_senior_exemption_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina senior exemption"
  },
  "sc_senior_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/exemptions/senior/sc_senior_exemption_person.py",
    "parameters": {
      "p": "gov.states.sc.tax.income.exemptions.senior",
      "age_threshold": "gov.states.sc.tax.income.exemptions.senior.age_threshold",
      "amount": "gov.states.sc.tax.income.exemptions.senior.amount"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "sc_retirement_deduction_indv",
      "age",
      "sc_military_deduction_indv"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina senior exemption for each person"
  },
  "sc_net_capital_gain_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/deductions/net_capital_gain/sc_net_capital_gain_deduction.py",
    "parameters": {
      "p": "gov.states.sc.tax.income.deductions.net_capital_gain",
      "rate": "gov.states.sc.tax.income.deductions.net_capital_gain.rate"
    },
    "variables": [
      "short_term_capital_gains",
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina net capital gain deduction"
  },
  "sc_retirement_cap": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/subtractions/retirement/sc_retirement_cap.py",
    "parameters": {
      "p": "gov.states.sc.tax.income.subtractions.retirement",
      "calc": "gov.states.sc.tax.income.subtractions.retirement.cap.calc",
      "cap": "gov.states.sc.tax.income.subtractions.retirement.cap"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina retirement income subtraction cap"
  },
  "sc_retirement_deduction_indv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/subtractions/retirement/sc_retirement_deduction_indv.py",
    "parameters": {
      "p": "gov.states.sc.tax.income.subtractions.retirement",
      "calc": "gov.states.sc.tax.income.subtractions.retirement.cap.calc",
      "cap": "gov.states.sc.tax.income.subtractions.retirement.cap"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "taxable_pension_income",
      "military_retirement_pay",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina retirement deduction for eligible individuals"
  },
  "sc_retirement_deduction_survivors": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/subtractions/retirement/sc_retirement_deduction_survivors.py",
    "parameters": {
      "p": "gov.states.sc.tax.income.subtractions.retirement",
      "calc": "gov.states.sc.tax.income.subtractions.retirement.cap.calc",
      "subtract_military": "gov.states.sc.tax.income.subtractions.retirement.subtract_military",
      "cap": "gov.states.sc.tax.income.subtractions.retirement.cap"
    },
    "variables": [
      "pension_survivors",
      "age",
      "military_retirement_pay_survivors"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina retirement deduction for survivors"
  },
  "sc_retirement_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/subtractions/retirement/sc_retirement_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "sc_retirement_deduction_indv",
      "sc_retirement_deduction_survivors"
    ],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina retirement deduction"
  },
  "sc_military_deduction_indv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/subtractions/military_retirement/sc_military_deduction_indv.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "military_retirement_pay"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina military deduction for eligible individuals"
  },
  "sc_military_deduction_survivors": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/subtractions/military_retirement/sc_military_deduction_survivors.py",
    "parameters": {},
    "variables": [
      "military_retirement_pay_survivors"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina military retirement deduction for survivors"
  },
  "sc_military_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/sc/tax/income/subtractions/military_retirement/sc_military_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "sc_military_deduction_indv",
      "sc_military_deduction_survivors"
    ],
    "subtracts": [],
    "defined_for": "StateCode.SC",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "South Carolina military retirement deduction"
  },
  "va_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "va_additions"
    ],
    "subtracts": [
      "va_subtractions"
    ],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia adjusted federal adjusted gross income"
  },
  "va_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_subtractions.py",
    "parameters": {
      "p": "gov.states.va.tax.income.subtractions",
      "subtractions": "gov.states.va.tax.income.subtractions.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia subtractions from the adjusted gross income"
  },
  "va_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_taxable_income.py",
    "parameters": {},
    "variables": [
      "va_agi",
      "va_total_exemptions",
      "va_child_dependent_care_expense_deduction",
      "va_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia taxable income"
  },
  "va_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.va.tax.income",
      "standard": "gov.states.va.tax.income.deductions.standard",
      "calc": "gov.states.va.tax.income.rates.calc",
      "deductions": "gov.states.va.tax.income.deductions",
      "rates": "gov.states.va.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia withheld income tax"
  },
  "va_must_file": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_must_file.py",
    "parameters": {
      "p": "gov.states.va.tax.income",
      "filing_requirement": "gov.states.va.tax.income.filing_requirement"
    },
    "variables": [
      "va_agi",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit must file Virginia income taxes"
  },
  "va_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "va_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "va_refundable_credits"
    ],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia income tax"
  },
  "va_agi_share": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_agi_share.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "va_agi_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia share of state adjusted gross income of each person"
  },
  "va_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "va_non_refundable_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia non-refundable income tax credits",
    "adds_from_parameter": "gov.states.va.tax.income.credits.non_refundable"
  },
  "va_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_income_tax_before_non_refundable_credits.py",
    "parameters": {
      "p": "gov.states.va.tax.income.rates",
      "calc": "gov.states.va.tax.income.rates.calc"
    },
    "variables": [
      "va_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "va_must_file",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia income tax before non-refundable credits",
    "bracket_parameters": {
      "p": "gov.states.va.tax.income.rates"
    },
    "parameter_details": {
      "p": {
        "path": "gov.states.va.tax.income.rates",
        "type": "bracket",
        "brackets": [
          {
            "threshold": 0,
            "amount": null
          },
          {
            "threshold": 3000,
            "amount": null
          },
          {
            "threshold": 5000,
            "amount": null
          },
          {
            "threshold": 17000,
            "amount": null
          }
        ],
        "description": "Virginia taxes personal taxable income at these rates."
      }
    }
  },
  "va_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "va_spouse_tax_adjustment",
      "va_income_tax_before_non_refundable_credits",
      "va_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia income tax before credits"
  },
  "va_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_rebate.py",
    "parameters": {
      "p": "gov.states.va.tax.income.rebate",
      "amount": "gov.states.va.tax.income.rebate.amount"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia rebate"
  },
  "va_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "va_refundable_eitc"
    ],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia refundable income tax credits",
    "adds_from_parameter": "gov.states.va.tax.income.credits.refundable"
  },
  "va_agi_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/va_agi_person.py",
    "parameters": {},
    "variables": [
      "va_agi",
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia adjusted gross income for each person"
  },
  "va_federal_state_employees_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/subtractions/va_federal_state_employees_subtraction.py",
    "parameters": {
      "p": "gov.states.va.tax.income.subtractions.disability_income",
      "amount": "gov.states.va.tax.income.subtractions.disability_income.amount"
    },
    "variables": [
      "state_or_federal_salary",
      "is_tax_unit_head",
      "is_tax_unit_spouse",
      "irs_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia federal state employees subtraction"
  },
  "va_military_benefit_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/subtractions/va_military_benefit_subtraction.py",
    "parameters": {
      "p": "gov.states.va.tax.income.subtractions.military_benefit",
      "availability": "gov.states.va.tax.income.subtractions.military_benefit.availability",
      "amount": "gov.states.va.tax.income.subtractions.military_benefit.amount",
      "age_threshold": "gov.states.va.tax.income.subtractions.military_benefit.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "military_retirement_pay",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia military benefit subtraction"
  },
  "va_disability_income_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/subtractions/va_disability_income_subtraction.py",
    "parameters": {
      "p": "gov.states.va.tax.income.subtractions.disability_income",
      "amount": "gov.states.va.tax.income.subtractions.disability_income.amount"
    },
    "variables": [
      "is_tax_unit_head",
      "is_tax_unit_spouse",
      "disability_benefits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia disability income subtraction"
  },
  "va_national_guard_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/subtractions/va_national_guard_subtraction.py",
    "parameters": {
      "p": "gov.states.va.tax.income.subtractions.national_guard_pay",
      "cap": "gov.states.va.tax.income.subtractions.national_guard_pay.cap"
    },
    "variables": [
      "military_service_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia national guard pay subtraction"
  },
  "va_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/additions/va_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia additions to federal adjusted gross income"
  },
  "va_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/deductions/va_deductions.py",
    "parameters": {},
    "variables": [
      "va_standard_deduction",
      "tax_unit_itemizes",
      "va_itemized_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia deductions"
  },
  "va_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/deductions/va_standard_deduction.py",
    "parameters": {
      "p": "gov.states.va.tax.income.deductions",
      "standard": "gov.states.va.tax.income.deductions.standard"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia standard deduction"
  },
  "va_capped_state_and_local_sales_or_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/deductions/va_capped_state_and_local_sales_or_income_tax.py",
    "parameters": {
      "p_salt": "gov.irs.deductions.itemized.salt_and_real_estate",
      "cap": "gov.irs.deductions.itemized.salt_and_real_estate.cap"
    },
    "variables": [
      "state_and_local_sales_or_income_tax",
      "filing_status",
      "real_estate_taxes"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped state and local sales or income tax for Virginia itemized deductions purposes"
  },
  "va_reduced_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/deductions/va_reduced_itemized_deductions.py",
    "parameters": {
      "p_va": "gov.states.va.tax.income.deductions.itemized",
      "applicable_amount": "gov.states.va.tax.income.deductions.itemized.applicable_amount",
      "reduction": "gov.states.va.tax.income.deductions.itemized.reduction",
      "applicable": "gov.states.va.tax.income.deductions.itemized.reduction.applicable",
      "reducible": "gov.states.va.tax.income.deductions.itemized.reduction.reducible"
    },
    "variables": [
      "va_capped_state_and_local_sales_or_income_tax",
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia reduced itemized deductions"
  },
  "va_itemized_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/deductions/va_itemized_deductions.py",
    "parameters": {
      "p_va": "gov.states.va.tax.income.deductions.itemized",
      "applicable_amount": "gov.states.va.tax.income.deductions.itemized.applicable_amount"
    },
    "variables": [
      "filing_status",
      "real_estate_taxes",
      "adjusted_gross_income",
      "itemized_deductions_less_salt",
      "state_and_local_sales_or_income_tax",
      "va_reduced_itemized_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia itemized deductions"
  },
  "va_aged_blind_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/exemptions/va_aged_blind_exemption_person.py",
    "parameters": {
      "p": "gov.states.va.tax.income.exemptions",
      "aged_blind": "gov.states.va.tax.income.exemptions.aged_blind"
    },
    "variables": [
      "is_blind",
      "is_irs_aged"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia aged/blind exemption for each person"
  },
  "va_personal_exemption_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/exemptions/va_personal_exemption_person.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia personal exemption for each person"
  },
  "va_personal_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/exemptions/va_personal_exemption.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "va_personal_exemption_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia personal exemption"
  },
  "va_total_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/exemptions/va_total_exemptions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "va_personal_exemption",
      "va_aged_blind_exemption"
    ],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia exemptions"
  },
  "va_aged_blind_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/exemptions/va_aged_blind_exemption.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "va_aged_blind_exemption_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia aged/blind exemption"
  },
  "va_spouse_tax_adjustment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/spouse_tax_adjustment/va_spouse_tax_adjustment.py",
    "parameters": {
      "p": "gov.states.va.tax.income.exemptions.spouse_tax_adjustment",
      "p1": "gov.states.va.tax.income",
      "divisor": "gov.states.va.tax.income.exemptions.spouse_tax_adjustment.divisor",
      "cap": "gov.states.va.tax.income.exemptions.spouse_tax_adjustment.cap",
      "calc": "gov.states.va.tax.income.rates.calc",
      "rates": "gov.states.va.tax.income.rates"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "va_income_tax_before_non_refundable_credits",
      "va_agi_less_exemptions_person",
      "va_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "va_spouse_tax_adjustment_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia Spouse Tax Adjustment"
  },
  "va_spouse_tax_adjustment_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/spouse_tax_adjustment/va_spouse_tax_adjustment_eligible.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "tax_unit_is_joint",
      "va_agi_less_exemptions_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Virginia's spouse tax adjustment"
  },
  "va_agi_less_exemptions_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/spouse_tax_adjustment/va_agi_less_exemptions_person.py",
    "parameters": {},
    "variables": [
      "va_aged_blind_exemption_person",
      "va_personal_exemption_person",
      "va_agi_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Difference between individual VAGI and personal exemption amounts"
  },
  "va_low_income_tax_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/credits/low_income_credit/va_low_income_tax_credit_eligible.py",
    "parameters": {
      "p": "gov.states.va.tax.income.credits.eitc.low_income_tax",
      "ineligible_programs": "gov.states.va.tax.income.credits.eitc.low_income_tax.ineligible_programs"
    },
    "variables": [
      "head_is_dependent_elsewhere"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Virginia Low Income Tax Credit"
  },
  "va_low_income_tax_credit_agi_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/credits/low_income_credit/va_low_income_tax_credit_agi_eligible.py",
    "parameters": {},
    "variables": [
      "va_agi",
      "tax_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "va_low_income_tax_credit_eligible",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Virginia low income tax credit"
  },
  "va_low_income_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/credits/low_income_credit/va_low_income_tax_credit.py",
    "parameters": {
      "p": "gov.states.va.tax.income.credits.eitc.low_income_tax",
      "base": "gov.states.va.tax.income.credits.eitc.low_income_tax.base"
    },
    "variables": [
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "va_low_income_tax_credit_agi_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia low income tax credit"
  },
  "va_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/credits/eitc/va_refundable_eitc.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "va_refundable_eitc_if_claimed"
    ],
    "subtracts": [],
    "defined_for": "va_claims_refundable_eitc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia refundable earned income tax credit",
    "description": "Refundable EITC credit reducing Virginia State income tax"
  },
  "va_non_refundable_eitc_if_claimed": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/credits/eitc/va_non_refundable_eitc_if_claimed.py",
    "parameters": {
      "p": "gov.states.va.tax.income.credits.eitc.match",
      "non_refundable": "gov.states.va.tax.income.credits.eitc.match.non_refundable"
    },
    "variables": [
      "va_low_income_tax_credit",
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia non-refundable EITC if claimed"
  },
  "va_eitc_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/credits/eitc/va_eitc_person.py",
    "parameters": {},
    "variables": [
      "va_non_refundable_eitc",
      "va_claims_refundable_eitc",
      "va_refundable_eitc",
      "va_agi_share"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia Earned Income Tax Credit per individual when married filing seperately"
  },
  "va_refundable_eitc_if_claimed": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/credits/eitc/va_refundable_eitc_if_claimed.py",
    "parameters": {
      "p": "gov.states.va.tax.income.credits.eitc.match",
      "refundable": "gov.states.va.tax.income.credits.eitc.match.refundable"
    },
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia refundable earned income tax credit if claimed"
  },
  "va_non_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/credits/eitc/va_non_refundable_eitc.py",
    "parameters": {},
    "variables": [
      "va_claims_refundable_eitc",
      "va_non_refundable_eitc_if_claimed"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia non-refundable EITC"
  },
  "va_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/credits/eitc/va_eitc.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "va_refundable_eitc",
      "va_claims_refundable_eitc",
      "va_eitc_person",
      "va_non_refundable_eitc",
      "is_tax_unit_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia Earned Income Tax Credit",
    "description": "Refundable or non-refundable Virginia EITC"
  },
  "va_income_tax_if_claiming_non_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/credits/eitc/refundability_calculation/va_income_tax_if_claiming_non_refundable_eitc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia tax liability if claiming non-refundable Virginia EITC"
  },
  "va_claims_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/credits/eitc/refundability_calculation/va_claims_refundable_eitc.py",
    "parameters": {},
    "variables": [
      "va_income_tax_if_claiming_non_refundable_eitc",
      "va_income_tax_if_claiming_refundable_eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Filer claims refundable Virginia EITC",
    "description": "Whether the filer claims the refundable over the non-refundable Virginia Earned Income Tax Credit."
  },
  "va_income_tax_if_claiming_refundable_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/credits/eitc/refundability_calculation/va_income_tax_if_claiming_refundable_eitc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia tax liability if claiming refundable Virginia EITC"
  },
  "va_child_dependent_care_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/deductions/cdcc_expense/va_child_dependent_care_expense_deduction.py",
    "parameters": {},
    "variables": [
      "min_head_spouse_earned",
      "va_child_dependent_care_deduction_cdcc_limit",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia child and dependent care expense deduction"
  },
  "va_child_dependent_care_deduction_cdcc_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/deductions/cdcc_expense/va_child_dependent_care_deduction_cdcc_limit.py",
    "parameters": {
      "p": "gov.irs.credits.cdcc",
      "max": "gov.irs.credits.cdcc.max"
    },
    "variables": [
      "capped_count_cdcc_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal CDCC-relevant care expense limit for Virginia tax purposes"
  },
  "va_age_deduction_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/subtractions/age_deduction/va_age_deduction_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income"
    ],
    "subtracts": [
      "tax_unit_taxable_social_security"
    ],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia adjusted gross income for the age deduction"
  },
  "va_age_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/subtractions/age_deduction/va_age_deduction.py",
    "parameters": {
      "p": "gov.states.va.tax.income.subtractions.age_deduction",
      "age_minimum": "gov.states.va.tax.income.subtractions.age_deduction.age_minimum",
      "birth_year_limit_for_full_amount": "gov.states.va.tax.income.subtractions.age_deduction.birth_year_limit_for_full_amount",
      "amount": "gov.states.va.tax.income.subtractions.age_deduction.amount",
      "threshold": "gov.states.va.tax.income.subtractions.age_deduction.threshold"
    },
    "variables": [
      "age_head",
      "filing_status",
      "va_age_deduction_agi",
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia age deduction"
  },
  "va_military_basic_pay_subtraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/va/tax/income/subtractions/va_military_basic_pay/va_military_basic_pay_subtraction.py",
    "parameters": {
      "p": "gov.states.va.tax.income.subtractions.military_basic_pay",
      "threshold": "gov.states.va.tax.income.subtractions.military_basic_pay.threshold"
    },
    "variables": [
      "military_basic_pay",
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Virginia military basic pay subtraction"
  },
  "vt_child_care_contributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/vt_child_care_contributions.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.child_care_contributions",
      "applies": "gov.states.vt.tax.income.child_care_contributions.applies",
      "rate": "gov.states.vt.tax.income.child_care_contributions.rate",
      "income": "gov.states.vt.tax.income.child_care_contributions.rate.income",
      "contributions": "gov.states.vt.tax.income.child_care_contributions.rate.contributions"
    },
    "variables": [
      "self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont child care contributions"
  },
  "vt_income_tax_before_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/vt_income_tax_before_non_refundable_credits.py",
    "parameters": {},
    "variables": [
      "vt_amt",
      "vt_normal_income_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont income tax before non-refundable credits"
  },
  "vt_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/vt_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "vt_income_tax_before_refundable_credits",
      "vt_child_care_contributions"
    ],
    "subtracts": [
      "vt_refundable_credits"
    ],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont income tax"
  },
  "vt_amt": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/vt_amt.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.rates",
      "calc": "gov.states.vt.tax.income.rates.amt.calc",
      "amt": "gov.states.vt.tax.income.rates.amt"
    },
    "variables": [
      "us_govt_interest",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont alternative minimum tax (AMT)"
  },
  "vt_normal_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/vt_normal_income_tax.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.rates",
      "calc": "gov.states.vt.tax.income.rates.head_of_household.calc",
      "rates": "gov.states.vt.tax.income.rates"
    },
    "variables": [
      "filing_status",
      "vt_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont normal income tax before non-refundable credits"
  },
  "vt_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/vt_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont non-refundable tax credits"
  },
  "vt_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/vt_taxable_income.py",
    "parameters": {},
    "variables": [
      "vt_personal_exemptions",
      "vt_agi",
      "vt_standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont taxable income",
    "description": "VT AGI less taxable income deductions and exemptions"
  },
  "vt_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/vt_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "vt_eitc",
      "vt_cdcc",
      "vt_ctc",
      "vt_veteran_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont refundable credits",
    "adds_from_parameter": "gov.states.vt.tax.income.credits.refundable"
  },
  "vt_withheld_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/vt_withheld_income_tax.py",
    "parameters": {
      "p": "gov.states.vt.tax.income",
      "base": "gov.states.vt.tax.income.deductions.standard.base",
      "calc": "gov.states.vt.tax.income.rates.single.calc",
      "standard": "gov.states.vt.tax.income.deductions.standard",
      "single": "gov.states.vt.tax.income.rates.single",
      "deductions": "gov.states.vt.tax.income.deductions",
      "rates": "gov.states.vt.tax.income.rates"
    },
    "variables": [
      "adjusted_gross_income_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont withheld income tax"
  },
  "vt_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/vt_eitc.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.credits.eitc",
      "in_effect": "gov.states.vt.tax.income.credits.eitc.enhanced_structure.in_effect",
      "rate": "gov.states.vt.tax.income.credits.eitc.enhanced_structure.rate",
      "match": "gov.states.vt.tax.income.credits.eitc.match",
      "enhanced_structure": "gov.states.vt.tax.income.credits.eitc.enhanced_structure",
      "calc": "gov.states.vt.tax.income.credits.eitc.enhanced_structure.rate.calc"
    },
    "variables": [
      "tax_unit_child_dependents",
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont earned income tax credit"
  },
  "vt_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/vt_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "vt_non_refundable_credits",
      "vt_income_tax_before_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont income tax before refundable credits"
  },
  "vt_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/deductions/vt_standard_deduction.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.deductions.standard",
      "base": "gov.states.vt.tax.income.deductions.standard.base",
      "additional": "gov.states.vt.tax.income.deductions.standard.additional"
    },
    "variables": [
      "filing_status",
      "aged_blind_count"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont standard deduction"
  },
  "vt_personal_exemptions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/exemptions/vt_personal_exemptions.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.exemption",
      "personal": "gov.states.vt.tax.income.exemption.personal"
    },
    "variables": [
      "tax_unit_count_dependents",
      "head_is_dependent_elsewhere",
      "tax_unit_is_joint",
      "spouse_is_dependent_elsewhere"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont personal exemptions"
  },
  "vt_veteran_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/credits/vt_veteran_tax_credit.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.credits.veteran",
      "veteran": "gov.states.vt.tax.income.credits.veteran"
    },
    "variables": [
      "adjusted_gross_income",
      "is_veteran"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont veteran tax credit",
    "description": "Vermont veteran tax credit providing $250 refundable credit for low-income veterans as part of S.51 (2025) tax relief package."
  },
  "vt_elderly_or_disabled_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/credits/vt_elderly_or_disabled_credit.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.credits",
      "elderly_or_disabled": "gov.states.vt.tax.income.credits.elderly_or_disabled"
    },
    "variables": [
      "elderly_disabled_credit"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont elderly or disabled credit",
    "description": "Schedule R credit for the elderly and the disabled"
  },
  "vt_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/adjusted_gross_income/vt_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "vt_additions"
    ],
    "subtracts": [
      "vt_subtractions"
    ],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont adjusted gross income"
  },
  "vt_additions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/adjusted_gross_income/vt_additions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_exempt_interest_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont AGI additions",
    "description": "Additions to Vermont adjusted gross income"
  },
  "vt_subtractions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/adjusted_gross_income/subtractions/vt_subtractions.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.agi",
      "subtractions": "gov.states.vt.tax.income.agi.subtractions"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont subtractions",
    "description": "Subtractions from Vermont adjusted gross income"
  },
  "vt_medical_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/adjusted_gross_income/subtractions/vt_medical_expense_deduction.py",
    "parameters": {},
    "variables": [
      "vt_personal_exemptions",
      "medical_expense_deduction",
      "vt_standard_deduction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont medical expense deduction",
    "description": "Vermont medical expenses deducted from taxable income."
  },
  "vt_capital_gains_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/adjusted_gross_income/subtractions/vt_capital_gain_exclusion/vt_capital_gains_exclusion.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.agi.exclusions.capital_gain",
      "cap": "gov.states.vt.tax.income.agi.exclusions.capital_gain.flat.cap",
      "income_share_cap": "gov.states.vt.tax.income.agi.exclusions.capital_gain.income_share_cap",
      "flat": "gov.states.vt.tax.income.agi.exclusions.capital_gain.flat"
    },
    "variables": [
      "qualified_dividend_income",
      "adjusted_net_capital_gain",
      "vt_percentage_capital_gains_exclusion",
      "taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont capital gains exclusion",
    "description": "Vermont excludes a portion of capital gains, calculated either as a flat amount or as a fraction of adjusted net capital gains, and limited by a fraction of federal taxable income."
  },
  "vt_percentage_capital_gains_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/adjusted_gross_income/subtractions/vt_capital_gain_exclusion/vt_percentage_capital_gains_exclusion.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.agi.exclusions.capital_gain",
      "rate": "gov.states.vt.tax.income.agi.exclusions.capital_gain.percentage.rate",
      "cap": "gov.states.vt.tax.income.agi.exclusions.capital_gain.percentage.cap",
      "percentage": "gov.states.vt.tax.income.agi.exclusions.capital_gain.percentage"
    },
    "variables": [
      "qualified_dividend_income",
      "adjusted_net_capital_gain"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont percentage capital gains exclusion",
    "description": "This can be selected to be subtracted from federal adjusted gross income in Vermont as percentage capital gains exclusion."
  },
  "vt_csrs_retirement_pay_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/adjusted_gross_income/subtractions/retirement_income_exemption/vt_csrs_retirement_pay_exclusion.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.agi.retirement_income_exemption.csrs",
      "amount": "gov.states.vt.tax.income.agi.retirement_income_exemption.csrs.amount"
    },
    "variables": [
      "csrs_retirement_pay"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont Civil Service Retirement System (CSRS) retirement income exclusion",
    "description": "Vermont Civil Service Retirement System (CSRS) retirement benefits exempt from Vermont taxation."
  },
  "vt_military_retirement_cap_based_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/adjusted_gross_income/subtractions/retirement_income_exemption/vt_military_retirement_cap_based_exemption.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.agi.retirement_income_exemption.military_retirement",
      "amount": "gov.states.vt.tax.income.agi.retirement_income_exemption.military_retirement.amount"
    },
    "variables": [
      "military_retirement_pay"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont military retirement cap-based exemption",
    "description": "Vermont military retirement benefits exempt from Vermont taxation up to cap amount (pre-2025)."
  },
  "vt_military_retirement_pay_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/adjusted_gross_income/subtractions/retirement_income_exemption/vt_military_retirement_pay_exclusion.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.agi.retirement_income_exemption",
      "in_effect": "gov.states.vt.tax.income.agi.retirement_income_exemption.military_retirement.income_based_structure.in_effect",
      "income_based_structure": "gov.states.vt.tax.income.agi.retirement_income_exemption.military_retirement.income_based_structure",
      "military_retirement": "gov.states.vt.tax.income.agi.retirement_income_exemption.military_retirement"
    },
    "variables": [
      "military_retirement_pay",
      "vt_military_retirement_income_based_exemption",
      "adjusted_gross_income",
      "vt_military_retirement_cap_based_exemption"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont military retirement income exclusion",
    "description": "Vermont military retirement benefits exempt from Vermont taxation."
  },
  "vt_retirement_income_exemption_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/adjusted_gross_income/subtractions/retirement_income_exemption/vt_retirement_income_exemption_eligible.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.agi.retirement_income_exemption.csrs.reduction",
      "end": "gov.states.vt.tax.income.agi.retirement_income_exemption.csrs.reduction.end"
    },
    "variables": [
      "tax_unit_taxable_social_security",
      "filing_status",
      "military_retirement_pay",
      "csrs_retirement_pay",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont retirement income exemption eligibility status",
    "description": "Vermont filers use below criteria to check whether the tax unit is eligible for vermont retirement income exemption."
  },
  "vt_military_retirement_income_based_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/adjusted_gross_income/subtractions/retirement_income_exemption/vt_military_retirement_income_based_exemption.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.agi.retirement_income_exemption.military_retirement",
      "partial_exemption_threshold": "gov.states.vt.tax.income.agi.retirement_income_exemption.military_retirement.partial_exemption_threshold",
      "full_exemption_threshold": "gov.states.vt.tax.income.agi.retirement_income_exemption.military_retirement.full_exemption_threshold"
    },
    "variables": [
      "military_retirement_pay",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont military retirement income-based exemption",
    "description": "Vermont military retirement benefits exempt from Vermont taxation based on AGI thresholds (2025+)."
  },
  "vt_retirement_income_exemption": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/adjusted_gross_income/subtractions/retirement_income_exemption/vt_retirement_income_exemption.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.agi.retirement_income_exemption",
      "start": "gov.states.vt.tax.income.agi.retirement_income_exemption.csrs.reduction.start",
      "end": "gov.states.vt.tax.income.agi.retirement_income_exemption.csrs.reduction.end",
      "divisor": "gov.states.vt.tax.income.agi.retirement_income_exemption.divisor",
      "social_security": "gov.states.vt.tax.income.agi.retirement_income_exemption.social_security",
      "csrs": "gov.states.vt.tax.income.agi.retirement_income_exemption.csrs",
      "reduction": "gov.states.vt.tax.income.agi.retirement_income_exemption.csrs.reduction"
    },
    "variables": [
      "tax_unit_taxable_social_security",
      "filing_status",
      "adjusted_gross_income",
      "vt_csrs_retirement_pay_exclusion",
      "vt_military_retirement_pay_exclusion"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "vt_retirement_income_exemption_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont retirement income exemption",
    "description": "Vermont retirement benefits exempt from Vermont taxation."
  },
  "vt_renter_credit_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/credits/renter/vt_renter_credit_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income",
      "vt_renter_credit_countable_tax_exempt_ss",
      "tax_exempt_interest_income"
    ],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont renter credit income"
  },
  "vt_renter_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/credits/renter/vt_renter_credit.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.credits.renter",
      "thirty_percent": "gov.states.vt.tax.income.credits.renter.income_limit_ami.thirty_percent",
      "fifty_percent": "gov.states.vt.tax.income.credits.renter.income_limit_ami.fifty_percent",
      "fair_market_rent": "gov.states.vt.tax.income.credits.renter.fair_market_rent",
      "fmr_rate": "gov.states.vt.tax.income.credits.renter.fmr_rate",
      "shared_residence_reduction": "gov.states.vt.tax.income.credits.renter.shared_residence_reduction",
      "income_limit_ami": "gov.states.vt.tax.income.credits.renter.income_limit_ami"
    },
    "variables": [
      "rent",
      "rent_is_shared_with_another_tax_unit",
      "housing_assistance",
      "tax_unit_size",
      "vt_renter_credit_income",
      "county"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont renter credit"
  },
  "vt_renter_credit_countable_tax_exempt_ss": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/credits/renter/vt_renter_credit_countable_tax_exempt_ss.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.credits.renter",
      "countable_tax_exempt_ss_fraction": "gov.states.vt.tax.income.credits.renter.countable_tax_exempt_ss_fraction"
    },
    "variables": [
      "tax_exempt_social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont renter credit countable tax exempt social security"
  },
  "vt_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/credits/ctc/vt_ctc.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.credits.ctc",
      "age_limit": "gov.states.vt.tax.income.credits.ctc.age_limit",
      "reduction": "gov.states.vt.tax.income.credits.ctc.reduction",
      "amount": "gov.states.vt.tax.income.credits.ctc.reduction.amount",
      "start": "gov.states.vt.tax.income.credits.ctc.reduction.start",
      "increment": "gov.states.vt.tax.income.credits.ctc.reduction.increment"
    },
    "variables": [
      "age",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont child tax credit"
  },
  "vt_low_income_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/credits/cdcc/vt_low_income_cdcc.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.credits.cdcc.low_income",
      "rate": "gov.states.vt.tax.income.credits.cdcc.low_income.rate"
    },
    "variables": [
      "capped_cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "vt_low_income_cdcc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont low-income child care and dependent care credit"
  },
  "vt_low_income_cdcc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/credits/cdcc/vt_low_income_cdcc_eligible.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.credits.cdcc.low_income",
      "income_threshold": "gov.states.vt.tax.income.credits.cdcc.low_income.income_threshold"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Vermont low-income child care and dependent care credit"
  },
  "vt_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/states/vt/tax/income/credits/cdcc/vt_cdcc.py",
    "parameters": {
      "p": "gov.states.vt.tax.income.credits.cdcc",
      "rate": "gov.states.vt.tax.income.credits.cdcc.rate"
    },
    "variables": [
      "capped_cdcc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.VT",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Vermont child care and dependent care credit"
  },
  "high_efficiency_electric_home_rebate_percent_covered": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/doe/high_efficiency_electric_home_rebate/high_efficiency_electric_home_rebate_percent_covered.py",
    "parameters": {
      "p": "gov.doe.high_efficiency_electric_home_rebate",
      "calc": "gov.doe.high_efficiency_electric_home_rebate.percent_covered.calc",
      "percent_covered": "gov.doe.high_efficiency_electric_home_rebate.percent_covered"
    },
    "variables": [
      "tax_unit_income_ami_ratio"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Percent of expenditures covered by high electricity home rebate"
  },
  "capped_insulation_air_sealing_ventilation_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/doe/high_efficiency_electric_home_rebate/capped_insulation_air_sealing_ventilation_rebate.py",
    "parameters": {
      "cap": "gov.doe.high_efficiency_electric_home_rebate.cap.insulation_air_sealing_ventilation"
    },
    "variables": [
      "air_sealing_ventilation_expenditures",
      "high_efficiency_electric_home_rebate_percent_covered",
      "energy_efficient_insulation_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped insulation air sealing and ventilation rebate",
    "description": "Before total high efficiency electric home rebate cap"
  },
  "capped_electric_heat_pump_clothes_dryer_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/doe/high_efficiency_electric_home_rebate/capped_electric_heat_pump_clothes_dryer_rebate.py",
    "parameters": {
      "cap": "gov.doe.high_efficiency_electric_home_rebate.cap.electric_heat_pump_clothes_dryer"
    },
    "variables": [
      "high_efficiency_electric_home_rebate_percent_covered",
      "electric_heat_pump_clothes_dryer_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped electric heat pump clothes dryer rebate",
    "description": "Before total high efficiency electric home rebate cap"
  },
  "capped_electric_stove_cooktop_range_or_oven_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/doe/high_efficiency_electric_home_rebate/capped_electric_stove_cooktop_range_or_oven_rebate.py",
    "parameters": {
      "cap": "gov.doe.high_efficiency_electric_home_rebate.cap.electric_stove_cooktop_range_or_oven"
    },
    "variables": [
      "high_efficiency_electric_home_rebate_percent_covered",
      "electric_stove_cooktop_range_or_oven_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped electric stove cooktop range or oven rebate",
    "description": "Before total high efficiency electric home rebate cap"
  },
  "capped_electric_load_service_center_upgrade_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/doe/high_efficiency_electric_home_rebate/capped_electric_load_service_center_upgrade_rebate.py",
    "parameters": {
      "cap": "gov.doe.high_efficiency_electric_home_rebate.cap.electric_load_service_center_upgrade"
    },
    "variables": [
      "high_efficiency_electric_home_rebate_percent_covered",
      "electric_load_service_center_upgrade_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped electric load service center upgrade rebate",
    "description": "Before total high efficiency electric home rebate cap"
  },
  "high_efficiency_electric_home_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/doe/high_efficiency_electric_home_rebate/high_efficiency_electric_home_rebate.py",
    "parameters": {
      "p": "gov.doe.high_efficiency_electric_home_rebate",
      "elements": "gov.doe.high_efficiency_electric_home_rebate.elements",
      "cap": "gov.doe.high_efficiency_electric_home_rebate.cap",
      "total": "gov.doe.high_efficiency_electric_home_rebate.cap.total"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "High efficiency electric home rebate"
  },
  "capped_heat_pump_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/doe/high_efficiency_electric_home_rebate/capped_heat_pump_rebate.py",
    "parameters": {
      "cap": "gov.doe.high_efficiency_electric_home_rebate.cap.heat_pump"
    },
    "variables": [
      "high_efficiency_electric_home_rebate_percent_covered",
      "heat_pump_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped heat pump rebate",
    "description": "Before total high efficiency electric home rebate cap"
  },
  "capped_electric_wiring_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/doe/high_efficiency_electric_home_rebate/capped_electric_wiring_rebate.py",
    "parameters": {
      "cap": "gov.doe.high_efficiency_electric_home_rebate.cap.electric_wiring"
    },
    "variables": [
      "electric_wiring_expenditures",
      "high_efficiency_electric_home_rebate_percent_covered"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped electric wiring rebate",
    "description": "Before total high efficiency electric home rebate cap"
  },
  "capped_heat_pump_water_heater_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/doe/high_efficiency_electric_home_rebate/capped_heat_pump_water_heater_rebate.py",
    "parameters": {
      "cap": "gov.doe.high_efficiency_electric_home_rebate.cap.heat_pump_water_heater"
    },
    "variables": [
      "high_efficiency_electric_home_rebate_percent_covered",
      "heat_pump_water_heater_expenditures"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capped heat pump water heater rebate",
    "description": "Before total high efficiency electric home rebate cap"
  },
  "residential_efficiency_electrification_rebate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/doe/residential_efficiency_electrification_rebate/residential_efficiency_electrification_rebate.py",
    "parameters": {
      "p": "gov.doe.residential_efficiency_electrification_rebate",
      "calc": "gov.doe.residential_efficiency_electrification_rebate.percent.calc",
      "high": "gov.doe.residential_efficiency_electrification_rebate.threshold.high",
      "medium": "gov.doe.residential_efficiency_electrification_rebate.threshold.medium",
      "low": "gov.doe.residential_efficiency_electrification_rebate.threshold.low",
      "percent": "gov.doe.residential_efficiency_electrification_rebate.percent",
      "cap": "gov.doe.residential_efficiency_electrification_rebate.cap",
      "threshold": "gov.doe.residential_efficiency_electrification_rebate.threshold"
    },
    "variables": [
      "residential_efficiency_electrification_retrofit_expenditures",
      "household_income_ami_ratio",
      "average_home_energy_use_in_state",
      "current_home_energy_use",
      "residential_efficiency_electrification_retrofit_energy_savings"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Residential efficiency and electrification rebate"
  },
  "is_ebb_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/fcc/ebb/is_ebb_eligible.py",
    "parameters": {
      "programs": "gov.fcc.ebb.categorical_eligibility"
    },
    "variables": [
      "enrolled_in_ebb"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Emergency Broadband Benefit",
    "description": "Eligible for Emergency Broadband Benefit"
  },
  "ebb": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/fcc/ebb/ebb.py",
    "parameters": {
      "p": "gov.fcc.ebb",
      "tribal": "gov.fcc.ebb.amount.tribal",
      "standard": "gov.fcc.ebb.amount.standard",
      "amount": "gov.fcc.ebb.amount"
    },
    "variables": [
      "broadband_cost_after_lifeline",
      "is_on_tribal_land"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_ebb_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Emergency Broadband Benefit amount",
    "description": "Emergency Broadband Benefit amount"
  },
  "enrolled_in_ebb": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/fcc/ebb/enrolled_in_ebb.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Enrolled for Emergency Broadband Benefit",
    "description": "Whether a SPM unit is already enrolled in the Emergency Broadband Benefit"
  },
  "lifeline": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/fcc/lifeline/lifeline.py",
    "parameters": {
      "standard": "gov.fcc.lifeline.amount.standard",
      "rural_tribal_supplement": "gov.fcc.lifeline.amount.rural_tribal_supplement",
      "amount": "gov.fcc.lifeline.amount",
      "lifeline": "gov.fcc.lifeline",
      "fcc": "gov.fcc",
      "states": "gov.states",
      "p": "gov"
    },
    "variables": [
      "broadband_cost",
      "state_code_str",
      "phone_cost"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_lifeline_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Lifeline",
    "description": "Amount of Lifeline phone and broadband benefit"
  },
  "is_lifeline_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/fcc/lifeline/is_lifeline_eligible.py",
    "parameters": {
      "p": "gov.fcc.lifeline",
      "fpg_limit": "gov.fcc.lifeline.fpg_limit",
      "categorical_eligibility": "gov.fcc.lifeline.categorical_eligibility",
      "tribal_categorical_eligibility": "gov.fcc.lifeline.tribal_categorical_eligibility"
    },
    "variables": [
      "fcc_fpg_ratio",
      "is_on_tribal_land"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Lifeline",
    "description": "Eligible for Lifeline phone or broadband subsidy"
  },
  "broadband_cost_after_lifeline": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/fcc/lifeline/broadband_cost_after_lifeline.py",
    "parameters": {},
    "variables": [
      "broadband_cost",
      "lifeline"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Broadband costs after Lifeline",
    "description": "Broadband costs after Lifeline benefits"
  },
  "acp": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/fcc/acp/acp.py",
    "parameters": {
      "p": "gov.fcc.acp",
      "tribal": "gov.fcc.acp.amount.tribal",
      "standard": "gov.fcc.acp.amount.standard",
      "amount": "gov.fcc.acp.amount"
    },
    "variables": [
      "broadband_cost_after_lifeline",
      "is_on_tribal_land"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_acp_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Affordable Connectivity Program",
    "description": "Affordable Connectivity Program amount"
  },
  "is_acp_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/fcc/acp/is_acp_eligible.py",
    "parameters": {
      "fcc": "gov.fcc",
      "categorical_eligibility": "gov.fcc.acp.categorical_eligibility",
      "fpg_limit": "gov.fcc.acp.fpg_limit",
      "tribal_categorical_eligibility": "gov.fcc.lifeline.tribal_categorical_eligibility",
      "lifeline": "gov.fcc.lifeline",
      "acp": "gov.fcc.acp"
    },
    "variables": [
      "ebb",
      "fcc_fpg_ratio",
      "is_on_tribal_land"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Affordable Connectivity Program",
    "description": "Eligible for Affordable Connectivity Program"
  },
  "social_security_disability": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ss/social_security_disability.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Social Security disability benefits (SSDI)"
  },
  "never_eligible_for_social_security_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ss/never_eligible_for_social_security_benefits.py",
    "parameters": {},
    "variables": [
      "age",
      "social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Never eligible for Social Security"
  },
  "social_security_dependents": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ss/social_security_dependents.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Social Security dependents benefits"
  },
  "social_security_survivors": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ss/social_security_survivors.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Social Security survivors benefits"
  },
  "social_security_retirement": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ss/social_security_retirement.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Social Security retirement benefits"
  },
  "social_security": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ss/social_security.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "social_security_dependents",
      "social_security_disability",
      "social_security_retirement",
      "social_security_survivors"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Social Security benefits, not including SSI",
    "label": "Social Security"
  },
  "uncapped_ssi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/uncapped_ssi.py",
    "parameters": {},
    "variables": [
      "ssi_amount_if_eligible",
      "ssi_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_ssi_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Uncapped SSI",
    "description": "Maximum SSI, less countable income (can be below zero)."
  },
  "ssi_claim_is_joint": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/ssi_claim_is_joint.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "is_ssi_aged_blind_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI claim is joint"
  },
  "is_ssi_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/is_ssi_eligible.py",
    "parameters": {},
    "variables": [
      "immigration_status",
      "is_ssi_aged_blind_disabled",
      "is_ssi_qualified_noncitizen",
      "meets_ssi_resource_test"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is SSI eligible person"
  },
  "ssi_amount_if_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/ssi_amount_if_eligible.py",
    "parameters": {
      "p": "gov.ssa.ssi.amount",
      "individual": "gov.ssa.ssi.amount.individual",
      "couple": "gov.ssa.ssi.amount.couple"
    },
    "variables": [
      "ssi_claim_is_joint",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI amount if eligible"
  },
  "tax_unit_ssi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/tax_unit_ssi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ssi"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Total SSI for the tax unit"
  },
  "ssi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/ssi.py",
    "parameters": {},
    "variables": [
      "uncapped_ssi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI",
    "description": "Supplemental Security Income"
  },
  "meets_ssi_resource_test": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/resources/meets_ssi_resource_test.py",
    "parameters": {
      "p": "gov.ssa.ssi",
      "couple": "gov.ssa.ssi.eligibility.resources.limit.couple",
      "individual": "gov.ssa.ssi.eligibility.resources.limit.individual",
      "pass_rate": "gov.ssa.ssi.eligibility.resources.pass_rate",
      "limit": "gov.ssa.ssi.eligibility.resources.limit",
      "resources": "gov.ssa.ssi.eligibility.resources",
      "eligibility": "gov.ssa.ssi.eligibility"
    },
    "variables": [
      "ssi_claim_is_joint",
      "ssi_countable_resources"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets SSI resource test"
  },
  "ssi_countable_resources": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/resources/ssi_countable_resources.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI countable resources"
  },
  "ssi_blind_or_disabled_working_student_exclusion": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/ssi_blind_or_disabled_working_student_exclusion.py",
    "parameters": {
      "p": "gov.ssa.ssi.income.exclusions.blind_or_disabled_working_student",
      "cap": "gov.ssa.ssi.income.exclusions.blind_or_disabled_working_student.cap",
      "amount": "gov.ssa.ssi.income.exclusions.blind_or_disabled_working_student.amount"
    },
    "variables": [
      "ssi_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_ssi_blind_or_disabled_working_student_exclusion_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI blind or disabled working student earned income exclusion"
  },
  "ssi_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/ssi_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI earned income",
    "adds_from_parameter": "gov.ssa.ssi.income.sources.earned"
  },
  "ssi_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/ssi_countable_income.py",
    "parameters": {},
    "variables": [
      "is_ssi_eligible_spouse",
      "ssi_marital_unearned_income",
      "ssi_blind_or_disabled_working_student_exclusion",
      "is_ssi_eligible_individual",
      "ssi_income_deemed_from_ineligible_spouse",
      "ssi_unearned_income_deemed_from_ineligible_parent",
      "ssi_marital_earned_income",
      "ssi_marital_both_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI countable income",
    "description": "\n    Calculates total countable income for SSI:\n      - Earned (after ignoring blind/disabled student exclusion)\n      - Unearned\n      - Parental deemed if child\n      - Spousal deemed if married to an ineligible spouse\n      - Applies standard SSI exclusions.\n    "
  },
  "ssi_engaged_in_sga": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/ssi_engaged_in_sga.py",
    "parameters": {
      "p": "gov.ssa.sga",
      "non_blind": "gov.ssa.sga.non_blind"
    },
    "variables": [
      "is_blind",
      "ssi_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Income less than the SGA limit"
  },
  "ssi_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/ssi_unearned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "pension_income",
      "social_security",
      "disability_benefits",
      "veterans_benefits",
      "workers_compensation",
      "unemployment_compensation",
      "retirement_distributions",
      "gi_cash_assistance",
      "alimony_income",
      "child_support_received",
      "dividend_income",
      "interest_income",
      "rental_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI earned income",
    "adds_from_parameter": "gov.ssa.ssi.income.sources.unearned"
  },
  "is_ssi_blind_or_disabled_working_student_exclusion_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/is_ssi_blind_or_disabled_working_student_exclusion_eligible.py",
    "parameters": {
      "p": "gov.ssa.ssi.income.exclusions.blind_or_disabled_working_student",
      "age_limit": "gov.ssa.ssi.income.exclusions.blind_or_disabled_working_student.age_limit"
    },
    "variables": [
      "is_blind",
      "is_full_time_student",
      "age",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for SSI blind or disabled working student earned income exclusion"
  },
  "is_ssi_qualified_noncitizen": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/status/is_ssi_qualified_noncitizen.py",
    "parameters": {
      "p": "gov.ssa.ssi",
      "qualifying_quarters_threshold": "gov.ssa.ssi.income.sources.qualifying_quarters_threshold",
      "qualified_noncitizen_status": "gov.ssa.ssi.eligibility.status.qualified_noncitizen_status",
      "sources": "gov.ssa.ssi.income.sources",
      "status": "gov.ssa.ssi.eligibility.status",
      "income": "gov.ssa.ssi.income",
      "eligibility": "gov.ssa.ssi.eligibility"
    },
    "variables": [
      "immigration_status",
      "ssi_qualifying_quarters_earnings"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is an SSI qualified noncitizen"
  },
  "is_ssi_eligible_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/status/is_ssi_eligible_spouse.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_spouse",
      "ssi_marital_both_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is an SSI-eligible spouse"
  },
  "is_ssi_aged_blind_disabled": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/status/is_ssi_aged_blind_disabled.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Indicates whether a person is aged, blind, or disabled for the Supplemental Security Income program",
    "label": "SSI aged, blind, or disabled"
  },
  "is_ssi_ineligible_parent": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/status/is_ssi_ineligible_parent.py",
    "parameters": {},
    "variables": [
      "is_child",
      "is_ssi_aged_blind_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is an SSI-ineligible parent in respect of a child"
  },
  "is_ssi_aged": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/status/is_ssi_aged.py",
    "parameters": {
      "aged_threshold": "gov.ssa.ssi.eligibility.aged_threshold"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is aged for SSI"
  },
  "is_ssi_ineligible_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/status/is_ssi_ineligible_spouse.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "is_ssi_aged_blind_disabled",
      "is_ssi_eligible_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is an SSI-ineligible spouse"
  },
  "is_ssi_disabled": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/status/is_ssi_disabled.py",
    "parameters": {},
    "variables": [
      "is_blind",
      "ssi_engaged_in_sga",
      "ssi_reported",
      "is_ssi_aged",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Indicates whether a person is disabled for the Supplemental Security Income program",
    "label": "SSI disabled"
  },
  "is_ssi_ineligible_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/status/is_ssi_ineligible_child.py",
    "parameters": {},
    "variables": [
      "is_child",
      "is_ssi_aged_blind_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is an SSI-ineligible child"
  },
  "is_ssi_eligible_individual": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/status/is_ssi_eligible_individual.py",
    "parameters": {},
    "variables": [
      "immigration_status",
      "is_ssi_aged_blind_disabled",
      "is_ssi_qualified_noncitizen",
      "is_ssi_eligible_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is an SSI-eligible individual"
  },
  "ssi_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/status/ssi_category.py",
    "parameters": {},
    "variables": [
      "is_blind",
      "is_ssi_disabled",
      "is_ssi_aged"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "SSICategory",
    "enum_options": [
      {
        "key": "AGED",
        "value": "Aged"
      },
      {
        "key": "BLIND",
        "value": "Blind"
      },
      {
        "key": "DISABLED",
        "value": "Disabled"
      },
      {
        "key": "NONE",
        "value": "None"
      }
    ],
    "label": "SSI category"
  },
  "ssi_ineligible_child_allocation": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/deemed/ssi_ineligible_child_allocation.py",
    "parameters": {
      "ssi": "gov.ssa.ssi.amount",
      "couple": "gov.ssa.ssi.amount.couple",
      "individual": "gov.ssa.ssi.amount.individual"
    },
    "variables": [
      "ssi_earned_income",
      "is_ssi_ineligible_child",
      "ssi_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI ineligible child allocation",
    "description": "The amount of income that SSI deems ought to be spent on this child, and therefore is not deemed to SSI claimants."
  },
  "ssi_ineligible_parent_allocation": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/deemed/ssi_ineligible_parent_allocation.py",
    "parameters": {
      "ssi": "gov.ssa.ssi.amount",
      "individual": "gov.ssa.ssi.amount.individual",
      "couple": "gov.ssa.ssi.amount.couple"
    },
    "variables": [
      "is_ssi_ineligible_parent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI ineligible parent allocation",
    "description": "The amount of income that SSI does not to SSI claimants."
  },
  "ssi_marital_both_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/marital/ssi_marital_both_eligible.py",
    "parameters": {},
    "variables": [
      "is_ssi_aged_blind_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Both members of the marital unit are eligible for SSI"
  },
  "ssi_marital_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/marital/ssi_marital_unearned_income.py",
    "parameters": {},
    "variables": [
      "ssi_marital_both_eligible",
      "ssi_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Total SSI unearned income for a marital unit"
  },
  "ssi_marital_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/marital/ssi_marital_earned_income.py",
    "parameters": {},
    "variables": [
      "ssi_earned_income",
      "ssi_marital_both_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Total SSI earned income for a marital unit"
  },
  "ssi_unearned_income_deemed_from_ineligible_parent": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/deemed/from_ineligible_parent/ssi_unearned_income_deemed_from_ineligible_parent.py",
    "parameters": {},
    "variables": [
      "ssi_ineligible_child_allocation",
      "ssi_ineligible_parent_allocation",
      "is_child",
      "ssi_earned_income",
      "is_ssi_aged_blind_disabled",
      "is_ssi_ineligible_parent",
      "ssi_blind_or_disabled_working_student_exclusion",
      "ssi_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI unearned income (deemed from ineligible parent)"
  },
  "ssi_earned_income_deemed_from_ineligible_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/deemed/from_ineligible_spouse/ssi_earned_income_deemed_from_ineligible_spouse.py",
    "parameters": {},
    "variables": [
      "ssi_ineligible_child_allocation",
      "is_ssi_ineligible_spouse",
      "ssi_earned_income",
      "is_ssi_aged_blind_disabled",
      "ssi_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI earned income (deemed from ineligible spouse)"
  },
  "ssi_unearned_income_deemed_from_ineligible_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/deemed/from_ineligible_spouse/ssi_unearned_income_deemed_from_ineligible_spouse.py",
    "parameters": {},
    "variables": [
      "ssi_ineligible_child_allocation",
      "is_ssi_ineligible_spouse",
      "ssi_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI unearned income (deemed from ineligible spouse)",
    "description": "This is ignored if total income is under the SSI individual allowance."
  },
  "ssi_income_deemed_from_ineligible_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ssa/ssi/eligibility/income/deemed/from_ineligible_spouse/ssi_income_deemed_from_ineligible_spouse.py",
    "parameters": {
      "p": "gov.ssa.ssi.amount",
      "couple": "gov.ssa.ssi.amount.couple",
      "individual": "gov.ssa.ssi.amount.individual"
    },
    "variables": [
      "ssi_unearned_income_deemed_from_ineligible_spouse",
      "ssi_earned_income",
      "ssi_earned_income_deemed_from_ineligible_spouse",
      "ssi_unearned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_ssi_eligible_individual",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI income (deemed from ineligible spouse)",
    "description": "\n    Spousal deeming: \n      1) If leftover spouse income <= (coupleFBR - indivFBR), then 0 is deemed.\n      2) Otherwise, spouse's deemed = (couple combined countable) - (individual alone countable).\n         This yields 816 for 1986 Example 3 and 12000 for the 2025 test.\n    "
  },
  "snap_region": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/snap_region.py",
    "parameters": {},
    "variables": [
      "state_group"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "SNAPRegion",
    "enum_options": [
      {
        "key": "CONTIGUOUS_US",
        "value": "Contiguous US"
      },
      {
        "key": "AK_URBAN",
        "value": "Alaska (urban)"
      },
      {
        "key": "AK_RURAL_1",
        "value": "Alaska (rural 1)"
      },
      {
        "key": "AK_RURAL_2",
        "value": "Alaska (rural 2)"
      },
      {
        "key": "GU",
        "value": "Guam"
      },
      {
        "key": "HI",
        "value": "Hawaii"
      },
      {
        "key": "VI",
        "value": "Virgin Islands"
      }
    ],
    "label": "SNAP region"
  },
  "snap_normal_allotment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/snap_normal_allotment.py",
    "parameters": {},
    "variables": [
      "snap_max_allotment",
      "snap_expected_contribution",
      "snap_min_allotment"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_snap_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Normal SNAP benefit amount, equal to net income minus food contribution",
    "label": "SNAP normal allotment"
  },
  "snap_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/snap_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP (reported amount)",
    "description": "Reported value of SNAP."
  },
  "snap": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/snap.py",
    "parameters": {},
    "variables": [
      "snap_reported",
      "dc_snap_temporary_local_benefit",
      "snap_emergency_allotment",
      "takes_up_snap_if_eligible",
      "snap_normal_allotment"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Final SNAP benefit amount, equal to net income minus food contribution",
    "label": "SNAP allotment"
  },
  "snap_take_up_seed": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/snap_take_up_seed.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Randomly assigned seed for SNAP take-up"
  },
  "snap_max_allotment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/snap_max_allotment.py",
    "parameters": {
      "max_allotments": "gov.usda.snap.max_allotment",
      "main": "gov.usda.snap.max_allotment.main",
      "additional": "gov.usda.snap.max_allotment.additional"
    },
    "variables": [
      "snap_region_str",
      "snap_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Maximum SNAP allotment for SPM unit, based on the state group and household size.",
    "label": "SNAP maximum allotment"
  },
  "snap_min_allotment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/snap_min_allotment.py",
    "parameters": {
      "snap": "gov.usda.snap",
      "p_dc": "gov.states.dc.dhs.snap.min_allotment",
      "p_md": "gov.states.md.usda.snap.min_allotment",
      "p_nj": "gov.states.nj.snap",
      "min_allotment": "gov.usda.snap.min_allotment",
      "max_allotment": "gov.usda.snap.max_allotment",
      "main": "gov.usda.snap.max_allotment.main",
      "in_effect": "gov.states.nj.snap.in_effect",
      "amount": "gov.states.nj.snap.amount",
      "maximum_household_size": "gov.usda.snap.min_allotment.maximum_household_size",
      "relevant_max_allotment_household_size": "gov.usda.snap.min_allotment.relevant_max_allotment_household_size"
    },
    "variables": [
      "state_code_str",
      "snap_region_str",
      "md_snap_elderly_present",
      "snap_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP minimum allotment",
    "description": "Minimum allotment for SNAP based on household size and state"
  },
  "snap_emergency_allotment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/snap_emergency_allotment.py",
    "parameters": {},
    "variables": [
      "is_snap_eligible",
      "state_code",
      "snap_max_allotment",
      "snap_normal_allotment"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "SNAP emergency allotment",
    "label": "SNAP emergency allotment"
  },
  "snap_utility_region_str": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/snap_utility_region_str.py",
    "parameters": {},
    "variables": [
      "snap_utility_region"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "str",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP utility region"
  },
  "takes_up_snap_if_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/takes_up_snap_if_eligible.py",
    "parameters": {
      "takeup_rate": "gov.usda.snap.takeup_rate"
    },
    "variables": [
      "snap_take_up_seed"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether a random eligible SPM unit does not claim SNAP"
  },
  "snap_utility_region": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/snap_utility_region.py",
    "parameters": {},
    "variables": [
      "state_code"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "SnapUtilityRegion",
    "enum_options": [
      {
        "key": "AL",
        "value": "AL"
      },
      {
        "key": "AK",
        "value": "AK"
      },
      {
        "key": "AZ",
        "value": "AZ"
      },
      {
        "key": "AR",
        "value": "AR"
      },
      {
        "key": "CA",
        "value": "CA"
      },
      {
        "key": "CO",
        "value": "CO"
      },
      {
        "key": "CT",
        "value": "CT"
      },
      {
        "key": "DE",
        "value": "DE"
      },
      {
        "key": "FL",
        "value": "FL"
      },
      {
        "key": "GA",
        "value": "GA"
      },
      {
        "key": "HI",
        "value": "HI"
      },
      {
        "key": "ID",
        "value": "ID"
      },
      {
        "key": "IL",
        "value": "IL"
      },
      {
        "key": "IN",
        "value": "IN"
      },
      {
        "key": "IA",
        "value": "IA"
      },
      {
        "key": "KS",
        "value": "KS"
      },
      {
        "key": "KY",
        "value": "KY"
      },
      {
        "key": "LA",
        "value": "LA"
      },
      {
        "key": "ME",
        "value": "ME"
      },
      {
        "key": "MD",
        "value": "MD"
      },
      {
        "key": "MA",
        "value": "MA"
      },
      {
        "key": "MI",
        "value": "MI"
      },
      {
        "key": "MN",
        "value": "MN"
      },
      {
        "key": "MS",
        "value": "MS"
      },
      {
        "key": "MO",
        "value": "MO"
      },
      {
        "key": "MT",
        "value": "MT"
      },
      {
        "key": "NE",
        "value": "NE"
      },
      {
        "key": "NV",
        "value": "NV"
      },
      {
        "key": "NH",
        "value": "NH"
      },
      {
        "key": "NJ",
        "value": "NJ"
      },
      {
        "key": "NM",
        "value": "NM"
      },
      {
        "key": "NY",
        "value": "NY"
      },
      {
        "key": "NC",
        "value": "NC"
      },
      {
        "key": "ND",
        "value": "ND"
      },
      {
        "key": "OH",
        "value": "OH"
      },
      {
        "key": "OK",
        "value": "OK"
      },
      {
        "key": "OR",
        "value": "OR"
      },
      {
        "key": "PA",
        "value": "PA"
      },
      {
        "key": "RI",
        "value": "RI"
      },
      {
        "key": "SC",
        "value": "SC"
      },
      {
        "key": "SD",
        "value": "SD"
      },
      {
        "key": "TN",
        "value": "TN"
      },
      {
        "key": "TX",
        "value": "TX"
      },
      {
        "key": "UT",
        "value": "UT"
      },
      {
        "key": "VT",
        "value": "VT"
      },
      {
        "key": "VA",
        "value": "VA"
      },
      {
        "key": "WA",
        "value": "WA"
      },
      {
        "key": "WV",
        "value": "WV"
      },
      {
        "key": "WI",
        "value": "WI"
      },
      {
        "key": "WY",
        "value": "WY"
      },
      {
        "key": "DC",
        "value": "DC"
      },
      {
        "key": "GU",
        "value": "GU"
      },
      {
        "key": "MP",
        "value": "MP"
      },
      {
        "key": "PW",
        "value": "PW"
      },
      {
        "key": "PR",
        "value": "PR"
      },
      {
        "key": "VI",
        "value": "VI"
      },
      {
        "key": "AA",
        "value": "AA"
      },
      {
        "key": "AE",
        "value": "AE"
      },
      {
        "key": "AP",
        "value": "AP"
      }
    ],
    "label": "SNAP utility region",
    "description": "Region deciding the SNAP utility allowances."
  },
  "snap_expected_contribution": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/snap_expected_contribution.py",
    "parameters": {
      "expected_food_contribution": "gov.usda.snap.expected_contribution"
    },
    "variables": [
      "snap_net_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Expected food contribution from SNAP net income",
    "label": "SNAP expected food contribution"
  },
  "snap_region_str": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/snap_region_str.py",
    "parameters": {},
    "variables": [
      "snap_region"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "str",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP region"
  },
  "fdpir": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/fdpir/fdpir.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Food Distribution Program on Indian Reservations",
    "description": "Benefit value of the Food Distribution Program on Indian Reservations"
  },
  "commodity_supplemental_food_program_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/csfp/commodity_supplemental_food_program_eligible.py",
    "parameters": {
      "p": "gov.usda.csfp",
      "min_age": "gov.usda.csfp.min_age",
      "fpg_limit": "gov.usda.csfp.fpg_limit"
    },
    "variables": [
      "school_meal_fpg_ratio",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Commodity Supplemental Food Program eligible"
  },
  "commodity_supplemental_food_program": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/csfp/commodity_supplemental_food_program.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "commodity_supplemental_food_program_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Commodity Supplemental Food Program",
    "adds_parameter_values": {
      "gov.usda.csfp.amount": "$330"
    }
  },
  "reduced_price_school_meals": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/school_meals/reduced_price_school_meals.py",
    "parameters": {},
    "variables": [
      "school_meal_tier",
      "school_meal_net_subsidy"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "reduced price school meals",
    "description": "Value of reduced price school meals."
  },
  "school_meal_fpg_ratio": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/school_meals/school_meal_fpg_ratio.py",
    "parameters": {},
    "variables": [
      "spm_unit_fpg",
      "school_meal_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "School meal FPG ratio",
    "description": "SPM unit's federal poverty ratio for school meal program",
    "unit": "/1"
  },
  "school_meal_paid_daily_subsidy": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/school_meals/school_meal_paid_daily_subsidy.py",
    "parameters": {
      "p_amount": "gov.usda.school_meals.amount",
      "nslp": "gov.usda.school_meals.amount.nslp",
      "sbp": "gov.usda.school_meals.amount.sbp"
    },
    "variables": [
      "state_group_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "School meal subsidies per full-price child per day",
    "description": "Value of school meal subsidies paid to full-price children per day in household's state"
  },
  "school_meal_net_subsidy": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/school_meals/school_meal_net_subsidy.py",
    "parameters": {
      "p_school_meals": "gov.usda.school_meals",
      "school_days": "gov.usda.school_meals.school_days"
    },
    "variables": [
      "school_meal_daily_subsidy",
      "school_meal_paid_daily_subsidy",
      "is_in_k12_school"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Free and reduced price school meals",
    "description": "Value of free and reduced price school meal subsidies"
  },
  "free_school_meals": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/school_meals/free_school_meals.py",
    "parameters": {
      "disabled_programs": "simulation.disabled_programs"
    },
    "variables": [
      "school_meal_tier",
      "school_meal_net_subsidy",
      "free_school_meals_reported"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "free school meals",
    "description": "Value of free school meals."
  },
  "school_meal_tier": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/school_meals/school_meal_tier.py",
    "parameters": {
      "p_income_limit": "gov.usda.school_meals.income.limit",
      "REDUCED": "gov.usda.school_meals.income.limit.REDUCED",
      "FREE": "gov.usda.school_meals.income.limit.FREE"
    },
    "variables": [
      "school_meal_fpg_ratio",
      "meets_school_meal_categorical_eligibility"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "SchoolMealTier",
    "enum_options": [
      {
        "key": "FREE",
        "value": "Free"
      },
      {
        "key": "REDUCED",
        "value": "Reduced price"
      },
      {
        "key": "PAID",
        "value": "Paid"
      }
    ],
    "label": "School meal tier",
    "description": "SPM unit's school meal program tier"
  },
  "school_meal_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/school_meals/school_meal_countable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income",
      "dividend_income",
      "interest_income",
      "gi_cash_assistance",
      "social_security",
      "ssi",
      "tanf",
      "pension_income",
      "miscellaneous_income",
      "veterans_benefits",
      "unemployment_compensation",
      "strike_benefits",
      "rental_income",
      "retirement_distributions"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Countable income for school meals",
    "description": "SPM unit's countable income for school meal program",
    "adds_from_parameter": "gov.usda.school_meals.income.sources"
  },
  "free_school_meals_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/school_meals/free_school_meals_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Free school meals (reported)"
  },
  "school_meal_daily_subsidy": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/school_meals/school_meal_daily_subsidy.py",
    "parameters": {
      "p_amount": "gov.usda.school_meals.amount",
      "nslp": "gov.usda.school_meals.amount.nslp",
      "sbp": "gov.usda.school_meals.amount.sbp"
    },
    "variables": [
      "state_group_str",
      "school_meal_tier"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "School meal subsidies per child per day",
    "description": "Value of school meal subsidies per child per day"
  },
  "meets_school_meal_categorical_eligibility": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/school_meals/meets_school_meal_categorical_eligibility.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "snap",
      "tanf",
      "fdpir",
      "was_in_foster_care",
      "is_homeless",
      "is_runaway_child",
      "is_migratory_child",
      "is_head_start_eligible"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "School meal categorical eligibility",
    "description": "Whether this SPM unit is eligible for free school meal via participation in other programs",
    "adds_from_parameter": "gov.usda.school_meals.categorical_eligibility"
  },
  "meets_wic_categorical_eligibility": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/wic/meets_wic_categorical_eligibility.py",
    "parameters": {},
    "variables": [
      "wic_category",
      "snap",
      "tanf",
      "medicaid_enrolled",
      "is_pregnant"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Meets the program participation eligibility criteria for WIC",
    "label": "Meets WIC categorical (program participation) eligibility"
  },
  "wic_fpg": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/wic/wic_fpg.py",
    "parameters": {
      "additional_person": "gov.hhs.fpg.additional_person"
    },
    "variables": [
      "state_group_str",
      "is_pregnant",
      "spm_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Federal poverty guideline for WIC, with family size incremented by one for pregnant women",
    "label": "Pregnancy-adjusted poverty line for WIC"
  },
  "wic_category_str": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/wic/wic_category_str.py",
    "parameters": {},
    "variables": [
      "wic_category"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "str",
    "possible_values": null,
    "enum_options": [],
    "label": "WIC category (string)",
    "description": "WIC category variable, stored as a string"
  },
  "receives_wic": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/wic/receives_wic.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Reported to receive WIC"
  },
  "wic_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/wic/wic_category.py",
    "parameters": {},
    "variables": [
      "is_pregnant",
      "age",
      "is_mother",
      "is_breastfeeding"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "WICCategory",
    "enum_options": [
      {
        "key": "PREGNANT",
        "value": "Pregnant"
      },
      {
        "key": "POSTPARTUM",
        "value": "Postpartum"
      },
      {
        "key": "BREASTFEEDING",
        "value": "Breastfeeding"
      },
      {
        "key": "INFANT",
        "value": "Infant"
      },
      {
        "key": "CHILD",
        "value": "Child"
      },
      {
        "key": "NONE",
        "value": "None"
      }
    ],
    "description": "Demographic category for the Special Supplemental Nutrition Program for Women, Infants and Children (WIC)",
    "label": "WIC demographic category"
  },
  "is_wic_at_nutritional_risk": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/wic/is_wic_at_nutritional_risk.py",
    "parameters": {
      "risk": "gov.usda.wic.nutritional_risk"
    },
    "variables": [
      "wic_category",
      "meets_wic_categorical_eligibility",
      "meets_wic_income_test",
      "receives_wic"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Assessed as being at nutritional risk for the Special Supplemental Nutrition Program for Women, Infants and Children (WIC)",
    "label": "At nutritional risk for WIC"
  },
  "meets_wic_income_test": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/wic/meets_wic_income_test.py",
    "parameters": {
      "limit": "gov.usda.school_meals.income.limit.REDUCED"
    },
    "variables": [
      "wic_fpg",
      "school_meal_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Meets income test for the Special Supplemental Nutrition Program for Women, Infants and Children (WIC)",
    "label": "Meets WIC income test"
  },
  "is_wic_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/wic/is_wic_eligible.py",
    "parameters": {},
    "variables": [
      "meets_wic_categorical_eligibility",
      "meets_wic_income_test",
      "is_wic_at_nutritional_risk"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Is eligible for the Special Supplemental Nutrition Program for Women, Infants and Children (WIC)",
    "label": "Is eligible for WIC"
  },
  "wic": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/wic/wic.py",
    "parameters": {
      "p": "gov.usda.wic",
      "value": "gov.usda.wic.value",
      "abolish_wic": "gov.usda.wic.abolish_wic"
    },
    "variables": [
      "would_claim_wic",
      "wic_category_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_wic_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Benefit value for the Special Supplemental Nutrition Program for Women, Infants and Children (WIC)",
    "label": "WIC"
  },
  "would_claim_wic": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/wic/would_claim_wic.py",
    "parameters": {
      "takeup": "gov.usda.wic.takeup"
    },
    "variables": [
      "wic_category"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Would claim WIC"
  },
  "snap_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/snap_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "snap_earned_income_person"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP earned income",
    "description": "Earned income for calculating the SNAP earned income deduction"
  },
  "snap_excluded_child_earner": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/snap_excluded_child_earner.py",
    "parameters": {
      "p": "gov.usda.snap.income",
      "child_income_exclusion_age": "gov.usda.snap.income.child_income_exclusion_age"
    },
    "variables": [
      "monthly_age",
      "is_in_k12_school"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Excluded child earner",
    "description": "Whether this person is a child whose earned income is excluded from SNAP "
  },
  "snap_fpg": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/snap_fpg.py",
    "parameters": {
      "p_fpg": "gov.hhs.fpg",
      "first_person": "gov.hhs.fpg.first_person",
      "additional_person": "gov.hhs.fpg.additional_person"
    },
    "variables": [
      "state_group_str",
      "snap_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP federal poverty guideline",
    "description": "The federal poverty guideline used to determine SNAP eligibility."
  },
  "snap_net_income_fpg_ratio": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/snap_net_income_fpg_ratio.py",
    "parameters": {},
    "variables": [
      "snap_fpg",
      "snap_net_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP net income to FPL ratio",
    "description": "SNAP net income as a percentage of the federal poverty line",
    "unit": "/1"
  },
  "snap_net_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/snap_net_income.py",
    "parameters": {},
    "variables": [
      "snap_gross_income",
      "snap_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Final net income, after all deductions",
    "label": "SNAP net income"
  },
  "snap_countable_earner": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/snap_countable_earner.py",
    "parameters": {},
    "variables": [
      "snap_excluded_child_earner"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Countable income earner",
    "description": "Whether this person's earned income is counted for SNAP"
  },
  "snap_earned_income_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/snap_earned_income_person.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "snap_self_employment_income_after_expense_deduction"
    ],
    "subtracts": [],
    "defined_for": "snap_countable_earner",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP earned income person",
    "description": "Earned income per person for calculating the SNAP earned income deduction",
    "adds_from_parameter": "gov.usda.snap.income.sources.earned"
  },
  "snap_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/snap_unearned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ssi",
      "tanf",
      "general_assistance",
      "pension_income",
      "veterans_benefits",
      "unemployment_compensation",
      "disability_benefits",
      "workers_compensation",
      "social_security",
      "retirement_distributions",
      "rental_income",
      "child_support_received",
      "alimony_income",
      "dividend_income",
      "interest_income",
      "miscellaneous_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP unearned income",
    "description": "Unearned income for calculating the SNAP benefit",
    "adds_from_parameter": "gov.usda.snap.income.sources.unearned"
  },
  "meets_snap_net_income_test": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/eligibility/meets_snap_net_income_test.py",
    "parameters": {
      "net_income_limit_fpg": "gov.usda.snap.income.limit.net"
    },
    "variables": [
      "snap_net_income_fpg_ratio"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets SNAP net income test",
    "description": "Whether this SPM unit meets the SNAP net income test"
  },
  "meets_snap_gross_income_test": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/eligibility/meets_snap_gross_income_test.py",
    "parameters": {
      "limit": "gov.usda.snap.income.limit.gross"
    },
    "variables": [
      "snap_gross_income_fpg_ratio",
      "has_usda_elderly_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets SNAP gross income test",
    "description": "Whether this SPM unit meets the SNAP gross income test"
  },
  "is_snap_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/eligibility/is_snap_eligible.py",
    "parameters": {},
    "variables": [
      "meets_snap_categorical_eligibility",
      "is_snap_ineligible_student",
      "meets_snap_work_requirements",
      "meets_snap_gross_income_test",
      "meets_snap_net_income_test",
      "meets_snap_asset_test"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP eligible",
    "description": "Whether this SPM unit is eligible for SNAP benefits"
  },
  "meets_snap_categorical_eligibility": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/eligibility/meets_snap_categorical_eligibility.py",
    "parameters": {
      "programs": "gov.usda.snap.categorical_eligibility"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP categorical eligibility",
    "description": "Whether this SPM unit is eligible for SNAP benefits via participation in other programs"
  },
  "meets_snap_asset_test": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/eligibility/meets_snap_asset_test.py",
    "parameters": {
      "asset_test": "gov.usda.snap.asset_test",
      "elderly_disabled": "gov.usda.snap.asset_test.limit.elderly_disabled",
      "standard": "gov.usda.snap.asset_test.limit.standard",
      "limit": "gov.usda.snap.asset_test.limit"
    },
    "variables": [
      "snap_assets",
      "has_usda_elderly_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets SNAP asset test",
    "description": "Whether the SPM unit's financial resources are within SNAP's allowable limit"
  },
  "snap_assets": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/eligibility/snap_assets.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Countable assets for SNAP limits",
    "label": "SNAP assets"
  },
  "is_snap_ineligible_student": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/eligibility/student/is_snap_ineligible_student.py",
    "parameters": {
      "p": "gov.usda.snap.student",
      "calc": "gov.usda.snap.student.age_threshold.calc",
      "working_hours_threshold": "gov.usda.snap.student.working_hours_threshold",
      "age_threshold": "gov.usda.snap.student.age_threshold"
    },
    "variables": [
      "age",
      "is_parent",
      "is_full_time_student",
      "weekly_hours_worked",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is an ineligible student for SNAP",
    "description": "Whether this person is an ineligible student for SNAP and can not be counted towards the household size"
  },
  "meets_snap_work_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/eligibility/work_requirements/meets_snap_work_requirements.py",
    "parameters": {
      "p": "gov.usda.snap.work_requirements.abawd.age_threshold",
      "dependent": "gov.usda.snap.work_requirements.abawd.age_threshold.dependent"
    },
    "variables": [
      "monthly_age",
      "meets_snap_abawd_work_requirements",
      "meets_snap_general_work_requirements",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM Unit is eligible for SNAP benefits via work requirements"
  },
  "meets_snap_abawd_work_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/eligibility/work_requirements/meets_snap_abawd_work_requirements.py",
    "parameters": {
      "p": "gov.usda.snap.work_requirements.abawd",
      "in_effect": "gov.usda.snap.work_requirements.abawd.in_effect",
      "weekly_hours_threshold": "gov.usda.snap.work_requirements.abawd.weekly_hours_threshold",
      "exempt_states": "gov.usda.snap.work_requirements.abawd.exempt_states",
      "age_threshold": "gov.usda.snap.work_requirements.abawd.age_threshold",
      "calc": "gov.usda.snap.work_requirements.abawd.age_threshold.exempted.calc",
      "dependent": "gov.usda.snap.work_requirements.abawd.age_threshold.dependent",
      "exempted": "gov.usda.snap.work_requirements.abawd.age_threshold.exempted"
    },
    "variables": [
      "monthly_age",
      "is_parent",
      "is_tax_unit_dependent",
      "meets_snap_general_work_requirements",
      "is_veteran",
      "state_code",
      "is_homeless",
      "weekly_hours_worked",
      "is_pregnant",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is eligible for SNAP benefits via Able-Bodied Adult Without Dependents (ABAWD) work requirements"
  },
  "meets_snap_general_work_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/eligibility/work_requirements/meets_snap_general_work_requirements.py",
    "parameters": {
      "p": "gov.usda.snap.work_requirements.general",
      "calc": "gov.usda.snap.work_requirements.general.age_threshold.exempted.calc",
      "caring_dependent_child": "gov.usda.snap.work_requirements.general.age_threshold.caring_dependent_child",
      "exempted": "gov.usda.snap.work_requirements.general.age_threshold.exempted",
      "weekly_hours_threshold": "gov.usda.snap.work_requirements.general.weekly_hours_threshold",
      "age_threshold": "gov.usda.snap.work_requirements.general.age_threshold"
    },
    "variables": [
      "monthly_age",
      "is_tax_unit_dependent",
      "weekly_hours_worked",
      "is_disabled",
      "is_incapable_of_self_care"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is eligible for SNAP benefits via general work requirements"
  },
  "snap_dependent_care_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/snap_dependent_care_deduction.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "childcare_expenses"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP dependent care deduction",
    "description": "Deduction from SNAP gross income for dependent care"
  },
  "snap_earned_income_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/snap_earned_income_deduction.py",
    "parameters": {
      "deduction_rate": "gov.usda.snap.income.deductions.earned_income"
    },
    "variables": [
      "snap_earned_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Earned income deduction for calculating SNAP benefit amount",
    "label": "SNAP earned income deduction"
  },
  "snap_standard_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/snap_standard_deduction.py",
    "parameters": {
      "standard_deductions": "gov.usda.snap.income.deductions.standard"
    },
    "variables": [
      "state_group_str",
      "snap_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Standard deduction for calculating SNAP benefit amount",
    "label": "SNAP standard deduction"
  },
  "snap_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/snap_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "snap_standard_deduction",
      "snap_earned_income_deduction",
      "snap_dependent_care_deduction",
      "snap_child_support_deduction",
      "snap_excess_medical_expense_deduction",
      "snap_excess_shelter_expense_deduction",
      "snap_self_employment_expense_deduction"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP income deductions",
    "description": "Deductions made from gross income for SNAP benefits",
    "adds_from_parameter": "gov.usda.snap.income.deductions.allowed"
  },
  "snap_excess_medical_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/snap_excess_medical_expense_deduction.py",
    "parameters": {
      "p": "gov.usda.snap.income.deductions.excess_medical_expense",
      "standard": "gov.usda.snap.income.deductions.excess_medical_expense.standard",
      "disregard": "gov.usda.snap.income.deductions.excess_medical_expense.disregard"
    },
    "variables": [
      "is_usda_elderly",
      "state_code_str",
      "is_usda_disabled",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP excess medical expense deduction",
    "description": "Deduction from SNAP gross income for excess medical expenses"
  },
  "snap_child_support_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/snap_child_support_deduction.py",
    "parameters": {},
    "variables": [
      "snap_child_support_gross_income_deduction",
      "child_support_expense"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP child support payment deduction",
    "description": "Deduction from SNAP gross income for child support payments"
  },
  "snap_child_support_gross_income_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/gross/snap_child_support_gross_income_deduction.py",
    "parameters": {
      "child_support": "gov.usda.snap.income.deductions.child_support"
    },
    "variables": [
      "state_code_str",
      "child_support_expense"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP child support payment deduction from gross income",
    "description": "Deduction for child support payments when computing SNAP gross income"
  },
  "snap_gross_income_fpg_ratio": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/gross/snap_gross_income_fpg_ratio.py",
    "parameters": {},
    "variables": [
      "snap_gross_income",
      "snap_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP gross income to FPL ratio",
    "description": "SNAP gross income as a percentage of the federal poverty line",
    "unit": "/1"
  },
  "snap_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/gross/snap_gross_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "snap_earned_income",
      "snap_unearned_income"
    ],
    "subtracts": [
      "snap_child_support_gross_income_deduction"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP gross income",
    "description": "Gross income for calculating SNAP eligibility"
  },
  "snap_self_employment_income_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/self_employment/snap_self_employment_income_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "All self-employment income expenses for the SNAP self-employment deduction"
  },
  "snap_self_employment_income_after_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/self_employment/snap_self_employment_income_after_expense_deduction.py",
    "parameters": {},
    "variables": [
      "snap_self_employment_expense_deduction",
      "self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employment income after the SNAP self-employment expense deduction"
  },
  "snap_self_employment_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/self_employment/snap_self_employment_expense_deduction.py",
    "parameters": {
      "p": "gov.usda.snap.income.deductions.self_employment",
      "rate": "gov.usda.snap.income.deductions.self_employment.rate",
      "expense_based_deduction_applies": "gov.usda.snap.income.deductions.self_employment.expense_based_deduction_applies"
    },
    "variables": [
      "state_code",
      "snap_self_employment_income_expense",
      "self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Self-employment income deduction for calculating SNAP benefit amount",
    "label": "SNAP self-employment expense deduction"
  },
  "snap_standard_utility_allowance_by_household_size": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/shelter/snap_standard_utility_allowance_by_household_size.py",
    "parameters": {
      "p": "gov.usda.snap.income.deductions.utility.standard",
      "participating_states": "gov.usda.snap.income.deductions.utility.standard.by_household_size.participating_states",
      "by_household_size": "gov.usda.snap.income.deductions.utility.standard.by_household_size"
    },
    "variables": [
      "snap_utility_region_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP Standard Utility Allowance by household size"
  },
  "snap_net_income_pre_shelter": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/shelter/snap_net_income_pre_shelter.py",
    "parameters": {
      "all_deductions": "gov.usda.snap.income.deductions.allowed"
    },
    "variables": [
      "snap_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "SNAP net income before the shelter deduction, needed as intermediate to calculate shelter deduction",
    "label": "SNAP net income (pre-shelter)"
  },
  "snap_excess_shelter_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/shelter/snap_excess_shelter_expense_deduction.py",
    "parameters": {
      "p": "gov.usda.snap.income.deductions.excess_shelter_expense",
      "cap": "gov.usda.snap.income.deductions.excess_shelter_expense.cap",
      "income_share_disregard": "gov.usda.snap.income.deductions.excess_shelter_expense.income_share_disregard",
      "homeless": "gov.usda.snap.income.deductions.excess_shelter_expense.homeless",
      "deduction": "gov.usda.snap.income.deductions.excess_shelter_expense.homeless.deduction",
      "available": "gov.usda.snap.income.deductions.excess_shelter_expense.homeless.available"
    },
    "variables": [
      "snap_region_str",
      "snap_net_income_pre_shelter",
      "housing_cost",
      "snap_utility_allowance",
      "is_homeless",
      "state_code_str",
      "has_usda_elderly_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Excess shelter expense deduction for calculating SNAP benefit amount",
    "label": "SNAP shelter deduction"
  },
  "snap_standard_utility_allowance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/shelter/snap_standard_utility_allowance.py",
    "parameters": {
      "p": "gov.usda.snap.income.deductions.utility.standard",
      "main": "gov.usda.snap.income.deductions.utility.standard.main",
      "by_household_size": "gov.usda.snap.income.deductions.utility.standard.by_household_size",
      "amount": "gov.usda.snap.income.deductions.utility.standard.by_household_size.amount"
    },
    "variables": [
      "snap_utility_allowance_type",
      "snap_standard_utility_allowance_by_household_size",
      "snap_utility_region_str",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP Standard Utility Allowance",
    "description": "The standard utility allowance deduction for SNAP"
  },
  "snap_individual_utility_allowance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/shelter/snap_individual_utility_allowance.py",
    "parameters": {
      "utility": "gov.usda.snap.income.deductions.utility",
      "utility_types": "gov.usda.snap.income.deductions.utility.single.utility_types",
      "single": "gov.usda.snap.income.deductions.utility.single"
    },
    "variables": [
      "snap_utility_allowance_type",
      "snap_utility_region_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP Individual Utility Allowance",
    "description": "The individual utility allowance deduction for SNAP"
  },
  "snap_utility_allowance_type": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/shelter/snap_utility_allowance_type.py",
    "parameters": {
      "lua": "gov.usda.snap.income.deductions.utility.limited",
      "active": "gov.usda.snap.income.deductions.utility.limited.active"
    },
    "variables": [
      "has_heating_cooling_expense",
      "snap_state_using_standard_utility_allowance",
      "count_distinct_utility_expenses",
      "snap_utility_region_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "SNAPUttilityAllowanceType",
    "enum_options": [
      {
        "key": "SUA",
        "value": "Standard Utility Allowance"
      },
      {
        "key": "LUA",
        "value": "Limited Utility Allowance"
      },
      {
        "key": "IUA",
        "value": "Individual Utility Allowance"
      },
      {
        "key": "NONE",
        "value": "None"
      }
    ],
    "label": "SNAP utility allowance eligibility",
    "description": "The type of utility allowance that is eligible for the SPM unit"
  },
  "snap_state_using_standard_utility_allowance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/shelter/snap_state_using_standard_utility_allowance.py",
    "parameters": {
      "p": "gov.usda.snap.income.deductions.utility",
      "always_standard": "gov.usda.snap.income.deductions.utility.always_standard"
    },
    "variables": [
      "state_code"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether a state always uses the standard utility allowance"
  },
  "snap_limited_utility_allowance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/shelter/snap_limited_utility_allowance.py",
    "parameters": {
      "p": "gov.usda.snap.income.deductions.utility.limited",
      "main": "gov.usda.snap.income.deductions.utility.limited.main",
      "by_household_size": "gov.usda.snap.income.deductions.utility.limited.by_household_size",
      "amount": "gov.usda.snap.income.deductions.utility.limited.by_household_size.amount"
    },
    "variables": [
      "snap_utility_allowance_type",
      "snap_limited_utility_allowance_by_household_size",
      "snap_utility_region_str",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP Limited Utility Allowance",
    "description": "The limited utility allowance deduction for SNAP"
  },
  "snap_utility_allowance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/shelter/snap_utility_allowance.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "snap_standard_utility_allowance",
      "snap_limited_utility_allowance",
      "snap_individual_utility_allowance"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Standard Utility Allowance",
    "description": "The regular utility allowance deduction for SNAP"
  },
  "snap_limited_utility_allowance_by_household_size": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/usda/snap/income/deductions/shelter/snap_limited_utility_allowance_by_household_size.py",
    "parameters": {
      "p": "gov.usda.snap.income.deductions.utility.limited",
      "participating_states": "gov.usda.snap.income.deductions.utility.limited.by_household_size.participating_states",
      "by_household_size": "gov.usda.snap.income.deductions.utility.limited.by_household_size"
    },
    "variables": [
      "snap_utility_region_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SNAP Limited Utility Allowance by household size"
  },
  "salt_refund_last_year": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/tax/salt_refund_last_year.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SALT refund last year"
  },
  "assessed_property_value": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/tax/assessed_property_value.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Assessed property value",
    "description": "Total assessed value of property owned by this person."
  },
  "nyc_income_tax_before_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/nyc_income_tax_before_credits.py",
    "parameters": {
      "rates": "gov.local.ny.nyc.tax.income.rates",
      "calc": "gov.local.ny.nyc.tax.income.rates.separate.calc"
    },
    "variables": [
      "filing_status",
      "nyc_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC income tax before credits"
  },
  "nyc_non_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/nyc_non_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nyc_household_credit",
      "nyc_unincorporated_business_credit"
    ],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC non-refundable tax credits",
    "adds_from_parameter": "gov.local.ny.nyc.tax.income.credits.non_refundable"
  },
  "nyc_income_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/nyc_income_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [
      "nyc_income_tax_before_credits",
      "nyc_non_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC income tax"
  },
  "nyc_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/nyc_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nyc_income_tax_before_refundable_credits"
    ],
    "subtracts": [
      "nyc_refundable_credits"
    ],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC income tax"
  },
  "nyc_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/nyc_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nyc_cdcc",
      "nyc_eitc",
      "nyc_school_tax_credit"
    ],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC refundable credits",
    "adds_from_parameter": "gov.local.ny.nyc.tax.income.credits.refundable"
  },
  "nyc_taxable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/taxable_income/nyc_taxable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ny_taxable_income"
    ],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC taxable income"
  },
  "nyc_eitc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/nyc_eitc.py",
    "parameters": {
      "p": "gov.local.ny.nyc.tax.income.credits.eitc",
      "calc": "gov.local.ny.nyc.tax.income.credits.eitc.reduction_threshold.calc",
      "percent_reduction": "gov.local.ny.nyc.tax.income.credits.eitc.percent_reduction",
      "percent": "gov.local.ny.nyc.tax.income.credits.eitc.percent",
      "reduction_threshold": "gov.local.ny.nyc.tax.income.credits.eitc.reduction_threshold"
    },
    "variables": [
      "ny_agi",
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC EITC"
  },
  "nyc_unincorporated_business_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/unincorporated_business/nyc_unincorporated_business_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC Unincorporated Business Credit"
  },
  "nyc_household_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/household/nyc_household_credit.py",
    "parameters": {
      "p": "gov.local.ny.nyc.tax.income.credits.household",
      "calc": "gov.local.ny.nyc.tax.income.credits.household.other_per_dependent.calc",
      "flat_amount": "gov.local.ny.nyc.tax.income.credits.household.flat_amount",
      "separate_per_dependent": "gov.local.ny.nyc.tax.income.credits.household.separate_per_dependent",
      "other_per_dependent": "gov.local.ny.nyc.tax.income.credits.household.other_per_dependent"
    },
    "variables": [
      "filing_status",
      "tax_unit_size",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC Household Credit"
  },
  "nyc_cdcc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/cdcc/nyc_cdcc.py",
    "parameters": {},
    "variables": [
      "ny_cdcc",
      "nyc_cdcc_applicable_percentage",
      "nyc_cdcc_share_qualifying_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nyc_cdcc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC Child and Dependent Care Credit"
  },
  "nyc_cdcc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/cdcc/nyc_cdcc_eligible.py",
    "parameters": {
      "p": "gov.local.ny.nyc.tax.income.credits.cdcc",
      "phaseout_end": "gov.local.ny.nyc.tax.income.credits.cdcc.phaseout_end"
    },
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for NYC CDCC"
  },
  "nyc_cdcc_age_restricted_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/cdcc/nyc_cdcc_age_restricted_expenses.py",
    "parameters": {
      "p": "gov.local.ny.nyc.tax.income.credits.cdcc",
      "child_age_restriction": "gov.local.ny.nyc.tax.income.credits.cdcc.child_age_restriction"
    },
    "variables": [
      "tax_unit_children",
      "age",
      "tax_unit_childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Childcare expenses for children under NYC CDCC age limit"
  },
  "nyc_cdcc_share_qualifying_childcare_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/cdcc/nyc_cdcc_share_qualifying_childcare_expenses.py",
    "parameters": {},
    "variables": [
      "tax_unit_childcare_expenses",
      "nyc_cdcc_age_restricted_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Share of Childcare expenses that qualify towards NYC CDCC",
    "unit": "/1"
  },
  "nyc_cdcc_applicable_percentage": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/cdcc/nyc_cdcc_applicable_percentage.py",
    "parameters": {
      "p": "gov.local.ny.nyc.tax.income.credits.cdcc",
      "phaseout_end": "gov.local.ny.nyc.tax.income.credits.cdcc.phaseout_end",
      "phaseout_start": "gov.local.ny.nyc.tax.income.credits.cdcc.phaseout_start",
      "max_rate": "gov.local.ny.nyc.tax.income.credits.cdcc.max_rate"
    },
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC CDCC rate"
  },
  "nyc_school_credit_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/school/nyc_school_credit_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "adjusted_gross_income"
    ],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC income used for school tax credit"
  },
  "nyc_school_tax_credit_rate_reduction_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/school/nyc_school_tax_credit_rate_reduction_amount.py",
    "parameters": {
      "p": "gov.local.ny.nyc.tax.income.credits.school.rate_reduction",
      "calc": "gov.local.ny.nyc.tax.income.credits.school.rate_reduction.amount.surviving_spouse.calc",
      "amount": "gov.local.ny.nyc.tax.income.credits.school.rate_reduction.amount"
    },
    "variables": [
      "filing_status",
      "nyc_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nyc_school_tax_credit_rate_reduction_amount_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC School Tax Credit Rate Reduction Amount"
  },
  "nyc_school_tax_credit_fixed_amount_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/school/nyc_school_tax_credit_fixed_amount_eligible.py",
    "parameters": {
      "p": "gov.local.ny.nyc.tax.income.credits.school.fixed",
      "income_limit": "gov.local.ny.nyc.tax.income.credits.school.fixed.income_limit"
    },
    "variables": [
      "nyc_school_credit_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for NYC School Tax Credit Fixed Amount"
  },
  "nyc_school_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/school/nyc_school_tax_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nyc_school_tax_credit_fixed_amount",
      "nyc_school_tax_credit_rate_reduction_amount"
    ],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC School Tax Credit"
  },
  "nyc_school_tax_credit_rate_reduction_amount_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/school/nyc_school_tax_credit_rate_reduction_amount_eligible.py",
    "parameters": {
      "p": "gov.local.ny.nyc.tax.income.credits.school.rate_reduction",
      "income_limit": "gov.local.ny.nyc.tax.income.credits.school.rate_reduction.income_limit"
    },
    "variables": [
      "nyc_taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_nyc",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for NYC School Tax Credit Rate Reduction Amount"
  },
  "nyc_school_tax_credit_fixed_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ny/nyc/tax/income/credits/school/nyc_school_tax_credit_fixed_amount.py",
    "parameters": {
      "p": "gov.local.ny.nyc.tax.income.credits.school.fixed",
      "amount": "gov.local.ny.nyc.tax.income.credits.school.fixed.amount"
    },
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "nyc_school_tax_credit_fixed_amount_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "NYC School Tax Credit Fixed Amount"
  },
  "local_sales_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/tax/sales/local_sales_tax.py",
    "parameters": {},
    "variables": [
      "state_sales_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Local sales tax"
  },
  "local_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/tax/income/local_income_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "nyc_income_tax"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Local income tax"
  },
  "in_riv": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/in_riv.py",
    "parameters": {},
    "variables": [
      "county_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is in Riverside County"
  },
  "in_la": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/in_la.py",
    "parameters": {},
    "variables": [
      "county_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is in Los Angeles County"
  },
  "in_ala": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/ala/in_ala.py",
    "parameters": {},
    "variables": [
      "county_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is in Alameda County"
  },
  "ca_ala_general_assistance": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/ala/ga/ca_ala_general_assistance.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_ala_general_assistance_base_amount"
    ],
    "subtracts": [
      "ca_ala_general_assistance_countable_income"
    ],
    "defined_for": "ca_ala_general_assistance_income_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alameda County General Assistance base amount"
  },
  "ca_ala_general_assistance_base_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/ala/ga/ca_ala_general_assistance_base_amount.py",
    "parameters": {
      "p": "gov.local.ca.ala.general_assistance.amount",
      "married": "gov.local.ca.ala.general_assistance.amount.married",
      "single": "gov.local.ca.ala.general_assistance.amount.single"
    },
    "variables": [
      "ca_ala_general_assistance_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_ala_general_assistance_eligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alameda County General Assistance base amount"
  },
  "ca_ala_general_assistance_countable_income_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/ala/ga/income/ca_ala_general_assistance_countable_income_person.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income",
      "social_security",
      "unemployment_compensation",
      "veterans_benefits"
    ],
    "subtracts": [],
    "defined_for": "is_tax_unit_head_or_spouse",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Alameda County General Assistance based on age requirements",
    "adds_from_parameter": "gov.local.ca.ala.general_assistance.countable_income.sources"
  },
  "ca_ala_general_assistance_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/ala/ga/income/ca_ala_general_assistance_countable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_ala_general_assistance_countable_income_person"
    ],
    "subtracts": [],
    "defined_for": "in_ala",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Alameda County General Assistance based on age requirements"
  },
  "ca_ala_general_assistance_personal_property_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/ala/ga/eligibility/ca_ala_general_assistance_personal_property_eligible.py",
    "parameters": {
      "p": "gov.local.ca.ala.general_assistance.personal_property",
      "limit": "gov.local.ca.ala.general_assistance.personal_property.limit"
    },
    "variables": [
      "personal_property"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_ala",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets property limit for Alameda County General Assistance"
  },
  "ca_ala_general_assistance_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/ala/ga/eligibility/ca_ala_general_assistance_eligible_person.py",
    "parameters": {},
    "variables": [
      "ca_ala_general_assistance_immigration_status_eligible",
      "is_tax_unit_head_or_spouse",
      "ca_ala_general_assistance_age_eligible",
      "ssi",
      "ca_ala_general_assistance_personal_property_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_ala",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for Alameda County General Assistance"
  },
  "ca_ala_general_assistance_age_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/ala/ga/eligibility/ca_ala_general_assistance_age_eligible.py",
    "parameters": {
      "p": "gov.local.ca.ala.general_assistance",
      "age_threshold": "gov.local.ca.ala.general_assistance.age_threshold"
    },
    "variables": [
      "monthly_age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_ala",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Alameda County General Assistance based on age requirements"
  },
  "ca_ala_general_assistance_immigration_status_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/ala/ga/eligibility/ca_ala_general_assistance_immigration_status_eligible.py",
    "parameters": {
      "p": "gov.local.ca.ala.general_assistance",
      "qualified_immigration_status": "gov.local.ca.ala.general_assistance.qualified_immigration_status"
    },
    "variables": [
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_ala",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Alameda County General Assistance due to immigration status"
  },
  "ca_ala_general_assistance_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/ala/ga/eligibility/ca_ala_general_assistance_income_eligible.py",
    "parameters": {},
    "variables": [
      "ca_ala_general_assistance_countable_income",
      "ca_ala_general_assistance_base_amount"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_ala",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for Alameda County General Assistance based on income requirements"
  },
  "la_general_relief_net_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/la_general_relief_net_income.py",
    "parameters": {},
    "variables": [
      "spm_unit_paycheck_withholdings",
      "la_general_relief_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Net Income under the Los Angeles County General Relief after state and federal deductions"
  },
  "la_general_relief_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/la_general_relief_gross_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "veterans_benefits",
      "unemployment_compensation",
      "ca_state_disability_insurance",
      "irs_employment_income",
      "self_employment_income",
      "ssi",
      "social_security",
      "tanf"
    ],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Gross Income sources accounted for under the Los Angeles County General Relief",
    "adds_from_parameter": "gov.local.ca.la.general_relief.income_sources"
  },
  "la_general_relief_recipient": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/la_general_relief_recipient.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Recipient of the Los Angeles County General Relief"
  },
  "la_general_relief_base_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/la_general_relief_base_amount.py",
    "parameters": {
      "p": "gov.local.ca.la.general_relief",
      "married": "gov.local.ca.la.general_relief.amount.married",
      "single": "gov.local.ca.la.general_relief.amount.single",
      "max": "gov.local.ca.la.general_relief.phase_out.max",
      "start": "gov.local.ca.la.general_relief.phase_out.start",
      "amount": "gov.local.ca.la.general_relief.amount",
      "phase_out": "gov.local.ca.la.general_relief.phase_out"
    },
    "variables": [
      "la_general_relief_immigration_status_eligible_person",
      "is_married",
      "la_general_relief_recipient",
      "la_general_relief_net_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "la_general_relief_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Los Angeles County General Relief base amount"
  },
  "la_general_relief": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/la_general_relief.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "la_general_relief_base_amount"
    ],
    "subtracts": [
      "la_general_relief_rent_contribution"
    ],
    "defined_for": "la_general_relief_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Los Angeles County General Relief"
  },
  "ca_la_ez_save_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/dwp/ez_save/ca_la_ez_save_eligible.py",
    "parameters": {
      "p": "gov.local.ca.la.dwp.ez_save.eligibility",
      "fpg_limit_increase": "gov.local.ca.la.dwp.ez_save.eligibility.fpg_limit_increase"
    },
    "variables": [
      "ca_la_ez_save_fpg",
      "ca_la_ez_save_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County EZ Save program"
  },
  "ca_la_ez_save_fpg": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/dwp/ez_save/ca_la_ez_save_fpg.py",
    "parameters": {
      "p": "gov.local.ca.la.dwp.ez_save.eligibility",
      "p_fpg": "gov.hhs.fpg",
      "household_size_floor": "gov.local.ca.la.dwp.ez_save.eligibility.household_size_floor",
      "first_person": "gov.hhs.fpg.first_person",
      "additional_person": "gov.hhs.fpg.additional_person"
    },
    "variables": [
      "household_size",
      "state_group_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Los Angeles County EZ save federal poverty guideline",
    "description": "The federal poverty guideline used to determine LA ez save eligibility."
  },
  "ca_la_ez_save": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/dwp/ez_save/ca_la_ez_save.py",
    "parameters": {
      "p": "gov.local.ca.la.dwp.ez_save",
      "amount": "gov.local.ca.la.dwp.ez_save.amount"
    },
    "variables": [
      "pre_subsidy_electricity_expense"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_la_ez_save_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Los Angeles County EZ Save program"
  },
  "ca_la_ez_save_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/dwp/ez_save/ca_la_ez_save_countable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "irs_employment_income",
      "self_employment_income",
      "child_support_received",
      "alimony_income",
      "social_security",
      "ssi",
      "tanf",
      "snap",
      "veterans_benefits",
      "unemployment_compensation",
      "pension_income"
    ],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Los Angeles County EZ Save program countable income",
    "adds_from_parameter": "gov.local.ca.la.dwp.ez_save.income_sources"
  },
  "ca_la_expectant_parent_payment_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/dss/expectant_parent_payment/ca_la_expectant_parent_payment_eligible.py",
    "parameters": {
      "p": "gov.local.ca.la.dss.expectant_parent_payment",
      "min": "gov.local.ca.la.dss.expectant_parent_payment.pregnancy_month.min",
      "max": "gov.local.ca.la.dss.expectant_parent_payment.pregnancy_month.max",
      "pregnancy_month": "gov.local.ca.la.dss.expectant_parent_payment.pregnancy_month"
    },
    "variables": [
      "ca_foster_care_minor_dependent",
      "current_pregnancy_month"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County expectant parent payment"
  },
  "ca_la_expectant_parent_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/dss/expectant_parent_payment/ca_la_expectant_parent_payment.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_la_expectant_parent_payment_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Los Angeles County expectant parent payment",
    "adds_parameter_values": {
      "gov.local.ca.la.dss.expectant_parent_payment.amount": "$900"
    }
  },
  "ca_la_infant_supplement_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/dss/infant_supplement/ca_la_infant_supplement_eligible_person.py",
    "parameters": {},
    "variables": [
      "ca_foster_care_minor_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County infant supplement"
  },
  "ca_la_infant_supplement": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/dss/infant_supplement/ca_la_infant_supplement.py",
    "parameters": {
      "p": "gov.local.ca.la.dss.infant_supplement",
      "group_home": "gov.local.ca.la.dss.infant_supplement.amount.group_home",
      "base": "gov.local.ca.la.dss.infant_supplement.amount.base",
      "amount": "gov.local.ca.la.dss.infant_supplement.amount"
    },
    "variables": [
      "is_child",
      "ca_la_infant_supplement_eligible_person",
      "is_in_foster_care_group_home"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Los Angeles County infant supplement"
  },
  "la_general_relief_home_value_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/eligibility/la_general_relief_home_value_eligible.py",
    "parameters": {
      "p": "gov.local.ca.la.general_relief.eligibility.limit",
      "home_value": "gov.local.ca.la.general_relief.eligibility.limit.home_value"
    },
    "variables": [
      "assessed_property_value"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County General Relief based on the home value requirements"
  },
  "la_general_relief_disability_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/eligibility/la_general_relief_disability_eligible.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_disabled",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County General Relief based on the disability requirements"
  },
  "la_general_relief_motor_vehicle_value_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/eligibility/la_general_relief_motor_vehicle_value_eligible.py",
    "parameters": {
      "p": "gov.local.ca.la.general_relief.eligibility.limit.motor_vehicle",
      "homeless": "gov.local.ca.la.general_relief.eligibility.limit.motor_vehicle.value.homeless",
      "resident": "gov.local.ca.la.general_relief.eligibility.limit.motor_vehicle.value.resident",
      "value": "gov.local.ca.la.general_relief.eligibility.limit.motor_vehicle.value",
      "cap": "gov.local.ca.la.general_relief.eligibility.limit.motor_vehicle.cap"
    },
    "variables": [
      "household_vehicles_owned",
      "household_vehicles_value",
      "lives_in_vehicle"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County General Relief based on the motor vehicle value requirements"
  },
  "la_general_relief_personal_property_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/eligibility/la_general_relief_personal_property_eligible.py",
    "parameters": {
      "p": "gov.local.ca.la.general_relief.eligibility.limit",
      "personal_property": "gov.local.ca.la.general_relief.eligibility.limit.personal_property"
    },
    "variables": [
      "personal_property"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County General Relief based on the personal property value requirements"
  },
  "la_general_relief_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/eligibility/la_general_relief_eligible.py",
    "parameters": {},
    "variables": [
      "la_general_relief_disability_eligible",
      "la_general_relief_home_value_eligible",
      "la_general_relief_age_eligible",
      "la_general_relief_personal_property_eligible",
      "la_general_relief_cash_asset_eligible",
      "la_general_relief_motor_vehicle_value_eligible",
      "la_general_relief_net_income_eligible",
      "la_general_relief_immigration_status_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County General Relief"
  },
  "la_general_relief_age_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/eligibility/la_general_relief_age_eligible.py",
    "parameters": {
      "p": "gov.local.ca.la.general_relief.eligibility",
      "age_threshold": "gov.local.ca.la.general_relief.eligibility.age_threshold"
    },
    "variables": [
      "age_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County General Relief based on the age requirements"
  },
  "la_general_relief_rent_contribution": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/housing_subsidy/la_general_relief_rent_contribution.py",
    "parameters": {
      "p": "gov.local.ca.la.general_relief",
      "married": "gov.local.ca.la.general_relief.housing_subsidy.rent_contribution.married",
      "single": "gov.local.ca.la.general_relief.housing_subsidy.rent_contribution.single",
      "rent_contribution": "gov.local.ca.la.general_relief.housing_subsidy.rent_contribution",
      "housing_subsidy": "gov.local.ca.la.general_relief.housing_subsidy"
    },
    "variables": [
      "is_married",
      "la_general_relief_housing_subsidy"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "la_general_relief_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Los Angeles County General Relief rent contribution"
  },
  "la_general_relief_housing_subsidy": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/housing_subsidy/la_general_relief_housing_subsidy.py",
    "parameters": {
      "p": "gov.local.ca.la.general_relief.housing_subsidy",
      "married": "gov.local.ca.la.general_relief.housing_subsidy.amount.married",
      "single": "gov.local.ca.la.general_relief.housing_subsidy.amount.single",
      "amount": "gov.local.ca.la.general_relief.housing_subsidy.amount"
    },
    "variables": [
      "is_married",
      "la_general_relief_rent_contribution",
      "rent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "la_general_relief_housing_subsidy_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Los Angeles County General Relief Housing Subsidy"
  },
  "la_general_relief_housing_subsidy_base_amount_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/housing_subsidy/eligibility/la_general_relief_housing_subsidy_base_amount_eligible.py",
    "parameters": {
      "p": "gov.local.ca.la.general_relief.housing_subsidy.rent_contribution",
      "married": "gov.local.ca.la.general_relief.housing_subsidy.rent_contribution.married",
      "single": "gov.local.ca.la.general_relief.housing_subsidy.rent_contribution.single"
    },
    "variables": [
      "is_married",
      "la_general_relief_base_amount"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "la_general_relief_eligible",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County General Relief Housing Subsidy based on the base amount requirements"
  },
  "la_general_relief_housing_subsidy_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/housing_subsidy/eligibility/la_general_relief_housing_subsidy_eligible.py",
    "parameters": {},
    "variables": [
      "la_general_relief_housing_subsidy_program_eligible",
      "is_homeless",
      "la_general_relief_housing_subsidy_base_amount_eligible",
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "la_general_relief_eligible",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County General Relief Housing Subsidy"
  },
  "la_general_relief_housing_subsidy_program_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/housing_subsidy/eligibility/la_general_relief_housing_subsidy_program_eligible.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "la_general_relief_eligible",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County General Relief Housing Subsidy based on the program eligibility"
  },
  "la_general_relief_immigration_status_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/eligibility/immigration/la_general_relief_immigration_status_eligible.py",
    "parameters": {},
    "variables": [
      "la_general_relief_immigration_status_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County General Relief based on the immigration status requirements"
  },
  "la_general_relief_immigration_status_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/eligibility/immigration/la_general_relief_immigration_status_eligible_person.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible Person for the Los Angeles County General Relief based on the immigration status requirements"
  },
  "la_general_relief_cash_asset_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/eligibility/cash/la_general_relief_cash_asset_eligible.py",
    "parameters": {},
    "variables": [
      "la_general_relief_cash_asset_limit",
      "spm_unit_cash_assets"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County General Relief based on the cash asset requirements"
  },
  "la_general_relief_cash_asset_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/eligibility/cash/la_general_relief_cash_asset_limit.py",
    "parameters": {
      "p": "gov.local.ca.la.general_relief.eligibility.limit.cash",
      "married": "gov.local.ca.la.general_relief.eligibility.limit.cash.applicant.married",
      "single": "gov.local.ca.la.general_relief.eligibility.limit.cash.applicant.single",
      "recipient": "gov.local.ca.la.general_relief.eligibility.limit.cash.recipient",
      "applicant": "gov.local.ca.la.general_relief.eligibility.limit.cash.applicant"
    },
    "variables": [
      "is_married",
      "la_general_relief_recipient"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Limit for the Los Angeles County General Relief cash asset requirements"
  },
  "la_general_relief_net_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/eligibility/net_income/la_general_relief_net_income_eligible.py",
    "parameters": {},
    "variables": [
      "la_general_relief_net_income_limit",
      "la_general_relief_net_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Los Angeles County General Relief based on the net income requirements"
  },
  "la_general_relief_net_income_limit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/la/general_relief/eligibility/net_income/la_general_relief_net_income_limit.py",
    "parameters": {
      "p": "gov.local.ca.la.general_relief.eligibility.limit.income",
      "married": "gov.local.ca.la.general_relief.eligibility.limit.income.applicant.married",
      "single": "gov.local.ca.la.general_relief.eligibility.limit.income.applicant.single",
      "recipient": "gov.local.ca.la.general_relief.eligibility.limit.income.recipient",
      "applicant": "gov.local.ca.la.general_relief.eligibility.limit.income.applicant"
    },
    "variables": [
      "is_married",
      "la_general_relief_recipient"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Limit for the Los Angeles County General Relief net income requirements"
  },
  "ca_sf_wftc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/sf/wftc/ca_sf_wftc.py",
    "parameters": {
      "p": "gov.local.ca.sf.wftc",
      "amount": "gov.local.ca.sf.wftc.amount"
    },
    "variables": [
      "county_str",
      "ca_eitc_eligible",
      "eitc_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.CA",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "San Francisco Working Families Tax Credit"
  },
  "ca_riv_liheap_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/liheap/ca_riv_liheap_countable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income",
      "alimony_income",
      "child_support_received",
      "pension_income",
      "unemployment_compensation",
      "social_security",
      "ssi",
      "ca_tanf",
      "ca_state_supplement"
    ],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County Low Income Home Energy Assistance Program (LIHEAP) countable income",
    "adds_from_parameter": "gov.local.ca.riv.cap.liheap.countable_income.sources"
  },
  "ca_riv_liheap_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/liheap/ca_riv_liheap_eligible.py",
    "parameters": {
      "p": "gov.hhs.liheap",
      "smi_limit": "gov.hhs.liheap.smi_limit"
    },
    "variables": [
      "hhs_smi",
      "ca_riv_liheap_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the California Riverside County LIHEAP"
  },
  "ca_riv_general_relief_budget_unit_size": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/ca_riv_general_relief_budget_unit_size.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "spm_unit_size"
    ],
    "subtracts": [
      "ca_riv_general_relief_ineligible_person"
    ],
    "defined_for": "in_riv",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County General Relief budget unit size"
  },
  "ca_riv_general_relief": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/ca_riv_general_relief.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_riv_general_relief_needs_standards",
      "ca_riv_general_relief_special_needs_amount"
    ],
    "subtracts": [
      "ca_riv_general_relief_countable_income"
    ],
    "defined_for": "ca_riv_general_relief_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County General Relief"
  },
  "ca_riv_share_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/share/ca_riv_share_countable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income",
      "alimony_income",
      "child_support_received",
      "pension_income",
      "unemployment_compensation",
      "social_security",
      "ssi",
      "ca_tanf"
    ],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County Sharing Households Assist Riverside's Energy program (SHARE) countable income",
    "adds_from_parameter": "gov.local.ca.riv.cap.share.countable_income.sources"
  },
  "ca_riv_share_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/share/ca_riv_share_eligible.py",
    "parameters": {
      "p": "gov.local.ca.riv.cap.share",
      "income_limit": "gov.local.ca.riv.cap.share.income_limit"
    },
    "variables": [
      "spm_unit_fpg",
      "ca_riv_share_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Riverside County Sharing Households Assist Riverside's Energy program (SHARE)"
  },
  "ca_riv_share_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/share/ca_riv_share_payment.py",
    "parameters": {
      "p": "gov.local.ca.riv.cap.share.payment",
      "electricity": "gov.local.ca.riv.cap.share.payment.electricity",
      "water": "gov.local.ca.riv.cap.share.payment.water",
      "trash": "gov.local.ca.riv.cap.share.payment.trash"
    },
    "variables": [
      "pre_subsidy_electricity_expense",
      "trash_expense",
      "ca_riv_share_electricity_emergency_payment",
      "water_expense"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_riv_share_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County Sharing Households Assist Riverside's Energy program (SHARE) payment"
  },
  "ca_riv_share_eligible_for_emergency_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/share/emergency_payment/ca_riv_share_eligible_for_emergency_payment.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM Unit has urgent notice and/or disconnection notice under Riverside County SHARE program"
  },
  "ca_riv_share_electricity_emergency_payment": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/share/emergency_payment/ca_riv_share_electricity_emergency_payment.py",
    "parameters": {
      "p": "gov.local.ca.riv.cap.share.payment",
      "electricity_emergency": "gov.local.ca.riv.cap.share.payment.electricity_emergency"
    },
    "variables": [
      "ca_riv_share_eligible_for_emergency_payment"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_riv_share_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County Sharing Households Assist Riverside's Energy program (SHARE) electric emergency payment"
  },
  "ca_riv_general_relief_countable_property_value": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/property/ca_riv_general_relief_countable_property_value.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "spm_unit_cash_assets",
      "ca_riv_general_relief_countable_vehicle_value",
      "personal_property"
    ],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County General Relief countable property value",
    "adds_from_parameter": "gov.local.ca.riv.general_relief.property.sources"
  },
  "ca_riv_general_relief_countable_vehicle_value": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/property/ca_riv_general_relief_countable_vehicle_value.py",
    "parameters": {
      "p": "gov.local.ca.riv.general_relief.property.vehicle_exemption",
      "amount": "gov.local.ca.riv.general_relief.property.vehicle_exemption.amount"
    },
    "variables": [
      "household_vehicles_value"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County General Relief countable vehicle value"
  },
  "ca_riv_general_relief_special_needs_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/payment/ca_riv_general_relief_special_needs_amount.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County General Relief special needs amount",
    "adds_parameter_values": {
      "gov.local.ca.riv.general_relief.needs_standards.special_needs.transportation": "$30"
    }
  },
  "ca_riv_general_relief_needs_standards": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/payment/ca_riv_general_relief_needs_standards.py",
    "parameters": {
      "p": "gov.local.ca.riv.general_relief.needs_standards",
      "housing": "gov.local.ca.riv.general_relief.needs_standards.housing",
      "personal_needs": "gov.local.ca.riv.general_relief.needs_standards.personal_needs",
      "food": "gov.local.ca.riv.general_relief.needs_standards.food"
    },
    "variables": [
      "ca_riv_general_relief_budget_unit_size",
      "housing_cost"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County General Relief needs standards"
  },
  "ca_riv_general_relief_excluded_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/income/ca_riv_general_relief_excluded_income.py",
    "parameters": {},
    "variables": [
      "ca_riv_general_relief_countable_income_person",
      "ca_riv_general_relief_budget_unit_size",
      "spm_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "ca_riv_general_relief_ineligible_person",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Income amount excluded from ineligible household members due to proration under Riverside County General Relief Program"
  },
  "ca_riv_general_relief_countable_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/income/ca_riv_general_relief_countable_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_riv_general_relief_countable_income_person"
    ],
    "subtracts": [
      "ca_riv_general_relief_excluded_income"
    ],
    "defined_for": "in_riv",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County General Relief countable income"
  },
  "ca_riv_general_relief_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/income/ca_riv_general_relief_unearned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "farm_income",
      "interest_income",
      "social_security",
      "ca_state_disability_insurance",
      "unemployment_compensation",
      "veterans_benefits"
    ],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County General Relief unearned income per person",
    "adds_from_parameter": "gov.local.ca.riv.general_relief.income.sources.unearned"
  },
  "ca_riv_general_relief_countable_income_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/income/ca_riv_general_relief_countable_income_person.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ca_riv_general_relief_net_earned_income",
      "ca_riv_general_relief_unearned_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Person's countable income before proration"
  },
  "ca_riv_general_relief_immigration_status_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/eligibility/ca_riv_general_relief_immigration_status_eligible.py",
    "parameters": {
      "p": "gov.local.ca.riv.general_relief",
      "qualified_immigration_status": "gov.local.ca.riv.general_relief.qualified_immigration_status"
    },
    "variables": [
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Riverside County General Relief due to immigration status"
  },
  "ca_riv_general_relief_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/eligibility/ca_riv_general_relief_income_eligible.py",
    "parameters": {},
    "variables": [
      "ca_riv_general_relief_needs_standards",
      "ca_riv_general_relief_countable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Riverside County General Relief due to income"
  },
  "ca_riv_general_relief_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/eligibility/ca_riv_general_relief_eligible.py",
    "parameters": {
      "p": "gov.local.ca.riv.general_relief",
      "age_threshold": "gov.local.ca.riv.general_relief.age_threshold"
    },
    "variables": [
      "ca_riv_general_relief_immigration_status_eligible",
      "monthly_age",
      "ca_riv_general_relief_property_eligible",
      "ca_riv_general_relief_meets_work_requirements",
      "ca_riv_general_relief_income_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the Riverside County General Relief"
  },
  "ca_riv_general_relief_meets_work_requirements": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/eligibility/ca_riv_general_relief_meets_work_requirements.py",
    "parameters": {
      "p": "gov.local.ca.riv.general_relief.work_exempted_age",
      "younger": "gov.local.ca.riv.general_relief.work_exempted_age.younger",
      "older": "gov.local.ca.riv.general_relief.work_exempted_age.older"
    },
    "variables": [
      "monthly_age",
      "is_full_time_student",
      "is_in_secondary_school",
      "self_employment_income",
      "employment_income",
      "is_incapable_of_self_care"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets work requirements for the Riverside County General Relief"
  },
  "ca_riv_general_relief_property_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/eligibility/ca_riv_general_relief_property_eligible.py",
    "parameters": {
      "p": "gov.local.ca.riv.general_relief.property",
      "limit": "gov.local.ca.riv.general_relief.property.limit"
    },
    "variables": [
      "ca_riv_general_relief_countable_property_value"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Meets property limit for Riverside County General Relief"
  },
  "ca_riv_general_relief_ineligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/eligibility/ca_riv_general_relief_ineligible_person.py",
    "parameters": {},
    "variables": [
      "ca_riv_general_relief_immigration_status_eligible",
      "ca_riv_general_relief_meets_work_requirements",
      "ssi",
      "ca_tanf"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Ineligible person for the Riverside County General Relief"
  },
  "ca_riv_general_relief_net_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/income/earned/ca_riv_general_relief_net_earned_income.py",
    "parameters": {},
    "variables": [
      "ca_riv_general_relief_earned_income",
      "ca_riv_general_relief_earned_income_deductions"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County GA net earned income after deductions"
  },
  "ca_riv_general_relief_earned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/income/earned/ca_riv_general_relief_earned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income",
      "rental_income"
    ],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County General Relief earned income per person",
    "adds_from_parameter": "gov.local.ca.riv.general_relief.income.sources.earned"
  },
  "ca_riv_general_relief_earned_income_deductions": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/ca/riv/general_relief/income/earned/ca_riv_general_relief_earned_income_deductions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "state_withheld_income_tax",
      "employee_social_security_tax",
      "employee_medicare_tax",
      "additional_medicare_tax",
      "traditional_ira_contributions"
    ],
    "subtracts": [],
    "defined_for": "in_riv",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Riverside County General Relief earned income deductions",
    "adds_from_parameter": "gov.local.ca.riv.general_relief.income.deductions.sources"
  },
  "in_denver": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/co/denver/in_denver.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is in Denver County"
  },
  "has_co_denver_dhs_elderly_disabled": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/co/denver/dhs/has_co_denver_dhs_elderly_disabled.py",
    "parameters": {},
    "variables": [
      "is_disabled",
      "is_co_denver_dhs_elderly"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Whether the SPM unit has a person who meets Denver DHS definitions of elderly or disabled",
    "label": "Has Denver DHS elderly or disabled people"
  },
  "is_co_denver_dhs_elderly": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/co/denver/dhs/is_co_denver_dhs_elderly.py",
    "parameters": {
      "p": "gov.local.co.denver.dhs",
      "elderly_age_threshold": "gov.local.co.denver.dhs.elderly_age_threshold"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Is elderly per Denver DHS guidelines",
    "label": "Denver DHS elderly"
  },
  "co_denver_homeowner_property_tax_relief": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/co/denver/dhs/property_tax_relief/co_denver_homeowner_property_tax_relief.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_denver_property_tax_relief_homeowner_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Denver Property Tax Relief for homeowners",
    "adds_parameter_values": {
      "gov.local.co.denver.dhs.property_tax_relief.amount.homeowner": "$1,800"
    }
  },
  "co_denver_renter_property_tax_relief": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/co/denver/dhs/property_tax_relief/co_denver_renter_property_tax_relief.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "co_denver_property_tax_relief_renter_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Denver Property Tax Relief for renters",
    "adds_parameter_values": {
      "gov.local.co.denver.dhs.property_tax_relief.amount.renter": "$1,000"
    }
  },
  "co_denver_property_tax_relief_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/co/denver/dhs/property_tax_relief/co_denver_property_tax_relief_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employment_income",
      "self_employment_income",
      "alimony_income",
      "rental_income",
      "disability_benefits",
      "pension_income",
      "veterans_benefits",
      "interest_income",
      "dividend_income",
      "workers_compensation",
      "unemployment_compensation"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Denver Property Tax Relief income",
    "adds_from_parameter": "gov.local.co.denver.dhs.property_tax_relief.income_sources"
  },
  "co_denver_property_tax_relief": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/co/denver/dhs/property_tax_relief/co_denver_property_tax_relief.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "co_denver_homeowner_property_tax_relief",
      "co_denver_renter_property_tax_relief"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Denver Property Tax Relief"
  },
  "co_denver_property_tax_relief_homeowner_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/co/denver/dhs/property_tax_relief/eligibility/co_denver_property_tax_relief_homeowner_eligible.py",
    "parameters": {
      "p": "gov.local.co.denver.dhs",
      "homeowner": "gov.local.co.denver.dhs.property_tax_relief.ami_rate.homeowner",
      "ami_rate": "gov.local.co.denver.dhs.property_tax_relief.ami_rate",
      "property_tax_relief": "gov.local.co.denver.dhs.property_tax_relief"
    },
    "variables": [
      "hud_moderate_income_factor",
      "ami",
      "tax_unit_dependents",
      "real_estate_taxes",
      "has_co_denver_dhs_elderly_disabled",
      "co_denver_property_tax_relief_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_denver",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the homeowner Denver Property Tax Relief"
  },
  "co_denver_property_tax_relief_renter_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/local/co/denver/dhs/property_tax_relief/eligibility/co_denver_property_tax_relief_renter_eligible.py",
    "parameters": {
      "p": "gov.local.co.denver.dhs",
      "calc": "gov.local.co.denver.dhs.property_tax_relief.ami_rate.renter.calc",
      "renter": "gov.local.co.denver.dhs.property_tax_relief.ami_rate.renter",
      "ami_rate": "gov.local.co.denver.dhs.property_tax_relief.ami_rate",
      "property_tax_relief": "gov.local.co.denver.dhs.property_tax_relief"
    },
    "variables": [
      "hud_moderate_income_factor",
      "rent",
      "spm_unit_size",
      "ami",
      "has_co_denver_dhs_elderly_disabled",
      "co_denver_property_tax_relief_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_denver",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible for the renter Denver Property Tax Relief"
  },
  "income_elasticity_lsr": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/simulation/labor_supply_response/income_elasticity_lsr.py",
    "parameters": {},
    "variables": [
      "employment_income_before_lsr",
      "income_elasticity",
      "relative_income_change",
      "self_employment_income_before_lsr"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "income elasticity of labor supply response",
    "unit": "/1"
  },
  "substitution_elasticity_lsr": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/simulation/labor_supply_response/substitution_elasticity_lsr.py",
    "parameters": {},
    "variables": [
      "employment_income_before_lsr",
      "substitution_elasticity",
      "self_employment_income_before_lsr",
      "relative_wage_change"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "substitution elasticity of labor supply response",
    "unit": "/1"
  },
  "employment_income_behavioral_response": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/simulation/labor_supply_response/employment_income_behavioral_response.py",
    "parameters": {},
    "variables": [
      "employment_income_before_lsr",
      "labor_supply_behavioral_response",
      "self_employment_income_before_lsr"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "employment income behavioral response"
  },
  "relative_wage_change": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/simulation/labor_supply_response/relative_wage_change.py",
    "parameters": {
      "p": "gov.simulation.labor_supply_responses",
      "effective_wage_rate_change": "gov.simulation.labor_supply_responses.bounds.effective_wage_rate_change",
      "bounds": "gov.simulation.labor_supply_responses.bounds"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "relative wage change",
    "unit": "/1"
  },
  "relative_income_change": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/simulation/labor_supply_response/relative_income_change.py",
    "parameters": {
      "p": "gov.simulation.labor_supply_responses",
      "income_change": "gov.simulation.labor_supply_responses.bounds.income_change",
      "bounds": "gov.simulation.labor_supply_responses.bounds"
    },
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "relative income change",
    "unit": "/1"
  },
  "labor_supply_behavioral_response": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/simulation/labor_supply_response/labor_supply_behavioral_response.py",
    "parameters": {
      "p": "gov.simulation.labor_supply_responses",
      "income": "gov.simulation.labor_supply_responses.elasticities.income",
      "substitution": "gov.simulation.labor_supply_responses.elasticities.substitution",
      "all": "gov.simulation.labor_supply_responses.elasticities.substitution.all",
      "elasticities": "gov.simulation.labor_supply_responses.elasticities"
    },
    "variables": [
      "employment_income_before_lsr",
      "substitution_elasticity_lsr",
      "self_employment_income_before_lsr",
      "income_elasticity_lsr"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "earnings-related labor supply change"
  },
  "self_employment_income_behavioral_response": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/simulation/labor_supply_response/self_employment_income_behavioral_response.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "labor_supply_behavioral_response"
    ],
    "subtracts": [
      "employment_income_behavioral_response"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "self-employment income behavioral response"
  },
  "substitution_elasticity": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/simulation/labor_supply_response/substitution_elasticity.py",
    "parameters": {
      "p": "gov.simulation.labor_supply_responses.elasticities.substitution",
      "all": "gov.simulation.labor_supply_responses.elasticities.substitution.all",
      "by_position_and_decile": "gov.simulation.labor_supply_responses.elasticities.substitution.by_position_and_decile",
      "secondary": "gov.simulation.labor_supply_responses.elasticities.substitution.by_position_and_decile.secondary",
      "primary": "gov.simulation.labor_supply_responses.elasticities.substitution.by_position_and_decile.primary",
      "_children": "gov.simulation.labor_supply_responses.elasticities.substitution.by_position_and_decile.primary._children"
    },
    "variables": [
      "employment_income_before_lsr",
      "self_employment_income_before_lsr"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "substitution elasticity of labor supply",
    "unit": "/1"
  },
  "income_elasticity": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/simulation/labor_supply_response/income_elasticity.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "income elasticity of labor supply",
    "unit": "/1",
    "adds_parameter_values": {
      "gov.simulation.labor_supply_responses.elasticities.income": "0.0%"
    }
  },
  "aca_ptc_phase_out_rate": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/ptc/aca_ptc_phase_out_rate.py",
    "parameters": {
      "p": "gov.aca.ptc_phase_out_rate",
      "thresholds": "gov.aca.ptc_phase_out_rate.thresholds",
      "amounts": "gov.aca.ptc_phase_out_rate.amounts"
    },
    "variables": [
      "aca_magi_fraction"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "ACA PTC phase-out rate (i.e., IRS Form 8962 'applicable figure')",
    "unit": "/1"
  },
  "premium_tax_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/ptc/premium_tax_credit.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "aca_ptc"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Affordable Care Act Premium Tax Credit"
  },
  "aca_ptc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/ptc/aca_ptc.py",
    "parameters": {},
    "variables": [
      "aca_magi",
      "aca_ptc_phase_out_rate",
      "slcsp",
      "takes_up_aca_if_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_aca_ptc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "ACA premium tax credit for tax unit"
  },
  "slcsp_family_tier_applies": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/slspc/slcsp_family_tier_applies.py",
    "parameters": {
      "p": "gov.aca",
      "family_tier_states": "gov.aca.family_tier_states"
    },
    "variables": [
      "state_code"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "ACA family tier applies, rather than age curves"
  },
  "slcsp_rating_area_default": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/slspc/slcsp_rating_area_default.py",
    "parameters": {},
    "variables": [
      "county_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Second-lowest ACA silver-plan cost rating area outside of LA County"
  },
  "slcsp_age_0": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/slspc/slcsp_age_0.py",
    "parameters": {
      "p": "gov.aca",
      "state_rating_area_cost": "gov.aca.state_rating_area_cost"
    },
    "variables": [
      "state_code",
      "slcsp_rating_area"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Second-lowest ACA silver-plan for a person aged 0"
  },
  "slcsp_rating_area_la_county": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/slspc/slcsp_rating_area_la_county.py",
    "parameters": {
      "p": "gov.aca",
      "la_county_rating_area": "gov.aca.la_county_rating_area"
    },
    "variables": [
      "three_digit_zip_code",
      "in_la"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "in_la",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Second-lowest ACA silver-plan cost rating area in Los Angeles County"
  },
  "slcsp_age_curve_amount_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/slspc/slcsp_age_curve_amount_person.py",
    "parameters": {
      "p": "gov.aca.age_curves",
      "calc": "gov.aca.age_curves.default.calc",
      "al": "gov.aca.age_curves.al",
      "dc": "gov.aca.age_curves.dc",
      "ma": "gov.aca.age_curves.ma",
      "mn": "gov.aca.age_curves.mn",
      "ms": "gov.aca.age_curves.ms",
      "ut": "gov.aca.age_curves.ut",
      "default": "gov.aca.age_curves.default"
    },
    "variables": [
      "monthly_age",
      "state_code_str",
      "slcsp_age_0",
      "slcsp_age_curve_applies"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_aca_ptc_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Second-lowest ACA silver-plan cost, for people in age curve states"
  },
  "slcsp_rating_area": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/slspc/slcsp_rating_area.py",
    "parameters": {},
    "variables": [
      "slcsp_rating_area_default",
      "in_la",
      "slcsp_rating_area_la_county"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Second-lowest ACA silver-plan cost rating area"
  },
  "slcsp_family_tier_amount": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/slspc/slcsp_family_tier_amount.py",
    "parameters": {},
    "variables": [
      "slcsp_age_0",
      "slcsp_family_tier_multiplier"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "slcsp_family_tier_applies",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "ACA family tier premium amount"
  },
  "slcsp": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/slspc/slcsp.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "slcsp_age_curve_amount_person",
      "slcsp_family_tier_amount"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Second-lowest ACA silver-plan cost"
  },
  "slcsp_family_tier_multiplier": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/slspc/slcsp_family_tier_multiplier.py",
    "parameters": {
      "p": "gov.aca.family_tier_ratings",
      "ny": "gov.aca.family_tier_ratings.ny",
      "vt": "gov.aca.family_tier_ratings.vt"
    },
    "variables": [
      "state_code",
      "slcsp_family_tier_category"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "slcsp_family_tier_applies",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "ACA family tier multiplier for premium calculation",
    "unit": "/1"
  },
  "slcsp_age_curve_applies": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/slspc/slcsp_age_curve_applies.py",
    "parameters": {},
    "variables": [
      "slcsp_family_tier_applies"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "ACA age curve applies, rather than family tier"
  },
  "slcsp_family_tier_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/slspc/slcsp_family_tier_category.py",
    "parameters": {
      "max_child_age": "gov.aca.slcsp.max_child_age"
    },
    "variables": [
      "monthly_age",
      "state_code_str",
      "is_aca_ptc_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "slcsp_family_tier_applies",
    "value_type": "Enum",
    "possible_values": "FamilyTierCategory",
    "enum_options": [
      {
        "key": "INDIVIDUAL_AGE_RATED",
        "value": "Individual age rated"
      },
      {
        "key": "ONE_ADULT",
        "value": "One_adult"
      },
      {
        "key": "TWO_ADULTS",
        "value": "Two_adults"
      },
      {
        "key": "ONE_ADULT_AND_ONE_OR_MORE_CHILDREN",
        "value": "One_adult_and_one_or_more_children"
      },
      {
        "key": "TWO_ADULTS_AND_ONE_OR_MORE_CHILDREN",
        "value": "Two_adults_and_one_or_more_children"
      },
      {
        "key": "CHILD_ONLY",
        "value": "Child_only"
      }
    ],
    "label": "ACA family tier category for premium calculation"
  },
  "aca_magi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/eligibility/aca_magi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "medicaid_magi"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "ACA-related modified AGI for this tax unit"
  },
  "has_esi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/eligibility/has_esi.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person currently has ESI"
  },
  "is_aca_ptc_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/eligibility/is_aca_ptc_eligible.py",
    "parameters": {
      "p": "gov.aca",
      "calc": "gov.aca.ptc_income_eligibility.calc",
      "max_child_age": "gov.aca.slcsp.max_child_age",
      "max_child_count": "gov.aca.max_child_count",
      "ptc_income_eligibility": "gov.aca.ptc_income_eligibility",
      "slcsp": "gov.aca.slcsp"
    },
    "variables": [
      "is_medicaid_eligible",
      "filing_status",
      "age",
      "aca_child_index",
      "is_chip_eligible",
      "is_medicare_eligible",
      "aca_magi_fraction",
      "is_aca_eshi_eligible",
      "taxpayer_has_itin",
      "is_aca_ptc_immigration_status_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is eligible for ACA premium tax credit and pays ACA premium"
  },
  "is_aca_ptc_immigration_status_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/eligibility/is_aca_ptc_immigration_status_eligible.py",
    "parameters": {
      "p": "gov.aca",
      "ineligible_immigration_statuses": "gov.aca.ineligible_immigration_statuses"
    },
    "variables": [
      "immigration_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is eligible for ACA premium tax credit and pays ACA premium due to immigration status"
  },
  "offered_aca_disqualifying_esi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/eligibility/offered_aca_disqualifying_esi.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is offered ACA disqualifying esi"
  },
  "aca_magi_fraction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/eligibility/aca_magi_fraction.py",
    "parameters": {},
    "variables": [
      "aca_magi",
      "tax_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "ACA-related modified AGI as fraction of prior-year FPL",
    "description": "ACA-related MAGI as fraction of federal poverty line.Documentation on use of prior-year FPL in the following reference:  title: 2022 IRS Form 8962 (ACA PTC) instructions, Line 4  href: https://www.irs.gov/pub/irs-pdf/i8962.pdf#page=7Documentation on truncation of fraction in the following reference:  title: 2022 IRS Form 8962 instructions, Line 5 Worksheet 2  href: https://www.irs.gov/pub/irs-pdf/i8962.pdf#page=8"
  },
  "is_aca_eshi_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/eligibility/is_aca_eshi_eligible.py",
    "parameters": {},
    "variables": [
      "offered_aca_disqualifying_esi",
      "has_esi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is eligible for employer-sponsored health insurance under ACA rules"
  },
  "aca_child_index": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/aca/eligibility/aca_child_index.py",
    "parameters": {},
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Index of child in tax unit (1 = oldest)"
  },
  "pell_grant_countable_assets": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/pell_grant_countable_assets.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant countable assets"
  },
  "pell_grant_formula": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/pell_grant_formula.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "is_tax_unit_spouse",
      "tax_unit_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "PellGrantFormula",
    "enum_options": [
      {
        "key": "A",
        "value": "A"
      },
      {
        "key": "B",
        "value": "B"
      },
      {
        "key": "C",
        "value": "C"
      }
    ],
    "label": "Pell Grant formula"
  },
  "pell_grant_calculation_method": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/pell_grant_calculation_method.py",
    "parameters": {},
    "variables": [
      "tax_unit_id"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "PellGrantCalculationMethod",
    "enum_options": [
      {
        "key": "EFC",
        "value": "efc"
      },
      {
        "key": "SAI",
        "value": "sai"
      }
    ],
    "label": "Pell Grant calculation method"
  },
  "pell_grant": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/pell_grant.py",
    "parameters": {
      "p": "gov.ed.pell_grant",
      "max": "gov.ed.pell_grant.amount.max",
      "min": "gov.ed.pell_grant.amount.min",
      "months_in_school_year": "gov.ed.pell_grant.months_in_school_year",
      "amount": "gov.ed.pell_grant.amount"
    },
    "variables": [
      "pell_grant_eligibility_type",
      "pell_grant_sai",
      "pell_grant_uses_efc",
      "pell_grant_months_in_school",
      "cost_of_attending_college",
      "pell_grant_uses_sai",
      "pell_grant_efc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant"
  },
  "pell_grant_months_in_school": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/pell_grant_months_in_school.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant months of year student is in school"
  },
  "pell_grant_dependents_in_college": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/efc/pell_grant_dependents_in_college.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_dependent",
      "is_full_time_college_student"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant dependents in college"
  },
  "pell_grant_efc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/efc/pell_grant_efc.py",
    "parameters": {
      "zero_efc_max": "gov.ed.pell_grant.efc.automatic_zero"
    },
    "variables": [
      "pell_grant_formula",
      "pell_grant_dependent_contribution",
      "pell_grant_head_contribution",
      "pell_grant_primary_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant expected family contribution"
  },
  "pell_grant_uses_efc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/efc/pell_grant_uses_efc.py",
    "parameters": {},
    "variables": [
      "pell_grant_calculation_method"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant uses the expected family contribution"
  },
  "pell_grant_simplified_formula_applies": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/efc/pell_grant_simplified_formula_applies.py",
    "parameters": {
      "p": "gov.ed.pell_grant.efc.simplified",
      "income_limit": "gov.ed.pell_grant.efc.simplified.income_limit",
      "benefits": "gov.ed.pell_grant.efc.simplified.benefits",
      "applies": "gov.ed.pell_grant.efc.simplified.applies"
    },
    "variables": [
      "pell_grant_primary_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Use Pell Grant simplified formula"
  },
  "pell_grant_head_allowances": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/head/pell_grant_head_allowances.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant head allowances"
  },
  "pell_grant_head_contribution": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/head/pell_grant_head_contribution.py",
    "parameters": {
      "p": "gov.ed.pell_grant.head",
      "calc": "gov.ed.pell_grant.head.marginal_rate.calc",
      "min_contribution": "gov.ed.pell_grant.head.min_contribution",
      "marginal_rate": "gov.ed.pell_grant.head.marginal_rate",
      "negative_rate": "gov.ed.pell_grant.head.negative_rate"
    },
    "variables": [
      "pell_grant_contribution_from_assets",
      "pell_grant_dependents_in_college",
      "pell_grant_uses_efc",
      "pell_grant_formula",
      "pell_grant_head_available_income",
      "pell_grant_uses_sai"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant head contribution"
  },
  "pell_grant_head_assets": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/head/pell_grant_head_assets.py",
    "parameters": {},
    "variables": [
      "pell_grant_countable_assets",
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant head assets"
  },
  "pell_grant_head_available_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/head/pell_grant_head_available_income.py",
    "parameters": {
      "p": "gov.ed.pell_grant.head",
      "income_assessment_rate": "gov.ed.pell_grant.head.income_assessment_rate"
    },
    "variables": [
      "pell_grant_formula",
      "pell_grant_head_allowances",
      "pell_grant_primary_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant head available income"
  },
  "pell_grant_sai": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/sai/pell_grant_sai.py",
    "parameters": {
      "p": "gov.ed.pell_grant.sai",
      "min_sai": "gov.ed.pell_grant.sai.limits.min_sai",
      "max_sai": "gov.ed.pell_grant.sai.limits.max_sai",
      "limits": "gov.ed.pell_grant.sai.limits"
    },
    "variables": [
      "pell_grant_eligibility_type",
      "pell_grant_dependent_contribution",
      "pell_grant_head_contribution",
      "pell_grant_formula"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant student aid index"
  },
  "pell_grant_uses_sai": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/sai/pell_grant_uses_sai.py",
    "parameters": {},
    "variables": [
      "pell_grant_calculation_method"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant uses the student aid index"
  },
  "pell_grant_dependent_available_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/dependent/pell_grant_dependent_available_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant dependent available income"
  },
  "pell_grant_dependent_allowances": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/dependent/pell_grant_dependent_allowances.py",
    "parameters": {
      "ipa": "gov.ed.pell_grant.dependent.ipa"
    },
    "variables": [
      "pell_grant_dependent_other_allowances",
      "pell_grant_head_available_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant dependent allowances"
  },
  "pell_grant_dependent_other_allowances": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/dependent/pell_grant_dependent_other_allowances.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant dependent other allowances"
  },
  "pell_grant_dependent_contribution": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/dependent/pell_grant_dependent_contribution.py",
    "parameters": {
      "p": "gov.ed.pell_grant.dependent",
      "income_assessment_rate": "gov.ed.pell_grant.dependent.income_assessment_rate",
      "asset_assessment_rate": "gov.ed.pell_grant.dependent.asset_assessment_rate"
    },
    "variables": [
      "pell_grant_simplified_formula_applies",
      "pell_grant_countable_assets",
      "pell_grant_dependent_available_income",
      "pell_grant_dependent_allowances"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant dependent contribution"
  },
  "pell_grant_household_type": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/sai/eligibility_type/pell_grant_household_type.py",
    "parameters": {},
    "variables": [
      "tax_unit_is_joint",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "PellGrantHouseholdType",
    "enum_options": [
      {
        "key": "DEPENDENT_SINGLE",
        "value": "Dependent single"
      },
      {
        "key": "DEPENDENT_NOT_SINGLE",
        "value": "Dependent not single"
      },
      {
        "key": "INDEPENDENT_SINGLE",
        "value": "Independent single"
      },
      {
        "key": "INDEPENDENT_NOT_SINGLE",
        "value": "Independent not single"
      }
    ],
    "label": "Pell Grant household type"
  },
  "pell_grant_eligibility_type": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/ed/pell_grant/sai/eligibility_type/pell_grant_eligibility_type.py",
    "parameters": {},
    "variables": [
      "pell_grant_max_fpg_percent_limit",
      "pell_grant_min_fpg_percent_limit",
      "adjusted_gross_income",
      "tax_unit_fpg"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "PellGrantEligibilityType",
    "enum_options": [
      {
        "key": "MAXIMUM",
        "value": "maximum"
      },
      {
        "key": "MINIMUM",
        "value": "minimum"
      },
      {
        "key": "INELIGIBLE",
        "value": "ineligible"
      }
    ],
    "label": "Maximum, minimum, or ineligible for Pell Grant"
  },
  "pr_agi_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/pr_agi_person.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico adjusted gross income person level"
  },
  "pr_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/pr_gross_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "pr_gross_income_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico gross income"
  },
  "pr_agi": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/pr_agi.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico adjusted gross income"
  },
  "pr_gross_income_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/pr_gross_income_person.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "irs_employment_income",
      "self_employment_income",
      "partnership_s_corp_income",
      "taxable_retirement_distributions",
      "capital_gains",
      "taxable_interest_income",
      "dividend_income",
      "taxable_pension_income",
      "miscellaneous_income",
      "alimony_income",
      "farm_income",
      "rental_income",
      "taxable_unemployment_compensation",
      "taxable_social_security",
      "illicit_income",
      "estate_income",
      "debt_relief"
    ],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico gross income",
    "adds_from_parameter": "gov.territories.pr.tax.income.gross_income.sources"
  },
  "pr_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/credits/pr_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "pr_low_income_credit",
      "pr_compensatory_low_income_credit",
      "pr_earned_income_credit"
    ],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico refundable credits",
    "adds_from_parameter": "gov.territories.pr.tax.income.credits.refundable"
  },
  "pr_earned_income_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/credits/earned_income/pr_earned_income_credit.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.credits.earned_income",
      "calc": "gov.territories.pr.tax.income.credits.earned_income.phase_out.threshold.joint.calc",
      "rate": "gov.territories.pr.tax.income.credits.earned_income.phase_out.rate",
      "threshold": "gov.territories.pr.tax.income.credits.earned_income.phase_out.threshold",
      "max_amount": "gov.territories.pr.tax.income.credits.earned_income.max_amount",
      "phase_out": "gov.territories.pr.tax.income.credits.earned_income.phase_out",
      "phase_in_rate": "gov.territories.pr.tax.income.credits.earned_income.phase_in_rate",
      "single": "gov.territories.pr.tax.income.credits.earned_income.phase_out.threshold.single",
      "joint": "gov.territories.pr.tax.income.credits.earned_income.phase_out.threshold.joint"
    },
    "variables": [
      "pr_gross_income_person",
      "filing_status",
      "eitc_child_count",
      "is_tax_unit_head_or_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "pr_earned_income_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico earned income credit"
  },
  "pr_earned_income_credit_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/credits/earned_income/pr_earned_income_credit_eligible_person.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.credits.earned_income",
      "separate_filer": "gov.territories.pr.tax.income.credits.earned_income.eligibility.separate_filer",
      "min": "gov.territories.pr.tax.income.credits.earned_income.eligibility.min",
      "limit": "gov.territories.pr.tax.income.credits.earned_income.unearned_income.limit",
      "eligibility": "gov.territories.pr.tax.income.credits.earned_income.eligibility",
      "unearned_income": "gov.territories.pr.tax.income.credits.earned_income.unearned_income"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "pr_earned_income_credit_unearned_income",
      "filing_status",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico earned income credit eligible person"
  },
  "pr_earned_income_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/credits/earned_income/pr_earned_income_credit_eligible.py",
    "parameters": {},
    "variables": [
      "pr_earned_income_credit_eligible_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico earned income credit eligible unit"
  },
  "pr_earned_income_credit_unearned_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/credits/earned_income/pr_earned_income_credit_unearned_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "interest_income",
      "dividend_income",
      "rental_income",
      "capital_gains",
      "child_support_received"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico earned income credit unearned income",
    "adds_from_parameter": "gov.territories.pr.tax.income.credits.earned_income.unearned_income.sources"
  },
  "pr_refundable_ctc": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/credits/refundable_ctc/pr_refundable_ctc.py",
    "parameters": {},
    "variables": [
      "pr_refundable_ctc_social_security_tax",
      "refundable_ctc",
      "uncapped_ssi",
      "eitc",
      "ctc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico refundable Child Tax Credit"
  },
  "pr_refundable_ctc_social_security_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/credits/refundable_ctc/pr_refundable_ctc_social_security_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employee_social_security_tax",
      "employee_medicare_tax",
      "unreported_payroll_tax",
      "self_employment_tax_ald",
      "additional_medicare_tax"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico social security and medicare taxes for refundable Child Tax Credit",
    "adds_from_parameter": "gov.irs.credits.ctc.refundable.social_security.add"
  },
  "pr_compensatory_low_income_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/credits/low_income/pr_compensatory_low_income_credit.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.credits.low_income.amount",
      "calc": "gov.territories.pr.tax.income.credits.low_income.amount.additional.calc",
      "additional": "gov.territories.pr.tax.income.credits.low_income.amount.additional"
    },
    "variables": [
      "pension_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "pr_low_income_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Additional compensatory low income credit"
  },
  "pr_low_income_credit": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/credits/low_income/pr_low_income_credit.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.credits.low_income.amount",
      "base": "gov.territories.pr.tax.income.credits.low_income.amount.base"
    },
    "variables": [
      "pr_low_income_credit_eligible_people"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "pr_low_income_credit_eligible",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico low income credit"
  },
  "pr_low_income_credit_eligible_people": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/credits/low_income/pr_low_income_credit_eligible_people.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "pr_low_income_credit_eligible_person"
    ],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible people for the Puerto Rico low income credit"
  },
  "pr_low_income_credit_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/credits/low_income/pr_low_income_credit_eligible.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.credits.low_income",
      "calc": "gov.territories.pr.tax.income.credits.low_income.income_limit.calc",
      "income_limit": "gov.territories.pr.tax.income.credits.low_income.income_limit"
    },
    "variables": [
      "pr_gross_income_person",
      "pr_low_income_credit_eligible_people"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "pr_low_income_credit_eligible_people",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible unit for the Puerto Rico low income credit"
  },
  "pr_low_income_credit_eligible_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/credits/low_income/pr_low_income_credit_eligible_person.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.credits.low_income",
      "age_threshold": "gov.territories.pr.tax.income.credits.low_income.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "pr_earned_income_credit",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Eligible person for the Puerto Rico low income credit"
  },
  "pr_medical_expense_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/taxable_income/deductions/pr_medical_expense_deduction.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.taxable_income.deductions.medical",
      "floor": "gov.territories.pr.tax.income.taxable_income.deductions.medical.floor"
    },
    "variables": [
      "pr_agi",
      "medical_out_of_pocket_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico medical expense deduction"
  },
  "pr_charitable_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/taxable_income/deductions/pr_charitable_deduction.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.taxable_income.deductions.charity",
      "floor": "gov.territories.pr.tax.income.taxable_income.deductions.charity.floor"
    },
    "variables": [
      "charitable_cash_donations",
      "pr_agi",
      "charitable_non_cash_donations"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico charitable deduction"
  },
  "pr_casualty_loss_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/taxable_income/deductions/pr_casualty_loss_deduction.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.taxable_income.deductions.casualty_loss",
      "separate_percentage": "gov.territories.pr.tax.income.taxable_income.deductions.casualty_loss.separate_percentage"
    },
    "variables": [
      "casualty_loss",
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico casualty loss deduction"
  },
  "pr_mortgage_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/taxable_income/deductions/pr_mortgage_deduction.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.taxable_income.deductions.mortgage",
      "floor": "gov.territories.pr.tax.income.taxable_income.deductions.mortgage.floor",
      "max": "gov.territories.pr.tax.income.taxable_income.deductions.mortgage.max",
      "age_threshold": "gov.territories.pr.tax.income.taxable_income.deductions.mortgage.age_threshold"
    },
    "variables": [
      "is_tax_unit_head_or_spouse",
      "age",
      "pr_agi",
      "deductible_mortgage_interest"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico home mortgage deduction"
  },
  "pr_education_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/taxable_income/deductions/education/pr_education_deduction.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.taxable_income.deductions.education",
      "max": "gov.territories.pr.tax.income.taxable_income.deductions.education.max"
    },
    "variables": [
      "pr_education_deduction_beneficiary_count",
      "investment_in_529_plan"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico education contribution deduction"
  },
  "pr_education_deduction_beneficiary_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/taxable_income/deductions/education/pr_education_deduction_beneficiary_count.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.taxable_income.deductions.education",
      "age_threshold": "gov.territories.pr.tax.income.taxable_income.deductions.education.age_threshold"
    },
    "variables": [
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico education contribution deduction beneficiary count"
  },
  "pr_retirement_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/taxable_income/deductions/retirement/pr_retirement_deduction.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.taxable_income.deductions.retirement",
      "max": "gov.territories.pr.tax.income.taxable_income.deductions.retirement.max"
    },
    "variables": [
      "roth_ira_contributions",
      "traditional_ira_contributions",
      "pr_agi_person"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "pr_retirement_deduction_eligibility",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico retirement contribution deduction"
  },
  "pr_retirement_deduction_eligibility": {
    "file_path": "../policyengine-us/policyengine_us/variables/gov/territories/pr/tax/income/taxable_income/deductions/retirement/pr_retirement_deduction_eligibility.py",
    "parameters": {
      "p": "gov.territories.pr.tax.income.taxable_income.deductions.retirement",
      "age_threshold": "gov.territories.pr.tax.income.taxable_income.deductions.retirement.age_threshold"
    },
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "StateCode.PR",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Puerto Rico retirement contribution deduction eligibility"
  },
  "illicit_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/illicit_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "illicit income",
    "description": "Income from bribes, corrupt gifts or other illegal activities."
  },
  "fsla_overtime_salary_threshold": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/fsla_overtime_salary_threshold.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "FSLA applicable salary threshold to determine eligibility for overtime pay"
  },
  "spm_unit_cash_assets": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/assets/spm_unit_cash_assets.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit cash assets"
  },
  "net_worth": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/assets/net_worth.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "net worth"
  },
  "spm_unit_assets": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/assets/spm_unit_assets.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit assets"
  },
  "spouse_separate_adjusted_gross_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/tax_unit/spouse_separate_adjusted_gross_income.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Spouse's tax unit's adjusted gross income if they file separately"
  },
  "net_capital_gains": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/tax_unit/net_capital_gains.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "long_term_capital_gains",
      "short_term_capital_gains"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Net capital gains before loss limitation"
  },
  "property_sales_net_capital_gain": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/tax_unit/property_sales_net_capital_gain.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Net capital gains from sale or exchange of property"
  },
  "us_govt_interest": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/tax_unit/us_govt_interest.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "us_govt_interest_person"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Interest on U.S. government obligations",
    "description": "Interest on U.S. government obligations such as U.S. savings bonds, U.S. Treasury bills, and U.S. government certificates."
  },
  "form_4972_lumpsum_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/tax_unit/form_4972_lumpsum_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Lump-sum distributions reported on IRS Form 4972",
    "description": "Lump-sum distributions reported on IRS Form 4972."
  },
  "spm_unit_income_decile": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_income_decile.py",
    "parameters": {},
    "variables": [
      "spm_unit_weight",
      "spm_unit_oecd_equiv_net_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Income decile",
    "description": "The income decile of the SPM unit, person-weighted and using OECD-equivalised net income"
  },
  "spm_unit_energy_subsidy": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_energy_subsidy.py",
    "parameters": {
      "disabled_programs": "simulation.disabled_programs"
    },
    "variables": [
      "spm_unit_energy_subsidy_reported"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit school energy subsidy"
  },
  "experienced_covid_income_loss": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/experienced_covid_income_loss.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Experienced Covid income loss",
    "description": "Whether the SPM unit experienced a loss of income due to COVID-19 since February 2020"
  },
  "in_deep_poverty": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/in_deep_poverty.py",
    "parameters": {},
    "variables": [
      "deep_poverty_gap"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "in deep poverty",
    "description": "Whether a household is in deep poverty."
  },
  "spm_unit_energy_subsidy_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_energy_subsidy_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit school energy subsidy (reported)"
  },
  "spm_unit_snap": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_snap.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit SNAP subsidy"
  },
  "spm_unit_market_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_market_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "market_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Market income"
  },
  "spm_unit_capped_housing_subsidy_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_capped_housing_subsidy_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit capped housing subsidy"
  },
  "spm_unit_wic": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_wic.py",
    "parameters": {
      "disabled_programs": "simulation.disabled_programs"
    },
    "variables": [
      "wic",
      "spm_unit_wic_reported"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit WIC"
  },
  "in_poverty": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/in_poverty.py",
    "parameters": {},
    "variables": [
      "poverty_gap"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "in poverty",
    "description": "Whether a household is in poverty."
  },
  "spm_unit_is_in_spm_poverty": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_is_in_spm_poverty.py",
    "parameters": {},
    "variables": [
      "spm_unit_net_income",
      "spm_unit_spm_threshold"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit in SPM poverty"
  },
  "spm_unit_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_benefits.py",
    "parameters": {},
    "variables": [
      "social_security",
      "ssi",
      "high_efficiency_electric_home_rebate",
      "free_school_meals",
      "residential_efficiency_electrification_rebate",
      "reduced_price_school_meals",
      "co_oap",
      "co_ccap_subsidy",
      "basic_income",
      "snap",
      "tanf",
      "ma_state_supplement",
      "ak_energy_relief",
      "ca_cvrp",
      "unemployment_compensation",
      "wic",
      "ny_drive_clean_rebate",
      "co_state_supplement",
      "spm_unit_broadband_subsidy",
      "spm_unit_energy_subsidy"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Benefits"
  },
  "spm_unit_wic_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_wic_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit reported WIC"
  },
  "spm_unit_capped_housing_subsidy": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_capped_housing_subsidy.py",
    "parameters": {
      "disabled_programs": "simulation.disabled_programs"
    },
    "variables": [
      "spm_unit_capped_housing_subsidy_reported"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Housing subsidies"
  },
  "spm_unit_spm_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_spm_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "child_support_expense",
      "medical_out_of_pocket_expenses",
      "spm_unit_capped_work_childcare_expenses"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit's SPM expenses (other than taxes)"
  },
  "spm_unit_net_income_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_net_income_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Reported net income"
  },
  "deep_poverty_line": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/deep_poverty_line.py",
    "parameters": {},
    "variables": [
      "poverty_line"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "deep poverty line",
    "description": "Income threshold below which a household is considered to be in deep poverty."
  },
  "spm_unit_spm_threshold": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_spm_threshold.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit's SPM poverty threshold"
  },
  "spm_unit_paycheck_withholdings": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_paycheck_withholdings.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employee_payroll_tax",
      "state_withheld_income_tax",
      "income_tax_before_credits"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Paycheck withholdings of the SPM unit"
  },
  "poverty_gap": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/poverty_gap.py",
    "parameters": {},
    "variables": [
      "spm_unit_net_income",
      "spm_unit_spm_threshold"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "poverty gap",
    "description": "Difference between household income and poverty line."
  },
  "spm_unit_is_in_deep_spm_poverty": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_is_in_deep_spm_poverty.py",
    "parameters": {},
    "variables": [
      "spm_unit_net_income",
      "spm_unit_spm_threshold"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit in deep SPM poverty"
  },
  "spm_unit_net_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_net_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "spm_unit_market_income",
      "spm_unit_benefits"
    ],
    "subtracts": [
      "spm_unit_taxes",
      "spm_unit_spm_expenses"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Net income"
  },
  "spm_unit_taxes": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_taxes.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "spm_unit_payroll_tax",
      "spm_unit_self_employment_tax",
      "spm_unit_federal_tax",
      "spm_unit_state_tax",
      "flat_tax"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxes"
  },
  "deep_poverty_gap": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/deep_poverty_gap.py",
    "parameters": {},
    "variables": [
      "spm_unit_net_income",
      "deep_poverty_line"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "deep poverty gap",
    "description": "Difference between household income and deep poverty line."
  },
  "spm_unit_broadband_subsidy_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_broadband_subsidy_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit reported broadband subsidy"
  },
  "spm_unit_school_lunch_subsidy": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_school_lunch_subsidy.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit school lunch subsidy"
  },
  "poverty_line": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/poverty_line.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "spm_unit_spm_threshold"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "poverty line",
    "description": "Income threshold below which a household is considered to be in poverty."
  },
  "spm_unit_broadband_subsidy": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_broadband_subsidy.py",
    "parameters": {},
    "variables": [
      "spm_unit_broadband_subsidy_reported",
      "acp",
      "ebb"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit broadband subsidy"
  },
  "spm_unit_pell_grant": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/spm_unit/spm_unit_pell_grant.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "pell_grant"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pell Grant amount",
    "description": "SPM unit's Pell Grant educational subsidy"
  },
  "ssi_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/ssi_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI (reported)"
  },
  "fsla_overtime_occupation_exemption_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/fsla_overtime_occupation_exemption_category.py",
    "parameters": {},
    "variables": [
      "is_computer_scientist",
      "has_never_worked",
      "is_executive_administrative_professional",
      "is_military",
      "is_farmer_fisher"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "OvertimeExemptionCategory",
    "enum_options": [
      {
        "key": "NONE",
        "value": "No exemption category"
      },
      {
        "key": "NEVER_WORKED",
        "value": "Never worked"
      },
      {
        "key": "MILITARY",
        "value": "Military"
      },
      {
        "key": "EXECUTIVE_ADMINISTRATIVE",
        "value": "Executive, administrative, or professional"
      },
      {
        "key": "FARMER_FISHER",
        "value": "Farmer or fisher"
      },
      {
        "key": "COMPUTER_SCIENTIST",
        "value": "Computer scientist"
      }
    ],
    "label": "FSLA occupation categories for overtime exemption"
  },
  "monthly_hours_worked": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/monthly_hours_worked.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Average monthly hours worked",
    "unit": "hour"
  },
  "weekly_hours_worked": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/weekly_hours_worked.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "weekly_hours_worked_before_lsr",
      "weekly_hours_worked_behavioural_response"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "average weekly hours worked",
    "unit": "hour",
    "description": "Hours worked per week on average."
  },
  "hours_worked_last_week": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/hours_worked_last_week.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "weekly hours worked on the previous week",
    "unit": "hour"
  },
  "us_govt_interest_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/us_govt_interest_person.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Interest on U.S. government obligations for each person",
    "description": "Interest on U.S. government obligations such as U.S. savings bonds, U.S. Treasury bills, and U.S. government certificates, allocated to each person."
  },
  "is_eligible_for_fsla_overtime": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/is_eligible_for_fsla_overtime.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "is eligible for overtime pay"
  },
  "gambling_winnings": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/gambling_winnings.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Gambling winnings"
  },
  "employment_income_last_year": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/employment_income_last_year.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "employment income last year",
    "description": "Wages and salaries in prior year, including tips and commissions."
  },
  "is_paid_hourly": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/is_paid_hourly.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "is paid hourly"
  },
  "tip_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/tip_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tip income"
  },
  "gambling_losses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/gambling_losses.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Gambling losses"
  },
  "ssi_qualifying_quarters_earnings": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/ssi_qualifying_quarters_earnings.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "SSI Qualifying Quarters of Earnings",
    "description": "Number of qualifying quarters of earnings for SSI eligibility"
  },
  "dependent_care_employer_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/dependent_care_employer_benefits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Dependent care benefits received from an employer"
  },
  "fsla_overtime_premium": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/fsla_overtime_premium.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_eligible_for_fsla_overtime",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "premium income from overtime hours worked"
  },
  "household_refundable_tax_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_refundable_tax_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "income_tax_refundable_credits",
      "household_refundable_state_tax_credits"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "refundable tax credits"
  },
  "income_decile": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/income_decile.py",
    "parameters": {},
    "variables": [
      "household_income_decile"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "income decile",
    "description": "Decile of household net income. Households are sorted by disposable income, and then divided into 10 equally-populated groups."
  },
  "household_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "household_tax_before_refundable_credits"
    ],
    "subtracts": [
      "household_refundable_tax_credits"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "total tax after refundable credits",
    "description": "Total tax liability after refundable credits."
  },
  "household_state_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_state_benefits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "ma_state_supplement",
      "co_state_supplement",
      "co_oap",
      "co_child_care_subsidies",
      "ca_child_care_subsidies",
      "ca_cvrp",
      "ca_care",
      "ca_fera",
      "ca_la_ez_save",
      "ca_la_infant_supplement",
      "ca_la_expectant_parent_payment",
      "ca_capi",
      "ca_state_supplement",
      "ne_child_care_subsidies",
      "nc_scca",
      "ma_eaedc",
      "ma_tafdc"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Household state benefits",
    "description": "Benefits paid by State agencies.",
    "adds_from_parameter": "gov.household.household_state_benefits"
  },
  "household_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_benefits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "social_security",
      "ssi",
      "snap",
      "wic",
      "free_school_meals",
      "reduced_price_school_meals",
      "spm_unit_broadband_subsidy",
      "tanf",
      "high_efficiency_electric_home_rebate",
      "residential_efficiency_electrification_rebate",
      "unemployment_compensation",
      "head_start",
      "early_head_start",
      "basic_income",
      "spm_unit_capped_housing_subsidy",
      "household_state_benefits",
      "commodity_supplemental_food_program",
      "household_health_benefits"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "benefits",
    "adds_from_parameter": "gov.household.household_benefits"
  },
  "equiv_household_net_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/equiv_household_net_income.py",
    "parameters": {},
    "variables": [
      "household_size",
      "household_net_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "equivalised net income"
  },
  "person_in_poverty": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/person_in_poverty.py",
    "parameters": {},
    "variables": [
      "in_poverty"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "person in poverty",
    "description": "Whether person is in poverty"
  },
  "household_state_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_state_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "household State tax before refundable credits"
  },
  "household_net_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_net_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "household_market_income",
      "household_benefits",
      "household_refundable_tax_credits"
    ],
    "subtracts": [
      "household_tax_before_refundable_credits"
    ],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "net income"
  },
  "household_refundable_state_tax_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_refundable_state_tax_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "refundable State income tax credits"
  },
  "household_count_people": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_count_people.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of people",
    "unit": "person"
  },
  "household_market_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_market_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "market income",
    "description": "Income from non-government sources."
  },
  "household_tax_before_refundable_credits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_tax_before_refundable_credits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "employee_payroll_tax",
      "self_employment_tax",
      "income_tax_before_refundable_credits",
      "flat_tax",
      "household_state_tax_before_refundable_credits"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "total tax before refundable credits",
    "description": "Total tax liability before refundable credits."
  },
  "household_income_decile": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_income_decile.py",
    "parameters": {},
    "variables": [
      "household_net_income",
      "household_count_people",
      "household_weight"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "household income decile",
    "description": "Decile of household income (person-weighted)"
  },
  "household_local_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_local_benefits.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "co_denver_property_tax_relief"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Household local benefits",
    "description": "Benefits paid by local agencies.",
    "adds_from_parameter": "gov.household.household_local_benefits"
  },
  "household_health_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_health_benefits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Household health benefits"
  },
  "household_state_income_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/household/household_state_income_tax.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "spm_unit_state_tax_reported",
      "state_refundable_credits",
      "state_income_tax_before_refundable_credits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "household State tax"
  },
  "farm_rent_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/farm/farm_rent_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "farm rental income"
  },
  "farm_rent_income_would_be_qualified": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/farm/farm_rent_income_would_be_qualified.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Farm rent income would be qualified",
    "description": "Whether farm rental income would be considered qualified business income."
  },
  "farm_operations_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/farm/farm_operations_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "farm operations income",
    "description": "Income from active farming operations. Schedule F. Do not include this income in self-employment income."
  },
  "farm_operations_income_would_be_qualified": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/farm/farm_operations_income_would_be_qualified.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Farm operations income would be qualified",
    "description": "Whether farm operations income would be considered qualified business income."
  },
  "us_bonds_for_higher_ed": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/misc/us_bonds_for_higher_ed.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Income from U.S. bonds spent on higher education"
  },
  "miscellaneous_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/misc/miscellaneous_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Miscellaneous income"
  },
  "rental_income_would_be_qualified": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/misc/rental_income_would_be_qualified.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Rental income would be qualified",
    "description": "Whether rental income would be considered qualified business income."
  },
  "gi_cash_assistance": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/misc/gi_cash_assistance.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "guaranteed income / cash assistance income",
    "description": "Income from guaranteed income or cash assistance pilots"
  },
  "military_basic_pay": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/misc/military_basic_pay.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Military basic pay"
  },
  "strike_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/misc/strike_benefits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "strike benefits"
  },
  "rental_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/misc/rental_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "rental income",
    "description": "Income from rental of property"
  },
  "salt_refund_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/misc/salt_refund_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State and local tax refund income"
  },
  "debt_relief": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/misc/debt_relief.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Debt relief income",
    "description": "Income from discharge of indebtedness."
  },
  "alimony_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/misc/alimony_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alimony income"
  },
  "investment_income_elected_form_4952": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/misc/investment_income_elected_form_4952.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "investment income elected on Form 4952"
  },
  "estate_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/estate/estate_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "estate income"
  },
  "estate_income_would_be_qualified": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/estate/estate_income_would_be_qualified.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Estate income would be qualified",
    "description": "Whether income from estates would be considered qualified business income."
  },
  "interest_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/interest/interest_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_exempt_interest_income",
      "taxable_interest_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "interest income",
    "description": "Interest income from bonds, savings accounts, CDs, etc."
  },
  "tax_exempt_interest_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/interest/tax_exempt_interest_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "tax-exempt interest income"
  },
  "taxable_interest_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/interest/taxable_interest_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "taxable interest income"
  },
  "partnership_s_corp_income_would_be_qualified": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/self_employment/partnership_s_corp_income_would_be_qualified.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Partnership and S-corp income would be qualified",
    "description": "Whether income from partnerships and S corporations would be considered qualified business income."
  },
  "s_corp_self_employment_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/self_employment/s_corp_self_employment_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "S-Corp self-employment income",
    "description": "Partner self-employment earnings/loss (included in partnership_s_corp_income total)"
  },
  "self_employment_income_last_year": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/self_employment/self_employment_income_last_year.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "self-employment income last year",
    "description": "Self-employment income in prior year."
  },
  "business_is_qualified": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/self_employment/business_is_qualified.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Business is qualified",
    "description": "Whether all income from self-employment, partnerships and S-corporations is from qualified businesses. A qualified trade or business is any trade or business other than a specified service trade or business, or employment. The list of specified service trades can be found at https://www.law.cornell.edu/uscode/text/26/1202#e_3_A."
  },
  "self_employment_income_would_be_qualified": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/self_employment/self_employment_income_would_be_qualified.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employment income would be qualified",
    "description": "Whether self-employment income would be considered qualified business income."
  },
  "business_is_sstb": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/self_employment/business_is_sstb.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Business is SSTB",
    "description": "Whether all income from self-employment, partnerships and S-corporations is from qualified businesses. A qualified trade or business is any specified service trade or business, or employment. The list of specified service trades can be found at https://www.law.cornell.edu/uscode/text/26/1202#e_3_A."
  },
  "w2_wages_from_qualified_business": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/self_employment/w2_wages_from_qualified_business.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "W2 wages",
    "description": "Share of wages paid by this person to employees as part of a pass-through qualified business or trade."
  },
  "is_self_employed": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/self_employment/is_self_employed.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is self-employed"
  },
  "unadjusted_basis_qualified_property": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/self_employment/unadjusted_basis_qualified_property.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Unadjusted basis for qualified property",
    "description": "Share of unadjusted basis upon acquisition of all property held by qualified pass-through businesses."
  },
  "partnership_s_corp_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/self_employment/partnership_s_corp_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "partnership/S-corp income"
  },
  "veterans_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/general/veterans_benefits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Veterans benefits",
    "description": "Veterans benefits from past military service."
  },
  "personal_property": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/general/personal_property.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Personal property value"
  },
  "market_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/general/market_income.py",
    "parameters": {},
    "variables": [
      "rental_income",
      "dividend_income",
      "illicit_income",
      "gi_cash_assistance",
      "retirement_distributions",
      "self_employment_income",
      "miscellaneous_income",
      "capital_gains",
      "farm_income",
      "interest_income",
      "pension_income",
      "employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Market income",
    "description": "Income from all non-government sources"
  },
  "state_or_federal_salary": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/general/state_or_federal_salary.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "state or federal salary"
  },
  "disability_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/general/disability_benefits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "disability benefits",
    "description": "Disability benefits from employment (not Social Security), except for worker's compensation."
  },
  "military_service_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/general/military_service_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Military service income",
    "description": "Military pay from active duty, National Guard, and/or the reserve component of the armed forces."
  },
  "railroad_benefits": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/railroad_benefits.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Recieves any railroad benefits"
  },
  "tax_exempt_403b_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/tax_exempt_403b_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "tax-exempt 403(b) distributions",
    "description": "Tax-exempt distributions from 403(b) accounts (typically Roth)."
  },
  "taxable_pension_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/taxable_pension_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "taxable_public_pension_income",
      "taxable_private_pension_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "taxable pension income"
  },
  "tax_exempt_sep_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/tax_exempt_sep_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "tax-exempt SEP distributions"
  },
  "pension_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/pension_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_exempt_pension_income",
      "taxable_pension_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "pension income",
    "description": "Income from pensions, annuitities, life insurance or endowment contracts."
  },
  "military_retirement_pay": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/military_retirement_pay.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Military retirement pay",
    "description": "The benefits received under a United States military retirement plan, including survivor benefits."
  },
  "taxable_401k_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/taxable_401k_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable 401(k) distributions",
    "description": "Taxable distributions from 401k accounts (typically traditional)."
  },
  "taxable_sep_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/taxable_sep_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "taxable SEP distributions"
  },
  "taxable_federal_pension_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/taxable_federal_pension_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable federal pension income"
  },
  "retirement_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/retirement_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "taxable_retirement_distributions",
      "tax_exempt_retirement_distributions"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Retirement account distributions"
  },
  "keogh_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/keogh_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Keogh plan distributions"
  },
  "pension_survivors": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/pension_survivors.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pension and annuity income from survivors benefits"
  },
  "sep_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/sep_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "taxable_sep_distributions",
      "tax_exempt_sep_distributions"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SEP distributions"
  },
  "tax_exempt_retirement_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/tax_exempt_retirement_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_exempt_ira_distributions",
      "tax_exempt_401k_distributions",
      "tax_exempt_sep_distributions",
      "tax_exempt_403b_distributions"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax-exempt retirement account distributions"
  },
  "taxable_retirement_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/taxable_retirement_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "taxable_ira_distributions",
      "taxable_401k_distributions",
      "taxable_sep_distributions",
      "taxable_403b_distributions",
      "keogh_distributions"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable retirement account distributions"
  },
  "tax_exempt_private_pension_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/tax_exempt_private_pension_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "tax-exempt private pension income",
    "description": "Tax-exempt income from non-government employee pensions."
  },
  "private_pension_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/private_pension_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_exempt_private_pension_income",
      "taxable_private_pension_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "private pension income",
    "description": "Income from non-government employee pensions."
  },
  "retirement_benefits_from_ss_exempt_employment": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/retirement_benefits_from_ss_exempt_employment.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Retirement benefits amount from SS exempt employment",
    "description": "Amount of a recipient receive retirement benefits from SS exempt employment"
  },
  "tax_exempt_public_pension_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/tax_exempt_public_pension_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "tax-exempt public pension income",
    "description": "Tax-exempt income from government employee pensions."
  },
  "military_retirement_pay_survivors": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/military_retirement_pay_survivors.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Military retirement income paid to surviving spouses"
  },
  "tax_exempt_pension_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/tax_exempt_pension_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_exempt_public_pension_income",
      "tax_exempt_private_pension_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "tax-exempt pension income"
  },
  "tax_exempt_ira_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/tax_exempt_ira_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax-exempt IRA distributions",
    "description": "Tax-exempt distributions from individual retirement accounts (qualifying Roth distributions)."
  },
  "taxable_ira_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/taxable_ira_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable IRA distributions",
    "description": "Taxable distributions from individual retirement accounts (typically traditional IRAs)."
  },
  "public_pension_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/public_pension_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_exempt_public_pension_income",
      "taxable_public_pension_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "public pension income",
    "description": "Income from government employee pensions."
  },
  "tax_exempt_401k_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/tax_exempt_401k_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax-exempt 401(k) distributions",
    "description": "Tax-exempt distributions from 401(k) accounts (typically Roth)."
  },
  "taxable_private_pension_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/taxable_private_pension_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "taxable private pension income",
    "description": "Taxable income from non-government employee pensions."
  },
  "taxable_403b_distributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/taxable_403b_distributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable 403(b) distributions",
    "description": "Taxable distributions from 403b accounts (typically traditional)."
  },
  "taxable_public_pension_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/taxable_public_pension_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "taxable public pension income",
    "description": "Taxable income from government employee pensions."
  },
  "csrs_retirement_pay": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/retirement/csrs_retirement_pay.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Civil Service Retirement System (CSRS) retirement income",
    "description": "Retirement income from the federal Civil Service Retirement System."
  },
  "capital_losses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/capital_gains/capital_losses.py",
    "parameters": {},
    "variables": [
      "capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capital losses (expressed as a non-negative number)",
    "description": "Losses from transactions involving property."
  },
  "capital_gains": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/capital_gains/capital_gains.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "short_term_capital_gains",
      "long_term_capital_gains"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capital gains (both short-term and long-term)",
    "description": "Net gain from disposition of property."
  },
  "long_term_capital_gains_on_collectibles": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/capital_gains/long_term_capital_gains_on_collectibles.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Long-term capital gains on collectibles",
    "description": "Portion of capital_gains_28_percent_rate_gain associated with collectibles."
  },
  "short_term_capital_gains": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/capital_gains/short_term_capital_gains.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "short-term capital gains",
    "description": "Net gains made from sales of assets held for one year or less(losses are expressed as negative gains)."
  },
  "long_term_capital_gains": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/capital_gains/long_term_capital_gains.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "long_term_capital_gains_before_response",
      "capital_gains_behavioral_response"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "long-term capital gains",
    "description": "Net gains made from sales of assets held for more than one year (losses are expressed as negative gains)."
  },
  "long_term_capital_gains_on_small_business_stock": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/capital_gains/long_term_capital_gains_on_small_business_stock.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Long-term capital gains on small business stock sales, etc",
    "description": "Portion of capital_gains_28_percent_rate_gain not associated with collectibles."
  },
  "unrecaptured_section_1250_gain": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/capital_gains/unrecaptured_section_1250_gain.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Un-recaptured section 1250 gain"
  },
  "other_net_gain": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/capital_gains/other_net_gain.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Other net gains",
    "description": "Other net gain/loss from Form 4797"
  },
  "non_sch_d_capital_gains": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/capital_gains/non_sch_d_capital_gains.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capital gains not reported on Schedule D"
  },
  "qualified_reit_and_ptp_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/dividends/qualified_reit_and_ptp_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "REIT and PTP Income",
    "description": "REIT and Publically Traded Partnership Income. Part of the QBID calclulation."
  },
  "qualified_dividend_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/dividends/qualified_dividend_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "qualified dividend income"
  },
  "non_qualified_dividend_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/dividends/non_qualified_dividend_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "non-qualified dividend income"
  },
  "qualified_bdc_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/dividends/qualified_bdc_income.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Business Development Company dividend income",
    "description": "Business Development Company Dividend Income. Part of the QBID calculation."
  },
  "dividend_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/income/person/dividends/dividend_income.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "qualified_dividend_income",
      "non_qualified_dividend_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "ordinary dividend income",
    "description": "Qualified and non-qualified dividends"
  },
  "head_is_dependent_elsewhere": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/head_is_dependent_elsewhere.py",
    "parameters": {},
    "variables": [
      "claimed_as_dependent_on_another_return",
      "is_tax_unit_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is tax-unit head a dependent elsewhere",
    "description": "Whether the filer for this tax unit is claimed as a dependent in another tax unit."
  },
  "is_tax_unit_dependent": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/is_tax_unit_dependent.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a dependent in the tax unit"
  },
  "spouse_separate_tax_unit_size": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/spouse_separate_tax_unit_size.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Size of spouse's tax unit if they file separately"
  },
  "older_spouse_birth_year": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/older_spouse_birth_year.py",
    "parameters": {},
    "variables": [
      "greater_age_head_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Birth year of head or spouse of tax unit depending on which is greater",
    "description": "Birth year of taxpayer (i.e. primary adult) or spouse (i.e. secondary adult if present), depending on which is greater. ",
    "unit": "year"
  },
  "spouse_is_dependent_elsewhere": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/spouse_is_dependent_elsewhere.py",
    "parameters": {},
    "variables": [
      "claimed_as_dependent_on_another_return",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax-unit spouse is dependent elsewhere",
    "description": "Whether the spouse of the filer for this tax unit is claimed as a dependent in another tax unit."
  },
  "tax_unit_stillborn_children": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/tax_unit_stillborn_children.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of stillborn children in the filing year"
  },
  "military_disabled_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/military_disabled_spouse.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_spouse",
      "is_fully_disabled_service_connected_veteran"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit spouse is legally disabled as a result of military service"
  },
  "filing_status": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/filing_status.py",
    "parameters": {},
    "variables": [
      "tax_unit_married",
      "head_of_household_eligible",
      "is_separated",
      "surviving_spouse_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "FilingStatus",
    "enum_options": [
      {
        "key": "SINGLE",
        "value": "Single"
      },
      {
        "key": "JOINT",
        "value": "Joint"
      },
      {
        "key": "SEPARATE",
        "value": "Separate"
      },
      {
        "key": "HEAD_OF_HOUSEHOLD",
        "value": "Head of household"
      },
      {
        "key": "SURVIVING_SPOUSE",
        "value": "Surviving spouse"
      }
    ],
    "label": "Filing status for the tax unit"
  },
  "head_of_household_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/head_of_household_eligible.py",
    "parameters": {},
    "variables": [
      "tax_unit_married",
      "tax_unit_child_dependents",
      "surviving_spouse_eligible"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualifies for head of household filing status"
  },
  "tax_unit_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/tax_unit_count.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax units represented"
  },
  "cohabitating_spouses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/cohabitating_spouses.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Cohabitating spouses",
    "description": "Whether spouses in joint or separate tax units are cohabitating."
  },
  "greater_age_head_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/greater_age_head_spouse.py",
    "parameters": {},
    "variables": [
      "age_head",
      "age_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Age of head or spouse of tax unit depending on which is greater",
    "description": "Age in years of taxpayer (i.e. primary adult) or spouse (i.e. secondary adult if present), depending on which is greater. ",
    "unit": "year"
  },
  "separate_filer_itemizes": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/separate_filer_itemizes.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Separate filer itemizes",
    "description": "Whether the taxpayer in this tax unit has a spouse who files separately and itemizes deductions."
  },
  "is_tax_unit_head": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/is_tax_unit_head.py",
    "parameters": {},
    "variables": [
      "is_child",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Head of tax unit"
  },
  "is_tax_unit_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/is_tax_unit_spouse.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "age",
      "is_child",
      "is_separated"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Spouse of tax unit"
  },
  "blind_head": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/blind_head.py",
    "parameters": {},
    "variables": [
      "is_blind",
      "is_tax_unit_head"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit head is blind"
  },
  "military_disabled_head": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/military_disabled_head.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "is_fully_disabled_service_connected_veteran"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit head is legally disabled as a result of military service"
  },
  "taxpayer_has_itin": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/taxpayer_has_itin.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "has_itin"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit head or spouse has ITIN"
  },
  "head_is_disabled": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/head_is_disabled.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit head is disabled"
  },
  "disabled_tax_unit_head_or_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/disabled_tax_unit_head_or_spouse.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head_or_spouse",
      "is_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Head or Spouse of tax unit is disabled"
  },
  "age_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/age_spouse.py",
    "parameters": {},
    "variables": [
      "age",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Age of spouse of tax unit",
    "description": "Age in years of spouse (i.e. secondary adult if present)",
    "unit": "year"
  },
  "surviving_spouse_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/surviving_spouse_eligible.py",
    "parameters": {},
    "variables": [
      "is_surviving_spouse",
      "is_tax_unit_head",
      "tax_unit_married",
      "tax_unit_child_dependents"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualifies for surviving spouse filing status"
  },
  "tax_unit_grandparents": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/tax_unit_grandparents.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "is_grandparent_of_filer_or_spouse"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of grandparents in the tax unit"
  },
  "disabled_head": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/disabled_head.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "is_ssi_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit head is legally disabled"
  },
  "tax_unit_household_id": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/tax_unit_household_id.py",
    "parameters": {},
    "variables": [
      "household_id"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit household ID"
  },
  "age_head": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/age_head.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Age of head of tax unit",
    "description": "Age in years of taxpayer (i.e. primary adult)",
    "unit": "year"
  },
  "tax_unit_married": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/tax_unit_married.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit is married"
  },
  "tax_unit_children": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/tax_unit_children.py",
    "parameters": {},
    "variables": [
      "is_child"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of children in tax unit"
  },
  "tax_unit_parents": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/tax_unit_parents.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "is_parent_of_filer_or_spouse"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of parents in the tax unit"
  },
  "tax_unit_dependents": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/tax_unit_dependents.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "is_tax_unit_dependent"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of dependents in the tax unit"
  },
  "blind_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/blind_spouse.py",
    "parameters": {},
    "variables": [
      "is_blind",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit spouse is blind"
  },
  "disabled_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/disabled_spouse.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_spouse",
      "is_ssi_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit spouse is legally disabled"
  },
  "is_child_of_tax_head": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/is_child_of_tax_head.py",
    "parameters": {},
    "variables": [
      "is_child"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a child"
  },
  "is_tax_unit_head_or_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/is_tax_unit_head_or_spouse.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Head or Spouse of tax unit"
  },
  "tax_unit_child_dependents": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/tax_unit_child_dependents.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "is_child_dependent"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of child dependents in the tax unit"
  },
  "spouse_is_disabled": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/tax_unit/spouse_is_disabled.py",
    "parameters": {},
    "variables": [
      "is_disabled",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit spouse is disabled"
  },
  "is_surviving_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/marital_unit/is_surviving_spouse.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "surviving spouse",
    "description": "Whether the person is surviving spouse."
  },
  "person_marital_unit_id": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/marital_unit/person_marital_unit_id.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Marital unit ID"
  },
  "is_separated": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/marital_unit/is_separated.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Separated",
    "description": "Whether the person is separated from a partner."
  },
  "marital_unit_weight": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/marital_unit/marital_unit_weight.py",
    "parameters": {},
    "variables": [
      "household_weight"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Marital unit weight"
  },
  "marital_unit_id": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/marital_unit/marital_unit_id.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Marital unit ID"
  },
  "spm_unit_size": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/spm_unit/spm_unit_size.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit size"
  },
  "spm_unit_count_children": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/spm_unit/spm_unit_count_children.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "is_child"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "children in SPM unit"
  },
  "spm_unit_count_adults": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/spm_unit/spm_unit_count_adults.py",
    "parameters": {},
    "variables": [
      "is_adult"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "adults in SPM unit"
  },
  "spm_unit_is_married": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/spm_unit/spm_unit_is_married.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit is married",
    "description": "Whether the adults in this SPM unit are married."
  },
  "spm_unit_id": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/spm_unit/spm_unit_id.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit ID"
  },
  "spm_unit_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/spm_unit/spm_unit_count.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM units represented"
  },
  "is_father": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_father.py",
    "parameters": {},
    "variables": [
      "is_parent",
      "is_female"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a father"
  },
  "person_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/person_count.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "People represented"
  },
  "care_and_support_costs": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/care_and_support_costs.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Total costs for this person's care and support"
  },
  "is_breastfeeding": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_breastfeeding.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is breastfeeding"
  },
  "is_deceased": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_deceased.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is deceased"
  },
  "is_parent_of_filer_or_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_parent_of_filer_or_spouse.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a parent of the filer or spouse"
  },
  "detailed_occupation_recode": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/detailed_occupation_recode.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "CPS detailed occupation recode of previous year",
    "description": "This variable is the POCCU2 variable in the Current Population Survey."
  },
  "current_pregnancies": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/current_pregnancies.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "The number of children a pregnant person is expecting"
  },
  "is_male": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_male.py",
    "parameters": {},
    "variables": [
      "is_female"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "is male"
  },
  "receives_or_needs_protective_services": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/receives_or_needs_protective_services.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Child receiving or needs protective services"
  },
  "own_children_in_household": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/own_children_in_household.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Count of one's own children in the household"
  },
  "years_in_military": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/years_in_military.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Years served in military"
  },
  "is_in_k12_school": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_in_k12_school.py",
    "parameters": {},
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is in a K-12 school"
  },
  "is_deaf": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_deaf.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is deaf"
  },
  "is_in_foster_care_group_home": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_in_foster_care_group_home.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_in_foster_care",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is currently in a qualifying foster care group home"
  },
  "adopted_this_year": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/adopted_this_year.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person was adopted this year"
  },
  "is_permanently_and_totally_disabled": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_permanently_and_totally_disabled.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is permanently and totally disabled"
  },
  "is_mother": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_mother.py",
    "parameters": {},
    "variables": [
      "is_breastfeeding",
      "is_parent",
      "is_female"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a mother"
  },
  "race": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/race.py",
    "parameters": {},
    "variables": [
      "cps_race",
      "is_hispanic"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "Race",
    "enum_options": [
      {
        "key": "WHITE",
        "value": "White, non-Hispanic"
      },
      {
        "key": "BLACK",
        "value": "Black, non-Hispanic"
      },
      {
        "key": "HISPANIC",
        "value": "Hispanic"
      },
      {
        "key": "OTHER",
        "value": "Other"
      }
    ],
    "label": "race",
    "description": "The broadest racial category (White only, Black only, Hispanic, Other)"
  },
  "is_parent": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_parent.py",
    "parameters": {},
    "variables": [
      "own_children_in_household"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a parent"
  },
  "is_permanently_disabled_veteran": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_permanently_disabled_veteran.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Permanently disabled veteran"
  },
  "four_year_college_student": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/four_year_college_student.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is a full time four-year college student"
  },
  "ssn_card_type": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/ssn_card_type.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "SSNCardType",
    "enum_options": [
      {
        "key": "CITIZEN",
        "value": "Citizen"
      },
      {
        "key": "NON_CITIZEN_VALID_EAD",
        "value": "Non-citizen with valid EAD card"
      },
      {
        "key": "OTHER_NON_CITIZEN",
        "value": "Other non-citizen"
      },
      {
        "key": "NONE",
        "value": "None"
      }
    ],
    "label": "Social Security Number (SSN) card type as an enumeration type"
  },
  "is_in_foster_care": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_in_foster_care.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is currently in a qualifying foster care institution"
  },
  "year_of_retirement": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/year_of_retirement.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Year of retirement"
  },
  "is_female": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_female.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is female"
  },
  "share_of_care_and_support_costs_paid_by_tax_filer": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/share_of_care_and_support_costs_paid_by_tax_filer.py",
    "parameters": {},
    "variables": [
      "care_and_support_costs",
      "care_and_support_payments_from_tax_filer"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "The percentage of care and support costs of a senior paid by the tax filer"
  },
  "current_pregnancy_month": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/current_pregnancy_month.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_pregnant",
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Current pregnancy month"
  },
  "is_executive_administrative_professional": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_executive_administrative_professional.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "is employed in a bona fide executive, administrative, or professional capacity"
  },
  "is_incapable_of_self_care": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_incapable_of_self_care.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Incapable of self-care",
    "description": "Whether this person is physically or mentally incapable of caring for themselves."
  },
  "is_runaway_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_runaway_child.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is runaway child",
    "description": "Whether an individual under 18 years old leaves home or their legal residence without parental or guardian permission"
  },
  "claimed_as_dependent_on_another_return": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/claimed_as_dependent_on_another_return.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is claimed as a dependent elsewhere",
    "description": "Whether the person is claimed as a dependent in another tax unit."
  },
  "immigration_status": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/immigration_status.py",
    "parameters": {},
    "variables": [
      "immigration_status_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "ImmigrationStatus",
    "enum_options": [
      {
        "key": "CITIZEN",
        "value": "Citizen"
      },
      {
        "key": "LEGAL_PERMANENT_RESIDENT",
        "value": "Legal Permanent Resident"
      },
      {
        "key": "REFUGEE",
        "value": "Refugee"
      },
      {
        "key": "ASYLEE",
        "value": "Asylee"
      },
      {
        "key": "DEPORTATION_WITHHELD",
        "value": "Deportation Withheld"
      },
      {
        "key": "CUBAN_HAITIAN_ENTRANT",
        "value": "Cuban/Haitian Entrant"
      },
      {
        "key": "CONDITIONAL_ENTRANT",
        "value": "Conditional Entrant"
      },
      {
        "key": "PAROLED_ONE_YEAR",
        "value": "Paroled for at Least One Year"
      },
      {
        "key": "DACA_TPS",
        "value": "Deferred Action for Childhood Arrivals or Temporary Protected Status"
      },
      {
        "key": "UNDOCUMENTED",
        "value": "Undocumented"
      },
      {
        "key": "DACA",
        "value": "Deferred Action for Childhood Arrivals"
      },
      {
        "key": "TPS",
        "value": "Temporary Protected Status"
      }
    ],
    "label": "U.S. immigration status as an enumeration type"
  },
  "is_migratory_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_migratory_child.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is migratory child",
    "description": "Whether a child made a qualifying move in the last 36 months as, with, or to join a migratory agricultural worker or fisher"
  },
  "care_and_support_payments_from_tax_filer": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/care_and_support_payments_from_tax_filer.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Amount of payments made by the tax filer for this person's care and support"
  },
  "in_out_of_home_care_facility": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/in_out_of_home_care_facility.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is in a nonmedical out of home care facility"
  },
  "divorce_year": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/divorce_year.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "The year that the person was divorced."
  },
  "is_severely_disabled": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_severely_disabled.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is severely disabled"
  },
  "is_retired": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_retired.py",
    "parameters": {},
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is retired"
  },
  "has_never_worked": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/has_never_worked.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "has never worked"
  },
  "is_in_secondary_school": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_in_secondary_school.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is in secondary school (or in an equivalent level of training)"
  },
  "year_deceased": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/year_deceased.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Year in which the person deceased"
  },
  "is_surviving_child_of_disabled_veteran": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_surviving_child_of_disabled_veteran.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Surviving child of disabled veteran"
  },
  "is_blind": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_blind.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is blind"
  },
  "is_english_proficient": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_english_proficient.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is English Proficient"
  },
  "is_computer_scientist": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_computer_scientist.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "is employed in a computer science related occupation"
  },
  "is_full_time_student": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_full_time_student.py",
    "parameters": {},
    "variables": [
      "is_full_time_college_student",
      "is_in_k12_school"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a full time student"
  },
  "has_itin": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/has_itin.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Has ITIN or SSN"
  },
  "is_full_time_college_student": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_full_time_college_student.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a full time college student"
  },
  "is_military": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_military.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "is employed in the US armed forces"
  },
  "is_grandparent_of_filer_or_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_grandparent_of_filer_or_spouse.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a grandparent of the filer or spouse"
  },
  "is_pregnant": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_pregnant.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "current_pregnancies"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is pregnant"
  },
  "is_veteran": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_veteran.py",
    "parameters": {},
    "variables": [
      "veterans_benefits"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is veteran",
    "description": "A person who served in the active military, naval, air, or space service, and who was discharged or released therefrom under conditions other than dishonorable."
  },
  "technical_institution_student": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/technical_institution_student.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a technical institution student"
  },
  "immigration_status_str": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/immigration_status_str.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "ImmigrationStatus",
    "enum_options": [],
    "label": "ImmigrationStatus enumeration type as an all-upper-case string"
  },
  "is_farmer_fisher": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_farmer_fisher.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "is employed in a farming, fishing, cultivating, or agriculture related occupation"
  },
  "cps_race": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/cps_race.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "CPS racial category",
    "description": "This variable is the PRDTRACE variable in the Current Population Survey."
  },
  "is_in_k12_nonpublic_school": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_in_k12_nonpublic_school.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is in a K-12 nonpublic school fulltime"
  },
  "is_hispanic": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_hispanic.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "hispanic",
    "description": "Whether the person is Hispanic"
  },
  "is_married": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_married.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Married",
    "description": "Whether the adults in this family are married."
  },
  "is_child_dependent": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_child_dependent.py",
    "parameters": {
      "p": "gov.irs.dependent.ineligible_age",
      "student": "gov.irs.dependent.ineligible_age.student",
      "non_student": "gov.irs.dependent.ineligible_age.non_student"
    },
    "variables": [
      "is_full_time_student",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_tax_unit_dependent",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a child dependent based on the IRS definition"
  },
  "was_in_foster_care": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/was_in_foster_care.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person was in the a qualifying foster care institution"
  },
  "is_related_to_head_or_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_related_to_head_or_spouse.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Person is related to head or spouse"
  },
  "has_disabled_spouse": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/has_disabled_spouse.py",
    "parameters": {},
    "variables": [
      "filing_status",
      "head_is_disabled",
      "spouse_is_disabled",
      "is_tax_unit_head",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "person's marriage partner in JOINT filing unit is disabled"
  },
  "is_disabled": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_disabled.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is disabled"
  },
  "is_adult": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_adult.py",
    "parameters": {},
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is an adult"
  },
  "is_incarcerated": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_incarcerated.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is incarcerated",
    "description": "Whether this person is incarcerated."
  },
  "is_fully_disabled_service_connected_veteran": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_fully_disabled_service_connected_veteran.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a fully disabled veteran who became so as a result of an injury during service"
  },
  "retired_from_federal_government": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/retired_from_federal_government.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": "is_retired",
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Retired from Federal Government"
  },
  "is_surviving_spouse_of_disabled_veteran": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/is_surviving_spouse_of_disabled_veteran.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Surviving spouse of disabled veteran"
  },
  "spm_unit_weight": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/weights/spm_unit_weight.py",
    "parameters": {},
    "variables": [
      "household_weight"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit weight"
  },
  "family_weight": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/weights/family_weight.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Family weight"
  },
  "household_weight": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/weights/household_weight.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Household weight"
  },
  "person_weight": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/weights/person_weight.py",
    "parameters": {},
    "variables": [
      "household_weight"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Person weight"
  },
  "tax_unit_weight": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/weights/tax_unit_weight.py",
    "parameters": {},
    "variables": [
      "household_weight"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit weight"
  },
  "person_family_id": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/identifiers/person_family_id.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Unique reference for the family of this person"
  },
  "family_id": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/identifiers/family_id.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Unique reference for this family"
  },
  "person_id": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/identifiers/person_id.py",
    "parameters": {},
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Unique reference for this person"
  },
  "person_household_id": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/identifiers/person_household_id.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Unique reference for the household of this person"
  },
  "tax_unit_id": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/identifiers/tax_unit_id.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Unique reference for this tax unit"
  },
  "person_tax_unit_id": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/identifiers/person_tax_unit_id.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Unique reference for the tax unit of this person"
  },
  "household_id": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/identifiers/household_id.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Unique reference for this household"
  },
  "is_wa_adult": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/age/is_wa_adult.py",
    "parameters": {},
    "variables": [
      "is_child",
      "is_senior"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a working-age adult"
  },
  "age": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/age/age.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "age"
  },
  "is_child": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/age/is_child.py",
    "parameters": {},
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a child"
  },
  "birth_year": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/age/birth_year.py",
    "parameters": {},
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Birth year",
    "unit": "year"
  },
  "age_group": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/age/age_group.py",
    "parameters": {},
    "variables": [
      "is_wa_adult",
      "is_child",
      "is_senior"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "AgeGroup",
    "enum_options": [
      {
        "key": "CHILD",
        "value": "Child"
      },
      {
        "key": "WORKING_AGE",
        "value": "Working-age"
      },
      {
        "key": "SENIOR",
        "value": "Senior"
      }
    ],
    "label": "Age group"
  },
  "monthly_age": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/age/monthly_age.py",
    "parameters": {},
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Monthly age"
  },
  "is_senior": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/age/is_senior.py",
    "parameters": {},
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is a senior"
  },
  "lives_in_vehicle": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/lives_in_vehicle.py",
    "parameters": {},
    "variables": [
      "household_vehicles_owned",
      "is_homeless"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Whether a household is using their vehicle as their primary residence ",
    "label": "Lives in vehicle"
  },
  "is_on_tribal_land": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/is_on_tribal_land.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is on tribal land"
  },
  "state_group_str": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/state_group_str.py",
    "parameters": {},
    "variables": [
      "state_group"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "str",
    "possible_values": null,
    "enum_options": [],
    "label": "State group (string)",
    "description": "State group variable, stored as a string"
  },
  "tax_unit_state": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/tax_unit_state.py",
    "parameters": {},
    "variables": [
      "state_code_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "str",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit State"
  },
  "is_rural": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/is_rural.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is in a rural area"
  },
  "in_nyc": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/in_nyc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is in NYC"
  },
  "state_code": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/state_code.py",
    "parameters": {},
    "variables": [
      "state_name"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "StateCode",
    "enum_options": [
      {
        "key": "AL",
        "value": "AL"
      },
      {
        "key": "AK",
        "value": "AK"
      },
      {
        "key": "AZ",
        "value": "AZ"
      },
      {
        "key": "AR",
        "value": "AR"
      },
      {
        "key": "CA",
        "value": "CA"
      },
      {
        "key": "CO",
        "value": "CO"
      },
      {
        "key": "CT",
        "value": "CT"
      },
      {
        "key": "DE",
        "value": "DE"
      },
      {
        "key": "FL",
        "value": "FL"
      },
      {
        "key": "GA",
        "value": "GA"
      },
      {
        "key": "HI",
        "value": "HI"
      },
      {
        "key": "ID",
        "value": "ID"
      },
      {
        "key": "IL",
        "value": "IL"
      },
      {
        "key": "IN",
        "value": "IN"
      },
      {
        "key": "IA",
        "value": "IA"
      },
      {
        "key": "KS",
        "value": "KS"
      },
      {
        "key": "KY",
        "value": "KY"
      },
      {
        "key": "LA",
        "value": "LA"
      },
      {
        "key": "ME",
        "value": "ME"
      },
      {
        "key": "MD",
        "value": "MD"
      },
      {
        "key": "MA",
        "value": "MA"
      },
      {
        "key": "MI",
        "value": "MI"
      },
      {
        "key": "MN",
        "value": "MN"
      },
      {
        "key": "MS",
        "value": "MS"
      },
      {
        "key": "MO",
        "value": "MO"
      },
      {
        "key": "MT",
        "value": "MT"
      },
      {
        "key": "NE",
        "value": "NE"
      },
      {
        "key": "NV",
        "value": "NV"
      },
      {
        "key": "NH",
        "value": "NH"
      },
      {
        "key": "NJ",
        "value": "NJ"
      },
      {
        "key": "NM",
        "value": "NM"
      },
      {
        "key": "NY",
        "value": "NY"
      },
      {
        "key": "NC",
        "value": "NC"
      },
      {
        "key": "ND",
        "value": "ND"
      },
      {
        "key": "OH",
        "value": "OH"
      },
      {
        "key": "OK",
        "value": "OK"
      },
      {
        "key": "OR",
        "value": "OR"
      },
      {
        "key": "PA",
        "value": "PA"
      },
      {
        "key": "RI",
        "value": "RI"
      },
      {
        "key": "SC",
        "value": "SC"
      },
      {
        "key": "SD",
        "value": "SD"
      },
      {
        "key": "TN",
        "value": "TN"
      },
      {
        "key": "TX",
        "value": "TX"
      },
      {
        "key": "UT",
        "value": "UT"
      },
      {
        "key": "VT",
        "value": "VT"
      },
      {
        "key": "VA",
        "value": "VA"
      },
      {
        "key": "WA",
        "value": "WA"
      },
      {
        "key": "WV",
        "value": "WV"
      },
      {
        "key": "WI",
        "value": "WI"
      },
      {
        "key": "WY",
        "value": "WY"
      },
      {
        "key": "DC",
        "value": "DC"
      },
      {
        "key": "GU",
        "value": "GU"
      },
      {
        "key": "MP",
        "value": "MP"
      },
      {
        "key": "PW",
        "value": "PW"
      },
      {
        "key": "PR",
        "value": "PR"
      },
      {
        "key": "VI",
        "value": "VI"
      },
      {
        "key": "AA",
        "value": "AA"
      },
      {
        "key": "AE",
        "value": "AE"
      },
      {
        "key": "AP",
        "value": "AP"
      }
    ],
    "label": "State code"
  },
  "state_group": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/state_group.py",
    "parameters": {},
    "variables": [
      "state_code"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "StateGroup",
    "enum_options": [
      {
        "key": "CONTIGUOUS_US",
        "value": "Contiguous US"
      },
      {
        "key": "AK",
        "value": "Alaska"
      },
      {
        "key": "HI",
        "value": "Hawaii"
      },
      {
        "key": "GU",
        "value": "Guam"
      },
      {
        "key": "PR",
        "value": "Puerto Rico"
      },
      {
        "key": "VI",
        "value": "Virgin Islands"
      }
    ],
    "label": "State group"
  },
  "safmr_used_for_hcv": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/safmr_used_for_hcv.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Small area fair market rent used for purposes of the Housing Choice Voucher Program"
  },
  "is_homeless": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/is_homeless.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "description": "Whether all members are homeless individuals and are not receiving free shelter throughout the month",
    "label": "Is homeless"
  },
  "state_code_str": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/state_code_str.py",
    "parameters": {},
    "variables": [
      "state_code"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "str",
    "possible_values": null,
    "enum_options": [],
    "label": "State code (string)",
    "description": "State code variable, stored as a string"
  },
  "living_arrangements_allow_for_food_preparation": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/household/living_arrangements_allow_for_food_preparation.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Living arrangements allow for food preparation"
  },
  "household_count": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/household/household_count.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Households represented"
  },
  "rent_is_shared_with_another_tax_unit": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/household/rent_is_shared_with_another_tax_unit.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the household shares rent with others"
  },
  "bedrooms": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/household/bedrooms.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Bedrooms"
  },
  "household_size": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/household/household_size.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Household size"
  },
  "is_sro": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/household/is_sro.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is single room occupancy"
  },
  "household_vehicles_owned": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/household/household_vehicles_owned.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Vehicles owned"
  },
  "three_digit_zip_code": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/zip_code/three_digit_zip_code.py",
    "parameters": {},
    "variables": [
      "zip_code"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "str",
    "possible_values": null,
    "enum_options": [],
    "label": "Three-digit zipcode"
  },
  "zip_code": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/zip_code/zip_code.py",
    "parameters": {},
    "variables": [
      "state_code_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "str",
    "possible_values": null,
    "enum_options": [],
    "label": "ZIP code"
  },
  "average_home_energy_use_in_state": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/state/average_home_energy_use_in_state.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "description": "Average energy use per home in household's state, in kilowatt hours",
    "label": "Average energy use per in state"
  },
  "first_county_in_state": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/county/first_county_in_state.py",
    "parameters": {},
    "variables": [
      "state_code_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "County",
    "enum_options": [],
    "label": "First county alphabetically in household's state"
  },
  "county_str": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/county/county_str.py",
    "parameters": {},
    "variables": [
      "county"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "str",
    "possible_values": null,
    "enum_options": [],
    "label": "County (string)",
    "description": "County variable, stored as a string"
  },
  "county": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/geographic/county/county.py",
    "parameters": {},
    "variables": [
      "zip_code",
      "first_county_in_state",
      "county_fips"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "County",
    "enum_options": [],
    "label": "County"
  },
  "under_60_days_postpartum": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/postpartum/under_60_days_postpartum.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Under 60 days postpartum"
  },
  "count_days_postpartum": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/postpartum/count_days_postpartum.py",
    "parameters": {},
    "variables": [
      "under_60_days_postpartum",
      "under_12_months_postpartum"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of days postpartum",
    "unit": "day"
  },
  "under_12_months_postpartum": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/demographic/person/postpartum/under_12_months_postpartum.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Under 12 months postpartum"
  },
  "new_clean_vehicle_battery_components_made_in_north_america": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/vehicle/new_clean_vehicle_battery_components_made_in_north_america.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Percent of new clean vehicle's battery components made in North America",
    "description": "Percent of newly purchased new clean vehicle's battery components (by value) manufactured or assembled in North America",
    "unit": "/1"
  },
  "auto_loan_interest": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/vehicle/auto_loan_interest.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "auto loan interest expense"
  },
  "new_clean_vehicle_battery_capacity": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/vehicle/new_clean_vehicle_battery_capacity.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Battery capacity of a purchased new clean vehicle",
    "description": "In kilowatt-hours (kWh)",
    "unit": "kWh"
  },
  "new_clean_vehicle_battery_critical_minerals_extracted_in_trading_partner_country": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/vehicle/new_clean_vehicle_battery_critical_minerals_extracted_in_trading_partner_country.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Percent of new clean vehicle's battery critical minerals extracted in a US trading partner country",
    "description": "Percent of newly purchased new clean vehicle's battery critical minearls (by value) extracted or processed in any country with which the US has a free trade agreement in effect, or recycled in North America",
    "unit": "/1"
  },
  "new_clean_vehicle_msrp": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/vehicle/new_clean_vehicle_msrp.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "New clean vehicle MSRP",
    "description": "Manufacturer's suggested retail price of a newly purchased new clean vehicle"
  },
  "new_clean_vehicle_classification": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/vehicle/new_clean_vehicle_classification.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "NewElectricVehicleClassification",
    "enum_options": [
      {
        "key": "VAN",
        "value": "Van"
      },
      {
        "key": "SUV",
        "value": "Sport utility vehicle"
      },
      {
        "key": "PICKUP",
        "value": "Pickup truck"
      },
      {
        "key": "OTHER",
        "value": "Other"
      }
    ],
    "label": "New clean vehicle classification"
  },
  "purchased_qualifying_new_clean_vehicle": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/vehicle/purchased_qualifying_new_clean_vehicle.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Purchased a qualifying new clean vehicle"
  },
  "used_clean_vehicle_sale_price": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/vehicle/used_clean_vehicle_sale_price.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Sale price of newly purchased used clean vehicle"
  },
  "auto_loan_balance": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/vehicle/auto_loan_balance.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "auto loan total balance"
  },
  "purchased_qualifying_used_clean_vehicle": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/vehicle/purchased_qualifying_used_clean_vehicle.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Purchased a qualifying used clean vehicle"
  },
  "deductible_interest_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/deductible_interest_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "deductible_mortgage_interest",
      "non_mortgage_interest"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Interest paid on all loans"
  },
  "deductible_mortgage_interest": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/deductible_mortgage_interest.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Deductible mortgage interest",
    "description": "Under the interest deduction, the US caps the mortgage value to which interest is applied which based on the year of purchase not tax year."
  },
  "k12_tuition_and_fees": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/k12_tuition_and_fees.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "K-12 Tuition and fees (from Form 8917)"
  },
  "alimony_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/alimony_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Alimony expense"
  },
  "investment_interest_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/investment_interest_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Investment interest expense"
  },
  "unreimbursed_business_employee_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/unreimbursed_business_employee_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Unreimbursed business employee expenses"
  },
  "home_mortgage_interest": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/home_mortgage_interest.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Interest paid on a home mortgage",
    "description": "Home mortgage interest, including both reported and not reported on federal Form 1098."
  },
  "educator_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/educator_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Educator expenses",
    "description": "Expenses necessary for carrying out educator-related duties."
  },
  "student_loan_interest": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/student_loan_interest.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Student loan interest expense"
  },
  "tuition_and_fees": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/tuition_and_fees.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tuition and fees (from Form 8917)"
  },
  "non_deductible_mortgage_interest": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/non_deductible_mortgage_interest.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Non-deductible mortgage interest"
  },
  "qualified_tuition_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/qualified_tuition_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified tuition expenses"
  },
  "non_mortgage_interest": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/non_mortgage_interest.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "investment_interest_expense"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Non-mortgage interest"
  },
  "tax_preparation_fees": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/tax_preparation_fees.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax preparation fees"
  },
  "mortgage_interest": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/mortgage_interest.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "non_deductible_mortgage_interest",
      "deductible_mortgage_interest"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mortgage interest"
  },
  "qualified_adoption_assistance_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/person/qualified_adoption_assistance_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified adoption expense",
    "description": "Qualified adoption expense (as defined in 26 U.S. Code \u00a7 23(d)) made pursuant to an adoption assistance program."
  },
  "ambulance_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/ambulance_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Ambulance expenses"
  },
  "has_marketplace_health_coverage": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/has_marketplace_health_coverage.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Is eligible for health insurance from an ACA Marketplace plan because has no employer-sponsored health insurance coverage."
  },
  "prescription_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/prescription_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Prescription expenses"
  },
  "employer_contribution_to_health_insurance_premiums_category": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/employer_contribution_to_health_insurance_premiums_category.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "EmployerPremiumContribution",
    "enum_options": [
      {
        "key": "NONE",
        "value": "NONE"
      },
      {
        "key": "SOME",
        "value": "SOME"
      },
      {
        "key": "ALL",
        "value": "ALL"
      },
      {
        "key": "NA",
        "value": "N/A"
      }
    ],
    "label": "Extent to which employer paid health insurance premiums"
  },
  "health_insurance_premiums": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/health_insurance_premiums.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "health_insurance_premiums_without_medicare_part_b",
      "medicare_part_b_premiums"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Health insurance premiums"
  },
  "lab_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/lab_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Lab expenses"
  },
  "medicare_part_b_premiums": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/medicare_part_b_premiums.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Medicare Part B premiums"
  },
  "inpatient_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/inpatient_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Inpatient expenses"
  },
  "er_visit_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/er_visit_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Emergency room visit expenses"
  },
  "outpatient_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/outpatient_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Outpatient expenses"
  },
  "over_the_counter_health_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/over_the_counter_health_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Over the counter health expenses"
  },
  "long_term_health_insurance_premiums": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/long_term_health_insurance_premiums.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Long-term health insurance premiums"
  },
  "imaging_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/imaging_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Imaging expenses"
  },
  "urgent_care_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/urgent_care_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Urgent care expenses"
  },
  "physician_services_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/physician_services_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Physician services expenses"
  },
  "self_employed_health_insurance_premiums": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/self_employed_health_insurance_premiums.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "health_insurance_premiums"
    ],
    "subtracts": [],
    "defined_for": "is_self_employed",
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employed health insurance premiums",
    "description": "Health insurance premiums for plans covering individuals who are not covered by any employer-sponsored health insurance."
  },
  "other_medical_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/other_medical_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Other medical expenses"
  },
  "health_insurance_premiums_without_medicare_part_b": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/health_insurance_premiums_without_medicare_part_b.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Health insurance premiums without Medicare Part B premiums"
  },
  "medical_out_of_pocket_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/health/medical_out_of_pocket_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "health_insurance_premiums",
      "other_medical_expenses"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Medical out of pocket expenses"
  },
  "investment_in_529_plan_indv": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/education/investment_in_529_plan_indv.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Individual 529 plan investment amounts",
    "description": "Amount invested in a 529 savings plan for each contributor."
  },
  "non_public_school_tuition": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/education/non_public_school_tuition.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Nonchartered, Nonpublic School Tuition"
  },
  "investment_in_529_plan": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/education/investment_in_529_plan.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "investment_in_529_plan_indv"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "529 plan investment",
    "description": "Amount invested in a 529 savings plan."
  },
  "count_529_contribution_beneficiaries": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/education/count_529_contribution_beneficiaries.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of beneficiaries to 529 college savings plan contributions"
  },
  "roth_403b_contributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/retirement/roth_403b_contributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Roth 403(b) contributions",
    "description": "Contributions to Roth 403(b) accounts"
  },
  "traditional_403b_contributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/retirement/traditional_403b_contributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Traditional 403(b) contributions",
    "description": "Contributions to traditional 403(b) accounts."
  },
  "able_contributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/retirement/able_contributions.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "able_contributions_person"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "ABLE contributions",
    "description": "Contributions made to an ABLE account by all members of the tax unit."
  },
  "self_employed_pension_contributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/retirement/self_employed_pension_contributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employed pension contributions",
    "description": "Pension plan contributions associated with plans for the self employed."
  },
  "traditional_ira_contributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/retirement/traditional_ira_contributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Traditional IRA contributions",
    "description": "Contributions to traditional Individual Retirement Accounts."
  },
  "traditional_401k_contributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/retirement/traditional_401k_contributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Traditional 401(k) contributions",
    "description": "Contributions to traditional 401(k) accounts."
  },
  "early_withdrawal_penalty": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/retirement/early_withdrawal_penalty.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Early savings withdrawal penalty",
    "description": "Penalties paid due to early withdrawal of savings."
  },
  "roth_ira_contributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/retirement/roth_ira_contributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Roth IRA contributions",
    "description": "Contributions to Roth Individual Retirement Accounts."
  },
  "able_contributions_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/retirement/able_contributions_person.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Person-level ABLE contributions",
    "description": "Contributions made to an ABLE account by each individual."
  },
  "roth_401k_contributions": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/retirement/roth_401k_contributions.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Roth 401(k) contributions",
    "description": "Contributions to Roth 401(k) accounts."
  },
  "casualty_loss": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/casualty_loss.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Casualty/theft loss"
  },
  "spm_unit_payroll_tax_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/spm_unit_payroll_tax_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit payroll tax (reported)"
  },
  "spm_unit_federal_tax_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/spm_unit_federal_tax_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal income tax (reported"
  },
  "real_estate_taxes": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/real_estate_taxes.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Real estate taxes"
  },
  "qualified_retirement_penalty": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/qualified_retirement_penalty.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Penalty tax on qualified retirement plans"
  },
  "spm_unit_federal_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/spm_unit_federal_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal income tax"
  },
  "spm_unit_payroll_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/spm_unit_payroll_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Payroll tax"
  },
  "spm_unit_self_employment_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/spm_unit_self_employment_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "self_employment_tax"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self employment tax"
  },
  "taxable_estate_value": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/taxable_estate_value.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable estate value"
  },
  "spm_unit_state_tax_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/spm_unit_state_tax_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State income tax (reported)"
  },
  "excess_withheld_payroll_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/excess_withheld_payroll_tax.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "excess withheld payroll tax"
  },
  "state_income_tax_reported": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/state_income_tax_reported.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "reported State income tax"
  },
  "spm_unit_state_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/tax/spm_unit_state_tax.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "spm_unit_state_tax_reported",
      "state_income_tax"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State income tax"
  },
  "rents": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/rents.py",
    "parameters": {},
    "variables": [
      "rent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit pays rent"
  },
  "housing_cost": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/housing_cost.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "rent",
      "real_estate_taxes",
      "homeowners_association_fees",
      "mortgage_payments",
      "homeowners_insurance"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Housing cost"
  },
  "small_area_fair_market_rent": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/small_area_fair_market_rent.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Small area fair market rent"
  },
  "pre_subsidy_rent": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/pre_subsidy_rent.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pre subsidy rent"
  },
  "homeowners_insurance": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/homeowners_insurance.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Homeowners insurance"
  },
  "heat_expense_included_in_rent": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/heat_expense_included_in_rent.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether heating expense is included in rent payments"
  },
  "heating_expense_person": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/heating_expense_person.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Heating cost for each person"
  },
  "homeowners_association_fees": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/homeowners_association_fees.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Homeowners association fees"
  },
  "is_in_public_housing": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/is_in_public_housing.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the household is in public housing"
  },
  "tenant_pays_utilities": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/tenant_pays_utilities.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether the tenant is responsible for utility payments"
  },
  "heating_expense_last_year": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/heating_expense_last_year.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Household's heating expense last year"
  },
  "rent": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/rent.py",
    "parameters": {},
    "variables": [
      "pre_subsidy_rent",
      "housing_assistance"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Rent"
  },
  "heating_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/heating_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "heating_expense_person"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit heating cost"
  },
  "mortgage_payments": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/mortgage_payments.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Mortgage payments"
  },
  "tenure_type": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/tenure_type.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "TenureType",
    "enum_options": [
      {
        "key": "RENTED",
        "value": "rented"
      },
      {
        "key": "OWNED_OUTRIGHT",
        "value": "owned outright"
      },
      {
        "key": "OWNED_WITH_MORTGAGE",
        "value": "owned with mortgage"
      },
      {
        "key": "NONE",
        "value": "none"
      }
    ],
    "label": "tenure type"
  },
  "utilities_included_in_rent": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/utilities_included_in_rent.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Whether utilities are included in rent payments"
  },
  "has_heating_cooling_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/has_heating_cooling_expense.py",
    "parameters": {},
    "variables": [
      "heating_cooling_expense"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Has heating/cooling costs"
  },
  "utility_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/utility_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "heating_cooling_expense",
      "gas_expense",
      "electricity_expense",
      "trash_expense",
      "water_expense",
      "sewage_expense",
      "phone_expense"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Utility expenses"
  },
  "electricity_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/electricity_expense.py",
    "parameters": {
      "p": "household.expense.utilities",
      "subsidies": "household.expense.utilities.subsidies"
    },
    "variables": [
      "pre_subsidy_electricity_expense"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Electricity expense"
  },
  "pre_subsidy_electricity_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/pre_subsidy_electricity_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pre subsidy electricity expense"
  },
  "phone_cost": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/phone_cost.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Phone cost"
  },
  "heating_cooling_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/heating_cooling_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Heating and cooling expense"
  },
  "fuel_oil_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/fuel_oil_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Fuel oil expense"
  },
  "sewage_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/sewage_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Sewage expense"
  },
  "gas_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/gas_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Gas expense"
  },
  "bottled_gas_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/bottled_gas_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Bottled gas expense"
  },
  "phone_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/phone_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "phone_cost"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Phone expense"
  },
  "has_phone_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/has_phone_expense.py",
    "parameters": {},
    "variables": [
      "phone_expense"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Has phone costs"
  },
  "water_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/water_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Water expense"
  },
  "broadband_cost": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/broadband_cost.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Broadband cost"
  },
  "count_distinct_utility_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/count_distinct_utility_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of distinct utility expenses",
    "description": "The number of distinct utility expenses."
  },
  "coal_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/coal_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Coal expense"
  },
  "trash_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/trash_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Trash expense"
  },
  "metered_gas_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/metered_gas_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Metered gas expense"
  },
  "cooking_fuel_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/utilities/cooking_fuel_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Cooking fuel expense"
  },
  "charitable_non_cash_donations": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/charitable/charitable_non_cash_donations.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Charitable donations (non-cash)"
  },
  "charitable_cash_donations": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/charitable/charitable_cash_donations.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Charitable donations (cash)"
  },
  "care_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/childcare/care_expenses.py",
    "parameters": {},
    "variables": [
      "pre_subsidy_care_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Care expenses"
  },
  "pre_subsidy_childcare_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/childcare/pre_subsidy_childcare_expenses.py",
    "parameters": {},
    "variables": [
      "spm_unit_pre_subsidy_childcare_expenses",
      "is_child"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pre subsidy child care expenses"
  },
  "after_school_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/childcare/after_school_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "After school childcare expenses"
  },
  "spm_unit_capped_work_childcare_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/childcare/spm_unit_capped_work_childcare_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit work and childcare expenses"
  },
  "childcare_provider_type_group": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/childcare/childcare_provider_type_group.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "Enum",
    "possible_values": "ChildcareProviderTypeGroup",
    "enum_options": [
      {
        "key": "DCC_SACC",
        "value": "Licenced/registered/permitted day care center; registered school-age child care"
      },
      {
        "key": "FDC_GFDC",
        "value": "Registered family day care homes; licensed group family day care"
      },
      {
        "key": "LE_GC",
        "value": "Legally exempt group child care programs"
      },
      {
        "key": "LE_STD",
        "value": "Informal child care standard rate"
      },
      {
        "key": "LE_ENH",
        "value": "Informal child care enhanced rate"
      }
    ],
    "label": "Childcare provider type group"
  },
  "childcare_days_per_week": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/childcare/childcare_days_per_week.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Child care days per week",
    "unit": "day"
  },
  "pre_subsidy_care_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/childcare/pre_subsidy_care_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pre subsidy care expenses"
  },
  "childcare_hours_per_week": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/childcare/childcare_hours_per_week.py",
    "parameters": {},
    "variables": [
      "childcare_hours_per_day",
      "childcare_days_per_week"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Child care hours per week",
    "unit": "hour"
  },
  "spm_unit_pre_subsidy_childcare_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/childcare/spm_unit_pre_subsidy_childcare_expenses.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SPM unit pre subsidy child care expenses"
  },
  "childcare_hours_per_day": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/childcare/childcare_hours_per_day.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Child care hours per day",
    "unit": "hour"
  },
  "childcare_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/childcare/childcare_expenses.py",
    "parameters": {},
    "variables": [
      "ca_child_care_subsidies",
      "co_child_care_subsidies",
      "pre_subsidy_childcare_expenses",
      "ne_child_care_subsidies"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Child care expenses"
  },
  "tax_unit_childcare_expenses": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/childcare/tax_unit_childcare_expenses.py",
    "parameters": {},
    "variables": [
      "is_child",
      "childcare_expenses"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Childcare expenses"
  },
  "child_support_expense": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/child_support/child_support_expense.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Child support expense",
    "description": "Legally mandated child support expenses."
  },
  "child_support_received": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/child_support/child_support_received.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Child support receipt",
    "description": "Value of child support benefits received."
  },
  "home_energy_audit_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/home_energy_audit_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on home energy audits"
  },
  "energy_efficient_insulation_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_efficiency_improvements/energy_efficient_insulation_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Energy efficient insulation expenditures",
    "description": "Expenditures on any insulation material or system which is specifically and primarily designed to reduce the heat loss or gain of a dwelling unit when installed in or on such dwelling unit."
  },
  "energy_efficient_door_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_efficiency_improvements/energy_efficient_door_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Energy efficient door expenditures",
    "description": "Expenditures on exterior doors that meet version 6.0 Energy Star program requirements."
  },
  "energy_efficient_window_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_efficiency_improvements/energy_efficient_window_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Energy efficient window expenditures",
    "description": "Expenditures on exterior windows (including skylights) that meet version 6.0 Energy Star program requirements."
  },
  "energy_efficient_roof_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_efficiency_improvements/energy_efficient_roof_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Energy efficient roof expenditures",
    "description": "Expenditures on metal or asphalt roof or roof products that meet Energy Star program requirements and have appropriate pigmented coatings or cooling granules which are specifically and primarily designed to reduce the heat gain of such dwelling unit."
  },
  "small_wind_energy_property_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_efficient_property/small_wind_energy_property_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified small wind energy property expenditures",
    "description": "Expenditures for property which uses a wind turbine to generate electricity for use in connection with a dwelling unit located in the United States and used as a residence by the taxpayer."
  },
  "solar_electric_property_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_efficient_property/solar_electric_property_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified solar electric property expenditures",
    "description": "Expenditures for property which uses solar energy to generate electricity for use in a dwelling unit located in the United States and used as a residence by the taxpayer."
  },
  "geothermal_heat_pump_property_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_efficient_property/geothermal_heat_pump_property_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified geothermal heat pump property expenditures",
    "description": "Expenditures for qualified geothermal heat pump property installed on or in connection with a dwelling unit located in the United States and used as a residence by the taxpayer."
  },
  "fuel_cell_property_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_efficient_property/fuel_cell_property_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified fuel cell property expenditures",
    "description": "Expenditures for qualified fuel cell property installed on or in connection with a dwelling unit located in the United States and used as a principal residence by the taxpayer."
  },
  "fuel_cell_property_capacity": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_efficient_property/fuel_cell_property_capacity.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Capacity of purchased fuel cells",
    "description": "Kilowatts of capacity of qualified fuel cell properties purchased.",
    "unit": "kW"
  },
  "solar_water_heating_property_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_efficient_property/solar_water_heating_property_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified solar water heating property expenditures",
    "description": "Expenditures for property to heat water for use in a dwelling unit located in the United States and used as a residence by the taxpayer if at least half of the energy used by such property for such purpose is derived from the sun."
  },
  "qualified_battery_storage_technology_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_efficient_property/qualified_battery_storage_technology_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Qualified battery storage technology expenditures",
    "description": "Expenditures for qualified battery storage technology installed in connection with a dwelling unit located in the United States and used as a residence by the taxpayer and has the capacity not less than 3kwh."
  },
  "heat_pump_water_heater_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_property/heat_pump_water_heater_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on heat pump water heaters"
  },
  "electric_load_service_center_upgrade_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_property/electric_load_service_center_upgrade_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on electric load service center upgrades"
  },
  "energy_efficient_central_air_conditioner_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_property/energy_efficient_central_air_conditioner_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on energy efficient central air conditioners"
  },
  "electric_wiring_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_property/electric_wiring_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on electric wiring"
  },
  "air_sealing_ventilation_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_property/air_sealing_ventilation_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on air sealing and ventilation"
  },
  "biomass_stove_boiler_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_property/biomass_stove_boiler_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on biomass stoves and boilers"
  },
  "heat_pump_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_property/heat_pump_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on heat pumps"
  },
  "qualified_furnace_or_hot_water_boiler_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_property/qualified_furnace_or_hot_water_boiler_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on qualified natural gas, propane, or oil furnaces or hot water boilers",
    "description": "Must achieve an annual fuel utilization efficiency rate of not less than 95."
  },
  "advanced_main_air_circulating_fan_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_property/advanced_main_air_circulating_fan_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on advanced main air circulating fans",
    "description": "Must be used in a natural gas, propane, or oil furnaces and which have an annual electricity use of no more than 2 percent of the total annual energy use of the furnace."
  },
  "electric_stove_cooktop_range_or_oven_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_property/electric_stove_cooktop_range_or_oven_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on electric stoves, cooktop ranges, or ovens"
  },
  "electric_heat_pump_clothes_dryer_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/energy_property/electric_heat_pump_clothes_dryer_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on electric heat pump clother dryers"
  },
  "residential_efficiency_electrification_retrofit_expenditures": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/residential_efficiency_electrification/residential_efficiency_electrification_retrofit_expenditures.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Expenditures on efficiency and electrification retrofits "
  },
  "current_home_energy_use": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/residential_efficiency_electrification/current_home_energy_use.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Current home energy use in monthly kilowatt hours",
    "unit": "kWh/month"
  },
  "residential_efficiency_electrification_retrofit_energy_savings": {
    "file_path": "../policyengine-us/policyengine_us/variables/household/expense/housing/expenditures/residential_efficiency_electrification/residential_efficiency_electrification_retrofit_energy_savings.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Modeled energy system savings from a residential efficiency and electrification retrofit",
    "description": "In kilowatt hours per month. Do not include savings from projects listed in other electrification and efficiency expenditure categories.",
    "unit": "kWh/month"
  },
  "flat_tax": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/ubi_center/flat_tax.py",
    "parameters": {
      "p": "gov.contrib.ubi_center.flat_tax",
      "agi": "gov.contrib.ubi_center.flat_tax.rate.agi",
      "gross_income": "gov.contrib.ubi_center.flat_tax.rate.gross_income",
      "rate": "gov.contrib.ubi_center.flat_tax.rate",
      "exemption": "gov.contrib.ubi_center.flat_tax.exemption"
    },
    "variables": [
      "filing_status",
      "positive_gross_income",
      "positive_agi"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Flat tax",
    "description": "Flat income tax on federal AGI or gross income."
  },
  "taxsim_sbusinc": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_sbusinc.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_spouse",
      "qualified_business_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "QBI for the spouse taxpayer (TAXSIM)"
  },
  "taxsim_v12": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_v12.py",
    "parameters": {},
    "variables": [
      "tax_unit_taxable_social_security"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Social Security in AGI"
  },
  "taxsim_psemp": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_psemp.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employment income of taxpayer (excluding QBI)"
  },
  "taxsim_state": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_state.py",
    "parameters": {},
    "variables": [
      "state_code_str"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State code",
    "description": "SOI codes. These run from 1 for Alabama to 51 for Wyoming and are not the Census or PSID codes. See state list,and also item two above.). Use zero for \"no state tax calculation\""
  },
  "taxsim_taxsimid": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_taxsimid.py",
    "parameters": {},
    "variables": [
      "tax_unit_id"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Tax unit ID"
  },
  "taxsim_childcare": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_childcare.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "tax_unit_childcare_expenses"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Childcare"
  },
  "taxsim_ui": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_ui.py",
    "parameters": {},
    "variables": [
      "unemployment_compensation",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Unemployment compensation (spouse)",
    "description": "Unemployment compensation received - secondary taxpayer. The split is relevant only 2020-2021."
  },
  "taxsim_dividends": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_dividends.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "dividend_income"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Dividends"
  },
  "taxsim_stcg": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_stcg.py",
    "parameters": {},
    "variables": [
      "short_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Short-term capital gains"
  },
  "taxsim_age3": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_age3.py",
    "parameters": {},
    "variables": [
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Age of third dependent",
    "unit": "year"
  },
  "taxsim_age2": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_age2.py",
    "parameters": {},
    "variables": [
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Age of second dependent",
    "unit": "year"
  },
  "taxsim_fiitax": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_fiitax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "income_tax"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal income tax"
  },
  "taxsim_ltcg": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_ltcg.py",
    "parameters": {},
    "variables": [
      "long_term_capital_gains"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Long-term capital gains"
  },
  "taxsim_siitax": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_siitax.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "state_income_tax"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "State income tax liability"
  },
  "taxsim_v18": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_v18.py",
    "parameters": {},
    "variables": [
      "taxable_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable income in TAXSIM"
  },
  "taxsim_sprofinc": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_sprofinc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSTB income for the spouse of the taxpayer (TAXSIM). Assumed zero."
  },
  "taxsim_ssemp": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_ssemp.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_spouse",
      "self_employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Self-employment income of spouse (excluding QBI)"
  },
  "taxsim_scorp": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_scorp.py",
    "parameters": {},
    "variables": [
      "partnership_s_corp_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "S-corp income"
  },
  "taxsim_age1": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_age1.py",
    "parameters": {},
    "variables": [
      "age",
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Age of first dependent",
    "unit": "year",
    "description": "Age of first dependent. Used for EITC, CTC and CCC. For 1991+ code students between 20 and 23 as 19 to get the EITC calculation correct. Code infants as \"1\". [For compatibiity with taxsim32, dep13-dep18 are accepted and have priority over age1-age3]. If niether dep19 or age1 are present in an uploaded file than depx is used for the number of child eligible for the EIC, CTC and CDCC."
  },
  "taxsim_pensions": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_pensions.py",
    "parameters": {},
    "variables": [
      "pension_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Pensions"
  },
  "taxsim_pbusinc": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_pbusinc.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "qualified_business_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "QBI for the primary taxpayer (TAXSIM)"
  },
  "taxsim_mstat": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_mstat.py",
    "parameters": {},
    "variables": [
      "filing_status"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Marital Status"
  },
  "taxsim_dep18": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_dep18.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "is_child_dependent"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Children under 13"
  },
  "taxsim_sage": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_sage.py",
    "parameters": {},
    "variables": [
      "age",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Age of spouse",
    "unit": "year",
    "description": "Age of spouse (zero if unknown or not a joint return). It is an error to specify a non-zero spouse age for an unmarried taxpayer."
  },
  "taxsim_pprofinc": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_pprofinc.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "SSTB income for the primary taxpayer (TAXSIM). Assumed zero."
  },
  "taxsim_intrec": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_intrec.py",
    "parameters": {},
    "variables": [
      "taxable_interest_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Taxable interest"
  },
  "taxsim_pwages": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_pwages.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "employment_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wages for primary taxpayer",
    "description": "Wage and salary income of Primary Taxpayer"
  },
  "taxsim_year": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_year.py",
    "parameters": {},
    "variables": [],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Policy year",
    "description": "Tax year ending Dec 31(4 digits between 1960 and 2023, but state must be zero if year is before 1977. (We don't have code for state laws before 1977.) State tax laws are effectively inflated by 2.5%/year after 2021."
  },
  "taxsim_dep17": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_dep17.py",
    "parameters": {},
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Children under 17"
  },
  "taxsim_pui": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_pui.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "unemployment_compensation"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Unemployment compensation (primary taxpayer)",
    "description": "Unemployment Compensation received - primary taxpayer."
  },
  "taxsim_v11": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_v11.py",
    "parameters": {},
    "variables": [
      "tax_unit_taxable_unemployment_compensation"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "UI in AGI"
  },
  "taxsim_v25": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_v25.py",
    "parameters": {},
    "variables": [
      "eitc"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "EITC"
  },
  "taxsim_dep13": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_dep13.py",
    "parameters": {},
    "variables": [
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Children under 13"
  },
  "taxsim_swages": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_swages.py",
    "parameters": {},
    "variables": [
      "employment_income",
      "is_tax_unit_spouse"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Wages for spouse",
    "description": "Wage and salary income of spouse"
  },
  "taxsim_gssi": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_gssi.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "social_security"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Gross Social Security Income"
  },
  "taxsim_tfica": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_tfica.py",
    "parameters": {},
    "variables": [],
    "adds": [
      "self_employment_tax",
      "employee_payroll_tax"
    ],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Employee share of FICA + SECA + Additional Medicare Tax"
  },
  "taxsim_v10": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_v10.py",
    "parameters": {},
    "variables": [
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Federal AGI",
    "description": "TAXSIM federal AGI"
  },
  "taxsim_page": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_page.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_head",
      "age"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Age of primary taxpayer",
    "unit": "year",
    "description": "Age of primary taxpayer December 31st of the tax year (or zero). Taxpayer and spouse age variables determine eligibility for additional standard deductions, personal exemption, EITC and AMT exclusions."
  },
  "taxsim_depx": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/taxsim/taxsim_depx.py",
    "parameters": {},
    "variables": [
      "is_tax_unit_dependent"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "int",
    "possible_values": null,
    "enum_options": [],
    "label": "Number of dependents",
    "unit": "person",
    "description": "Number of dependents (for personal exemption calculation). In the case of a file submission, if no age1 or dep19 variable is present, depx is used for the number of eligible children. You can negate this assumption by putting a large number (such as 99) in the age1 field."
  },
  "bonus_guaranteed_deduction": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/congress/wftca/bonus_guaranteed_deduction.py",
    "parameters": {
      "wftca": "gov.contrib.congress.wftca.bonus_guaranteed_deduction",
      "amount": "gov.contrib.congress.wftca.bonus_guaranteed_deduction.amount",
      "phase_out": "gov.contrib.congress.wftca.bonus_guaranteed_deduction.phase_out",
      "threshold": "gov.contrib.congress.wftca.bonus_guaranteed_deduction.phase_out.threshold",
      "rate": "gov.contrib.congress.wftca.bonus_guaranteed_deduction.phase_out.rate"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Bonus guaranteed deduction"
  },
  "basic_income_phase_in": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/ubi_center/basic_income/basic_income_phase_in.py",
    "parameters": {
      "p": "gov.contrib.ubi_center.basic_income.phase_in",
      "include_ss_benefits_as_earnings": "gov.contrib.ubi_center.basic_income.phase_in.include_ss_benefits_as_earnings",
      "per_person": "gov.contrib.ubi_center.basic_income.phase_in.per_person",
      "rate": "gov.contrib.ubi_center.basic_income.phase_in.rate"
    },
    "variables": [
      "tax_unit_earned_income",
      "tax_unit_social_security",
      "tax_unit_size"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Basic income phase-in"
  },
  "basic_income_eligible": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/ubi_center/basic_income/basic_income_eligible.py",
    "parameters": {
      "p": "gov.contrib.ubi_center.basic_income.agi_limit",
      "amount": "gov.contrib.ubi_center.basic_income.agi_limit.amount",
      "in_effect": "gov.contrib.ubi_center.basic_income.agi_limit.in_effect"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "bool",
    "possible_values": null,
    "enum_options": [],
    "label": "Basic income eligible",
    "description": "Eligible for basic income payments based on adjusted gross income."
  },
  "basic_income_before_phase_out": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/ubi_center/basic_income/basic_income_before_phase_out.py",
    "parameters": {
      "p": "gov.contrib.ubi_center.basic_income",
      "in_effect": "gov.contrib.ubi_center.basic_income.phase_in.in_effect",
      "flat": "gov.contrib.ubi_center.basic_income.amount.person.flat",
      "marriage_bonus": "gov.contrib.ubi_center.basic_income.amount.person.marriage_bonus",
      "by_age": "gov.contrib.ubi_center.basic_income.amount.person.by_age",
      "disability": "gov.contrib.ubi_center.basic_income.amount.person.disability",
      "calc": "gov.contrib.ubi_center.basic_income.amount.person.by_age.calc",
      "fpg_percent": "gov.contrib.ubi_center.basic_income.amount.tax_unit.fpg_percent",
      "phase_in": "gov.contrib.ubi_center.basic_income.phase_in",
      "amount": "gov.contrib.ubi_center.basic_income.amount",
      "person": "gov.contrib.ubi_center.basic_income.amount.person",
      "tax_unit": "gov.contrib.ubi_center.basic_income.amount.tax_unit"
    },
    "variables": [
      "age",
      "tax_unit_fpg",
      "is_married",
      "tax_unit_size",
      "basic_income_phase_in",
      "is_ssi_disabled"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Basic income before phase-outs"
  },
  "basic_income_phase_out": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/ubi_center/basic_income/basic_income_phase_out.py",
    "parameters": {
      "bi": "gov.contrib.ubi_center.basic_income",
      "taxable": "gov.contrib.ubi_center.basic_income.taxable",
      "phase_out": "gov.contrib.ubi_center.basic_income.phase_out"
    },
    "variables": [
      "filing_status",
      "adjusted_gross_income",
      "basic_income_before_phase_out"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "Basic income phase-out"
  },
  "basic_income": {
    "file_path": "../policyengine-us/policyengine_us/variables/contrib/ubi_center/basic_income/basic_income.py",
    "parameters": {},
    "variables": [
      "basic_income_phase_out",
      "basic_income_eligible",
      "basic_income_before_phase_out"
    ],
    "adds": [],
    "subtracts": [],
    "defined_for": [],
    "value_type": "float",
    "possible_values": null,
    "enum_options": [],
    "label": "basic income",
    "description": "Total basic income payments for this filer."
  }
}